//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EditableIssuesGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditableIssuesGrid() : base("LightSwitchApplication:EditableIssuesGrid")
        {
            global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditableIssuesGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditableIssuesGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issues_SelectionChanged();

        partial void Issues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Issues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> Issues
        {
            get
            {
                return global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties.Issues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties.Issues;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry
                __EditableIssuesGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeCreated,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeActivated,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeSaveErrorEvent);
            private static void __EditableIssuesGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditableIssuesGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditableIssuesGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditableIssuesGrid_InvokeSavingEvent(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                bool handled = false;
                s.EditableIssuesGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditableIssuesGrid_InvokeSavedEvent(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                s.EditableIssuesGrid_Saved();
            }
            private static bool __EditableIssuesGrid_InvokeClosingEvent(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                bool cancel = false;
                s.EditableIssuesGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditableIssuesGrid_InvokeCreated(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                s.EditableIssuesGrid_Created();
            }
            private static void __EditableIssuesGrid_InvokeActivated(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                s.EditableIssuesGrid_Activated();
            }
            private static bool __EditableIssuesGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditableIssuesGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditableIssuesGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssuesQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            this.Screen.DataWorkspace.ApplicationData.Issues,
                            "IssueStatus"),
                        "AssignedTo"),
                    "ClosedByEngineer");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issues;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue> Issues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties.Issues);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issues",
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_Stub,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_Validate,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_CreateQuery,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_SelectionChanged,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_OnCollectionChanged,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_OnLoaded);
                private static void _Issues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Issues, sf);
                }
                private static void _Issues_Validate(global::LightSwitchApplication.EditableIssuesGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issues_CreateQuery(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, object[] args)
                {
                    return d.IssuesQuery();
                }
                private static void _Issues_SelectionChanged(global::LightSwitchApplication.EditableIssuesGrid s)
                {
                    s.Issues_SelectionChanged();
                }
                private static void _Issues_OnCollectionChanged(global::LightSwitchApplication.EditableIssuesGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Issues_Changed(e);
                }
                private static void _Issues_OnLoaded(global::LightSwitchApplication.EditableIssuesGrid s, bool succeeded)
                {
                    s.Issues_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EngineerDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EngineerDetail(int EngineerId) : base("LightSwitchApplication:EngineerDetail")
        {
                this.EngineerId = EngineerId;
            global::LightSwitchApplication.EngineerDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EngineerDetail CreateInstance(int EngineerId)
        {
            return new global::LightSwitchApplication.EngineerDetail(
                        EngineerId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineer_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Loaded(bool succeeded);

        partial void EngineerId_Changed();

        partial void Issues_SelectionChanged();

        partial void Issues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Loaded(bool succeeded);

        partial void EngineerToAdd_Changed();

        partial void Subordinates_SelectionChanged();

        partial void Subordinates_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subordinates_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer Engineer
        {
            get
            {
                return global::LightSwitchApplication.EngineerDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.Engineer);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EngineerId
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.EngineerId);
            }
            set
            {
                global::LightSwitchApplication.EngineerDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.EngineerId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Issues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> Issues
        {
            get
            {
                return global::LightSwitchApplication.EngineerDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.Issues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer EngineerToAdd
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.EngineerToAdd);
            }
            set
            {
                global::LightSwitchApplication.EngineerDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.EngineerToAdd, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerToAdd_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Subordinates visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Engineer> Subordinates
        {
            get
            {
                return global::LightSwitchApplication.EngineerDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.Subordinates);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subordinates_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the ValidationSummary screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ValidationSummary()
        {
            this.Details.Methods.ValidationSummary.CreateInvocation().Execute();
        }
        partial void ValidationSummary_CanExecute(ref bool result);
        partial void ValidationSummary_Execute();

        /// <summary>
        /// Calls the AssignSubordinate screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AssignSubordinate()
        {
            this.Details.Methods.AssignSubordinate.CreateInvocation().Execute();
        }
        partial void AssignSubordinate_CanExecute(ref bool result);
        partial void AssignSubordinate_Execute();

        /// <summary>
        /// Calls the UnassignSubordinate screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void UnassignSubordinate()
        {
            this.Details.Methods.UnassignSubordinate.CreateInvocation().Execute();
        }
        partial void UnassignSubordinate_CanExecute(ref bool result);
        partial void UnassignSubordinate_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySet, global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSet, global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.Engineer;
                var initializeCommandEntry = global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties.ValidationSummary;
                var initializeMethodEntry = global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties.ValidationSummary;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                __EngineerDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeCreated,
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeActivated,
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeSaveErrorEvent);
            private static void __EngineerDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EngineerDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EngineerDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EngineerDetail_InvokeSavingEvent(global::LightSwitchApplication.EngineerDetail s)
            {
                bool handled = false;
                s.EngineerDetail_Saving(ref handled);
                return handled;
            }
            private static void __EngineerDetail_InvokeSavedEvent(global::LightSwitchApplication.EngineerDetail s)
            {
                s.EngineerDetail_Saved();
            }
            private static bool __EngineerDetail_InvokeClosingEvent(global::LightSwitchApplication.EngineerDetail s)
            {
                bool cancel = false;
                s.EngineerDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __EngineerDetail_InvokeCreated(global::LightSwitchApplication.EngineerDetail s)
            {
                s.EngineerDetail_Created();
            }
            private static void __EngineerDetail_InvokeActivated(global::LightSwitchApplication.EngineerDetail s)
            {
                s.EngineerDetail_Activated();
            }
            private static bool __EngineerDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.EngineerDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.EngineerDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssuesQuery()
            {
                if (this.Screen.Engineer == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Engineer.Details.Properties.Issues).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SubordinatesQuery()
            {
                if (this.Screen.Engineer == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Engineer> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Engineer>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Engineer.Details.Properties.Subordinates).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Manager");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineer;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, int>.Data _EngineerId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issues;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Data _EngineerToAdd;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Subordinates;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data _ValidationSummaryCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data _AssignSubordinateCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data _UnassignSubordinateCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data _ValidationSummaryMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data _AssignSubordinateMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data _UnassignSubordinateMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer> Engineer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.Engineer);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, int> EngineerId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.EngineerId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Issue> Issues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.Issues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer> EngineerToAdd
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.EngineerToAdd);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer> Subordinates
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.Subordinates);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass> ValidationSummary
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties.ValidationSummary);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass> AssignSubordinate
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties.AssignSubordinate);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass> UnassignSubordinate
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties.UnassignSubordinate);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass> ValidationSummary
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties.ValidationSummary);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass> AssignSubordinate
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties.AssignSubordinate);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass> UnassignSubordinate
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties.UnassignSubordinate);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineer",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Engineer_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Engineer_Validate,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Engineer_CreateQuery,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Engineer_OnValueChanged,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Engineer_OnLoaded);
                private static void _Engineer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineer, sf);
                }
                private static void _Engineer_Validate(global::LightSwitchApplication.EngineerDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineer_CreateQuery(global::LightSwitchApplication.EngineerDetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Engineer_OnValueChanged(global::LightSwitchApplication.EngineerDetail s)
                {
                    s.Engineer_Changed();
                }

                private static void _Engineer_OnLoaded(global::LightSwitchApplication.EngineerDetail s, bool succeeded)
                {
                    s.Engineer_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, int>.Entry
                    EngineerId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, int>.Entry(
                        "EngineerId",
                        false,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._EngineerId_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._EngineerId_Validate,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._EngineerId_OnValueChanged);
                private static void _EngineerId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerId, sf);
                }
                private static void _EngineerId_Validate(global::LightSwitchApplication.EngineerDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerId_Validate(r);
                }
                private static void _EngineerId_OnValueChanged(global::LightSwitchApplication.EngineerDetail s)
                {
                    s.EngineerId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issues",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Issues_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Issues_Validate,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Issues_CreateQuery,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Issues_SelectionChanged,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Issues_OnCollectionChanged,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Issues_OnLoaded);
                private static void _Issues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Issues, sf);
                }
                private static void _Issues_Validate(global::LightSwitchApplication.EngineerDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issues_CreateQuery(global::LightSwitchApplication.EngineerDetail.DetailsClass d, object[] args)
                {
                    return d.IssuesQuery();
                }
                private static void _Issues_SelectionChanged(global::LightSwitchApplication.EngineerDetail s)
                {
                    s.Issues_SelectionChanged();
                }
                private static void _Issues_OnCollectionChanged(global::LightSwitchApplication.EngineerDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Issues_Changed(e);
                }
                private static void _Issues_OnLoaded(global::LightSwitchApplication.EngineerDetail s, bool succeeded)
                {
                    s.Issues_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    EngineerToAdd = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "EngineerToAdd",
                        false,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._EngineerToAdd_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._EngineerToAdd_Validate,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._EngineerToAdd_OnValueChanged);
                private static void _EngineerToAdd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerToAdd, sf);
                }
                private static void _EngineerToAdd_Validate(global::LightSwitchApplication.EngineerDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerToAdd_Validate(r);
                }
                private static void _EngineerToAdd_OnValueChanged(global::LightSwitchApplication.EngineerDetail s)
                {
                    s.EngineerToAdd_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Subordinates = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Subordinates",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Subordinates_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Subordinates_Validate,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Subordinates_CreateQuery,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Subordinates_SelectionChanged,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Subordinates_OnCollectionChanged,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Subordinates_OnLoaded);
                private static void _Subordinates_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Subordinates, sf);
                }
                private static void _Subordinates_Validate(global::LightSwitchApplication.EngineerDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Subordinates_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Subordinates_CreateQuery(global::LightSwitchApplication.EngineerDetail.DetailsClass d, object[] args)
                {
                    return d.SubordinatesQuery();
                }
                private static void _Subordinates_SelectionChanged(global::LightSwitchApplication.EngineerDetail s)
                {
                    s.Subordinates_SelectionChanged();
                }
                private static void _Subordinates_OnCollectionChanged(global::LightSwitchApplication.EngineerDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Subordinates_Changed(e);
                }
                private static void _Subordinates_OnLoaded(global::LightSwitchApplication.EngineerDetail s, bool succeeded)
                {
                    s.Subordinates_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                    ValidationSummary = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                        "ValidationSummary",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties._ValidationSummary_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties._ValidationSummary_CreateExecutableObject);
                private static void _ValidationSummary_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ValidationSummaryCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ValidationSummary_CreateExecutableObject(global::LightSwitchApplication.EngineerDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDetail.DetailsClass)d).Methods.ValidationSummary.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                    AssignSubordinate = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                        "AssignSubordinate",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties._AssignSubordinate_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties._AssignSubordinate_CreateExecutableObject);
                private static void _AssignSubordinate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AssignSubordinateCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AssignSubordinate_CreateExecutableObject(global::LightSwitchApplication.EngineerDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDetail.DetailsClass)d).Methods.AssignSubordinate.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                    UnassignSubordinate = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                        "UnassignSubordinate",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties._UnassignSubordinate_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties._UnassignSubordinate_CreateExecutableObject);
                private static void _UnassignSubordinate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._UnassignSubordinateCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _UnassignSubordinate_CreateExecutableObject(global::LightSwitchApplication.EngineerDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDetail.DetailsClass)d).Methods.UnassignSubordinate.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                    ValidationSummary = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                        "ValidationSummary",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._ValidationSummary_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._ValidationSummary_CanInvoke,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._ValidationSummary_InvokeMethod);
                private static void _ValidationSummary_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ValidationSummaryMethod, sf);
                }
                private static global::System.Exception _ValidationSummary_CanInvoke(global::LightSwitchApplication.EngineerDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ValidationSummary_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ValidationSummary_InvokeMethod(global::LightSwitchApplication.EngineerDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ValidationSummary_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                    AssignSubordinate = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                        "AssignSubordinate",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._AssignSubordinate_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._AssignSubordinate_CanInvoke,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._AssignSubordinate_InvokeMethod);
                private static void _AssignSubordinate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AssignSubordinateMethod, sf);
                }
                private static global::System.Exception _AssignSubordinate_CanInvoke(global::LightSwitchApplication.EngineerDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AssignSubordinate_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AssignSubordinate_InvokeMethod(global::LightSwitchApplication.EngineerDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AssignSubordinate_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                    UnassignSubordinate = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                        "UnassignSubordinate",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._UnassignSubordinate_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._UnassignSubordinate_CanInvoke,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._UnassignSubordinate_InvokeMethod);
                private static void _UnassignSubordinate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._UnassignSubordinateMethod, sf);
                }
                private static global::System.Exception _UnassignSubordinate_CanInvoke(global::LightSwitchApplication.EngineerDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.UnassignSubordinate_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _UnassignSubordinate_InvokeMethod(global::LightSwitchApplication.EngineerDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.UnassignSubordinate_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class CreateNewEngineer
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private CreateNewEngineer() : base("LightSwitchApplication:CreateNewEngineer")
        {
            global::LightSwitchApplication.CreateNewEngineer.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static CreateNewEngineer CreateInstance()
        {
            return new global::LightSwitchApplication.CreateNewEngineer(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewEngineer_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewEngineer_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewEngineer_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewEngineer_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewEngineer_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewEngineer_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewEngineer_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void EngineerProperty_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer EngineerProperty
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewEngineer.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewEngineer.DetailsClass.PropertySetProperties.EngineerProperty);
            }
            set
            {
                global::LightSwitchApplication.CreateNewEngineer.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewEngineer.DetailsClass.PropertySetProperties.EngineerProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass, global::LightSwitchApplication.CreateNewEngineer.DetailsClass.PropertySet, global::LightSwitchApplication.CreateNewEngineer.DetailsClass.CommandSet, global::LightSwitchApplication.CreateNewEngineer.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.CreateNewEngineer.DetailsClass.PropertySetProperties.EngineerProperty;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass>.Entry
                __CreateNewEngineerEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass>.Entry(
                    global::LightSwitchApplication.CreateNewEngineer.DetailsClass.__CreateNewEngineer_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.CreateNewEngineer.DetailsClass.__CreateNewEngineer_InvokeSavingEvent,
                    global::LightSwitchApplication.CreateNewEngineer.DetailsClass.__CreateNewEngineer_InvokeSavedEvent,
                    global::LightSwitchApplication.CreateNewEngineer.DetailsClass.__CreateNewEngineer_InvokeClosingEvent,
                    global::LightSwitchApplication.CreateNewEngineer.DetailsClass.__CreateNewEngineer_InvokeCreated,
                    global::LightSwitchApplication.CreateNewEngineer.DetailsClass.__CreateNewEngineer_InvokeActivated,
                    global::LightSwitchApplication.CreateNewEngineer.DetailsClass.__CreateNewEngineer_InvokeSaveErrorEvent);
            private static void __CreateNewEngineer_InvokeInitializeDataWorkspace(global::LightSwitchApplication.CreateNewEngineer s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.CreateNewEngineer_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __CreateNewEngineer_InvokeSavingEvent(global::LightSwitchApplication.CreateNewEngineer s)
            {
                bool handled = false;
                s.CreateNewEngineer_Saving(ref handled);
                return handled;
            }
            private static void __CreateNewEngineer_InvokeSavedEvent(global::LightSwitchApplication.CreateNewEngineer s)
            {
                s.CreateNewEngineer_Saved();
            }
            private static bool __CreateNewEngineer_InvokeClosingEvent(global::LightSwitchApplication.CreateNewEngineer s)
            {
                bool cancel = false;
                s.CreateNewEngineer_Closing(ref cancel);
                return cancel;
            }
            private static void __CreateNewEngineer_InvokeCreated(global::LightSwitchApplication.CreateNewEngineer s)
            {
                s.CreateNewEngineer_Created();
            }
            private static void __CreateNewEngineer_InvokeActivated(global::LightSwitchApplication.CreateNewEngineer s)
            {
                s.CreateNewEngineer_Activated();
            }
            private static bool __CreateNewEngineer_InvokeSaveErrorEvent(global::LightSwitchApplication.CreateNewEngineer s, global::System.Exception ex)
            {
                bool handled = false;
                s.CreateNewEngineer_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.CreateNewEngineer.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.CreateNewEngineer.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.CreateNewEngineer.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass, global::LightSwitchApplication.Engineer>.Data _EngineerProperty;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass, global::LightSwitchApplication.Engineer> EngineerProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.CreateNewEngineer.DetailsClass.PropertySetProperties.EngineerProperty);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    EngineerProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "EngineerProperty",
                        false,
                        global::LightSwitchApplication.CreateNewEngineer.DetailsClass.PropertySetProperties._EngineerProperty_Stub,
                        global::LightSwitchApplication.CreateNewEngineer.DetailsClass.PropertySetProperties._EngineerProperty_Validate,
                        global::LightSwitchApplication.CreateNewEngineer.DetailsClass.PropertySetProperties._EngineerProperty_OnValueChanged);
                private static void _EngineerProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewEngineer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewEngineer, global::LightSwitchApplication.CreateNewEngineer.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.CreateNewEngineer.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerProperty, sf);
                }
                private static void _EngineerProperty_Validate(global::LightSwitchApplication.CreateNewEngineer s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerProperty_Validate(r);
                }
                private static void _EngineerProperty_OnValueChanged(global::LightSwitchApplication.CreateNewEngineer s)
                {
                    s.EngineerProperty_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class SearchEngineers
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private SearchEngineers() : base("LightSwitchApplication:SearchEngineers")
        {
            global::LightSwitchApplication.SearchEngineers.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static SearchEngineers CreateInstance()
        {
            return new global::LightSwitchApplication.SearchEngineers(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchEngineers_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchEngineers_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchEngineers_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchEngineers_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchEngineers_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchEngineers_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchEngineers_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineers_SelectionChanged();

        partial void Engineers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Engineers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Engineer> Engineers
        {
            get
            {
                return global::LightSwitchApplication.SearchEngineers.DetailsClass.GetValue(this, global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySetProperties.Engineers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass, global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySet, global::LightSwitchApplication.SearchEngineers.DetailsClass.CommandSet, global::LightSwitchApplication.SearchEngineers.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySetProperties.Engineers;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass>.Entry
                __SearchEngineersEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass>.Entry(
                    global::LightSwitchApplication.SearchEngineers.DetailsClass.__SearchEngineers_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.SearchEngineers.DetailsClass.__SearchEngineers_InvokeSavingEvent,
                    global::LightSwitchApplication.SearchEngineers.DetailsClass.__SearchEngineers_InvokeSavedEvent,
                    global::LightSwitchApplication.SearchEngineers.DetailsClass.__SearchEngineers_InvokeClosingEvent,
                    global::LightSwitchApplication.SearchEngineers.DetailsClass.__SearchEngineers_InvokeCreated,
                    global::LightSwitchApplication.SearchEngineers.DetailsClass.__SearchEngineers_InvokeActivated,
                    global::LightSwitchApplication.SearchEngineers.DetailsClass.__SearchEngineers_InvokeSaveErrorEvent);
            private static void __SearchEngineers_InvokeInitializeDataWorkspace(global::LightSwitchApplication.SearchEngineers s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.SearchEngineers_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __SearchEngineers_InvokeSavingEvent(global::LightSwitchApplication.SearchEngineers s)
            {
                bool handled = false;
                s.SearchEngineers_Saving(ref handled);
                return handled;
            }
            private static void __SearchEngineers_InvokeSavedEvent(global::LightSwitchApplication.SearchEngineers s)
            {
                s.SearchEngineers_Saved();
            }
            private static bool __SearchEngineers_InvokeClosingEvent(global::LightSwitchApplication.SearchEngineers s)
            {
                bool cancel = false;
                s.SearchEngineers_Closing(ref cancel);
                return cancel;
            }
            private static void __SearchEngineers_InvokeCreated(global::LightSwitchApplication.SearchEngineers s)
            {
                s.SearchEngineers_Created();
            }
            private static void __SearchEngineers_InvokeActivated(global::LightSwitchApplication.SearchEngineers s)
            {
                s.SearchEngineers_Activated();
            }
            private static bool __SearchEngineers_InvokeSaveErrorEvent(global::LightSwitchApplication.SearchEngineers s, global::System.Exception ex)
            {
                bool handled = false;
                s.SearchEngineers_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.SearchEngineers.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.SearchEngineers.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EngineersQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ApplicationData.Engineers,
                    "Manager");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineers;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass, global::LightSwitchApplication.Engineer> Engineers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySetProperties.Engineers);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineers",
                        global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySetProperties._Engineers_Stub,
                        global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySetProperties._Engineers_Validate,
                        global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySetProperties._Engineers_CreateQuery,
                        global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySetProperties._Engineers_SelectionChanged,
                        global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySetProperties._Engineers_OnCollectionChanged,
                        global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySetProperties._Engineers_OnLoaded);
                private static void _Engineers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SearchEngineers.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.SearchEngineers.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineers, sf);
                }
                private static void _Engineers_Validate(global::LightSwitchApplication.SearchEngineers s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineers_CreateQuery(global::LightSwitchApplication.SearchEngineers.DetailsClass d, object[] args)
                {
                    return d.EngineersQuery();
                }
                private static void _Engineers_SelectionChanged(global::LightSwitchApplication.SearchEngineers s)
                {
                    s.Engineers_SelectionChanged();
                }
                private static void _Engineers_OnCollectionChanged(global::LightSwitchApplication.SearchEngineers s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Engineers_Changed(e);
                }
                private static void _Engineers_OnLoaded(global::LightSwitchApplication.SearchEngineers s, bool succeeded)
                {
                    s.Engineers_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EngineerIssues
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EngineerIssues(int EngineerId) : base("LightSwitchApplication:EngineerIssues")
        {
                this.EngineerId = EngineerId;
            global::LightSwitchApplication.EngineerIssues.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EngineerIssues CreateInstance(int EngineerId)
        {
            return new global::LightSwitchApplication.EngineerIssues(
                        EngineerId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineer_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Loaded(bool succeeded);

        partial void EngineerId_Changed();

        partial void Issues_SelectionChanged();

        partial void Issues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer Engineer
        {
            get
            {
                return global::LightSwitchApplication.EngineerIssues.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.Engineer);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EngineerId
        {
            get 
            {
                return global::LightSwitchApplication.EngineerIssues.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.EngineerId);
            }
            set
            {
                global::LightSwitchApplication.EngineerIssues.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.EngineerId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Issues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> Issues
        {
            get
            {
                return global::LightSwitchApplication.EngineerIssues.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.Issues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySet, global::LightSwitchApplication.EngineerIssues.DetailsClass.CommandSet, global::LightSwitchApplication.EngineerIssues.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.Engineer;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass>.Entry
                __EngineerIssuesEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass>.Entry(
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeSavingEvent,
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeSavedEvent,
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeClosingEvent,
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeCreated,
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeActivated,
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeSaveErrorEvent);
            private static void __EngineerIssues_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EngineerIssues s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EngineerIssues_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EngineerIssues_InvokeSavingEvent(global::LightSwitchApplication.EngineerIssues s)
            {
                bool handled = false;
                s.EngineerIssues_Saving(ref handled);
                return handled;
            }
            private static void __EngineerIssues_InvokeSavedEvent(global::LightSwitchApplication.EngineerIssues s)
            {
                s.EngineerIssues_Saved();
            }
            private static bool __EngineerIssues_InvokeClosingEvent(global::LightSwitchApplication.EngineerIssues s)
            {
                bool cancel = false;
                s.EngineerIssues_Closing(ref cancel);
                return cancel;
            }
            private static void __EngineerIssues_InvokeCreated(global::LightSwitchApplication.EngineerIssues s)
            {
                s.EngineerIssues_Created();
            }
            private static void __EngineerIssues_InvokeActivated(global::LightSwitchApplication.EngineerIssues s)
            {
                s.EngineerIssues_Activated();
            }
            private static bool __EngineerIssues_InvokeSaveErrorEvent(global::LightSwitchApplication.EngineerIssues s, global::System.Exception ex)
            {
                bool handled = false;
                s.EngineerIssues_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EngineerIssues.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EngineerIssues.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssuesQuery()
            {
                if (this.Screen.Engineer == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Engineer.Details.Properties.Issues).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        loader,
                        "IssueStatus"),
                    "ClosedByEngineer");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineer;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, int>.Data _EngineerId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issues;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Engineer> Engineer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.Engineer);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, int> EngineerId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.EngineerId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Issue> Issues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.Issues);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineer",
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Engineer_Stub,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Engineer_Validate,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Engineer_CreateQuery,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Engineer_OnValueChanged,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Engineer_OnLoaded);
                private static void _Engineer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerIssues.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineerIssues.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineer, sf);
                }
                private static void _Engineer_Validate(global::LightSwitchApplication.EngineerIssues s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineer_CreateQuery(global::LightSwitchApplication.EngineerIssues.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Engineer_OnValueChanged(global::LightSwitchApplication.EngineerIssues s)
                {
                    s.Engineer_Changed();
                }

                private static void _Engineer_OnLoaded(global::LightSwitchApplication.EngineerIssues s, bool succeeded)
                {
                    s.Engineer_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, int>.Entry
                    EngineerId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, int>.Entry(
                        "EngineerId",
                        false,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._EngineerId_Stub,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._EngineerId_Validate,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._EngineerId_OnValueChanged);
                private static void _EngineerId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerIssues.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, int>.Data> c, global::LightSwitchApplication.EngineerIssues.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerId, sf);
                }
                private static void _EngineerId_Validate(global::LightSwitchApplication.EngineerIssues s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerId_Validate(r);
                }
                private static void _EngineerId_OnValueChanged(global::LightSwitchApplication.EngineerIssues s)
                {
                    s.EngineerId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issues",
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Issues_Stub,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Issues_Validate,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Issues_CreateQuery,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Issues_SelectionChanged,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Issues_OnCollectionChanged,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Issues_OnLoaded);
                private static void _Issues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerIssues.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.EngineerIssues.DetailsClass d, object sf)
                {
                    c(d, ref d._Issues, sf);
                }
                private static void _Issues_Validate(global::LightSwitchApplication.EngineerIssues s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issues_CreateQuery(global::LightSwitchApplication.EngineerIssues.DetailsClass d, object[] args)
                {
                    return d.IssuesQuery();
                }
                private static void _Issues_SelectionChanged(global::LightSwitchApplication.EngineerIssues s)
                {
                    s.Issues_SelectionChanged();
                }
                private static void _Issues_OnCollectionChanged(global::LightSwitchApplication.EngineerIssues s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Issues_Changed(e);
                }
                private static void _Issues_OnLoaded(global::LightSwitchApplication.EngineerIssues s, bool succeeded)
                {
                    s.Issues_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Setup
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private Setup() : base("LightSwitchApplication:Setup")
        {
            global::LightSwitchApplication.Setup.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static Setup CreateInstance()
        {
            return new global::LightSwitchApplication.Setup(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Setup_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Setup_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Setup_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Setup_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Setup_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Setup_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Setup_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Priorities_SelectionChanged();

        partial void Priorities_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priorities_Loaded(bool succeeded);

        partial void IssueStatusSet_SelectionChanged();

        partial void IssueStatusSet_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_Loaded(bool succeeded);

        partial void Users_SelectionChanged();

        partial void Users_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Loaded(bool succeeded);

        partial void Departments_SelectionChanged();

        partial void Departments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Priorities visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Priority> Priorities
        {
            get
            {
                return global::LightSwitchApplication.Setup.DetailsClass.GetValue(this, global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties.Priorities);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priorities_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IssueStatusSet visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.IssueStatus> IssueStatusSet
        {
            get
            {
                return global::LightSwitchApplication.Setup.DetailsClass.GetValue(this, global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties.IssueStatusSet);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Users visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.User> Users
        {
            get
            {
                return global::LightSwitchApplication.Setup.DetailsClass.GetValue(this, global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties.Users);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Departments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Department> Departments
        {
            get
            {
                return global::LightSwitchApplication.Setup.DetailsClass.GetValue(this, global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties.Departments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the SetupData screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SetupData()
        {
            this.Details.Methods.SetupData.CreateInvocation().Execute();
        }
        partial void SetupData_CanExecute(ref bool result);
        partial void SetupData_Execute();

        /// <summary>
        /// Calls the CloseAllIssues screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CloseAllIssues()
        {
            this.Details.Methods.CloseAllIssues.CreateInvocation().Execute();
        }
        partial void CloseAllIssues_CanExecute(ref bool result);
        partial void CloseAllIssues_Execute();

        /// <summary>
        /// Calls the DeleteAllIssues screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DeleteAllIssues()
        {
            this.Details.Methods.DeleteAllIssues.CreateInvocation().Execute();
        }
        partial void DeleteAllIssues_CanExecute(ref bool result);
        partial void DeleteAllIssues_Execute();

        /// <summary>
        /// Calls the ArchiveIssues screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ArchiveIssues()
        {
            this.Details.Methods.ArchiveIssues.CreateInvocation().Execute();
        }
        partial void ArchiveIssues_CanExecute(ref bool result);
        partial void ArchiveIssues_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.Setup.DetailsClass.PropertySet, global::LightSwitchApplication.Setup.DetailsClass.CommandSet, global::LightSwitchApplication.Setup.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties.Priorities;
                var initializeCommandEntry = global::LightSwitchApplication.Setup.DetailsClass.CommandSetProperties.SetupData;
                var initializeMethodEntry = global::LightSwitchApplication.Setup.DetailsClass.MethodSetProperties.SetupData;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Entry
                __SetupEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Entry(
                    global::LightSwitchApplication.Setup.DetailsClass.__Setup_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.Setup.DetailsClass.__Setup_InvokeSavingEvent,
                    global::LightSwitchApplication.Setup.DetailsClass.__Setup_InvokeSavedEvent,
                    global::LightSwitchApplication.Setup.DetailsClass.__Setup_InvokeClosingEvent,
                    global::LightSwitchApplication.Setup.DetailsClass.__Setup_InvokeCreated,
                    global::LightSwitchApplication.Setup.DetailsClass.__Setup_InvokeActivated,
                    global::LightSwitchApplication.Setup.DetailsClass.__Setup_InvokeSaveErrorEvent);
            private static void __Setup_InvokeInitializeDataWorkspace(global::LightSwitchApplication.Setup s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.Setup_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __Setup_InvokeSavingEvent(global::LightSwitchApplication.Setup s)
            {
                bool handled = false;
                s.Setup_Saving(ref handled);
                return handled;
            }
            private static void __Setup_InvokeSavedEvent(global::LightSwitchApplication.Setup s)
            {
                s.Setup_Saved();
            }
            private static bool __Setup_InvokeClosingEvent(global::LightSwitchApplication.Setup s)
            {
                bool cancel = false;
                s.Setup_Closing(ref cancel);
                return cancel;
            }
            private static void __Setup_InvokeCreated(global::LightSwitchApplication.Setup s)
            {
                s.Setup_Created();
            }
            private static void __Setup_InvokeActivated(global::LightSwitchApplication.Setup s)
            {
                s.Setup_Activated();
            }
            private static bool __Setup_InvokeSaveErrorEvent(global::LightSwitchApplication.Setup s, global::System.Exception ex)
            {
                bool handled = false;
                s.Setup_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.Setup.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.Setup.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.Setup.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable PrioritiesQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Priorities;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssueStatusSetQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.IssueStatusSet;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable UsersQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ApplicationData.Users,
                    "Department");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable DepartmentsQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Departments;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.Priority>.Data _Priorities;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.IssueStatus>.Data _IssueStatusSet;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.User>.Data _Users;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.Department>.Data _Departments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Data _SetupDataCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Data _CloseAllIssuesCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Data _DeleteAllIssuesCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Data _ArchiveIssuesCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Data _SetupDataMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Data _CloseAllIssuesMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Data _DeleteAllIssuesMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Data _ArchiveIssuesMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.Priority> Priorities
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.Priority>)base.GetItem(global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties.Priorities);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.IssueStatus> IssueStatusSet
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.IssueStatus>)base.GetItem(global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties.IssueStatusSet);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.User> Users
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.User>)base.GetItem(global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties.Users);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.Department> Departments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.Department>)base.GetItem(global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties.Departments);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass> SetupData
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>)base.GetItem(global::LightSwitchApplication.Setup.DetailsClass.CommandSetProperties.SetupData);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass> CloseAllIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>)base.GetItem(global::LightSwitchApplication.Setup.DetailsClass.CommandSetProperties.CloseAllIssues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass> DeleteAllIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>)base.GetItem(global::LightSwitchApplication.Setup.DetailsClass.CommandSetProperties.DeleteAllIssues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass> ArchiveIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>)base.GetItem(global::LightSwitchApplication.Setup.DetailsClass.CommandSetProperties.ArchiveIssues);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass> SetupData
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>)base.GetItem(global::LightSwitchApplication.Setup.DetailsClass.MethodSetProperties.SetupData);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass> CloseAllIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>)base.GetItem(global::LightSwitchApplication.Setup.DetailsClass.MethodSetProperties.CloseAllIssues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass> DeleteAllIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>)base.GetItem(global::LightSwitchApplication.Setup.DetailsClass.MethodSetProperties.DeleteAllIssues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass> ArchiveIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>)base.GetItem(global::LightSwitchApplication.Setup.DetailsClass.MethodSetProperties.ArchiveIssues);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.Priority>.Entry
                    Priorities = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.Priority>.Entry(
                        "Priorities",
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._Priorities_Stub,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._Priorities_Validate,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._Priorities_CreateQuery,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._Priorities_SelectionChanged,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._Priorities_OnCollectionChanged,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._Priorities_OnLoaded);
                private static void _Priorities_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Setup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.Priority>.Data> c, global::LightSwitchApplication.Setup.DetailsClass d, object sf)
                {
                    c(d, ref d._Priorities, sf);
                }
                private static void _Priorities_Validate(global::LightSwitchApplication.Setup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Priorities_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Priorities_CreateQuery(global::LightSwitchApplication.Setup.DetailsClass d, object[] args)
                {
                    return d.PrioritiesQuery();
                }
                private static void _Priorities_SelectionChanged(global::LightSwitchApplication.Setup s)
                {
                    s.Priorities_SelectionChanged();
                }
                private static void _Priorities_OnCollectionChanged(global::LightSwitchApplication.Setup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Priorities_Changed(e);
                }
                private static void _Priorities_OnLoaded(global::LightSwitchApplication.Setup s, bool succeeded)
                {
                    s.Priorities_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.IssueStatus>.Entry
                    IssueStatusSet = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.IssueStatus>.Entry(
                        "IssueStatusSet",
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._IssueStatusSet_Stub,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._IssueStatusSet_Validate,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._IssueStatusSet_CreateQuery,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._IssueStatusSet_SelectionChanged,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._IssueStatusSet_OnCollectionChanged,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._IssueStatusSet_OnLoaded);
                private static void _IssueStatusSet_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Setup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.IssueStatus>.Data> c, global::LightSwitchApplication.Setup.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueStatusSet, sf);
                }
                private static void _IssueStatusSet_Validate(global::LightSwitchApplication.Setup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueStatusSet_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IssueStatusSet_CreateQuery(global::LightSwitchApplication.Setup.DetailsClass d, object[] args)
                {
                    return d.IssueStatusSetQuery();
                }
                private static void _IssueStatusSet_SelectionChanged(global::LightSwitchApplication.Setup s)
                {
                    s.IssueStatusSet_SelectionChanged();
                }
                private static void _IssueStatusSet_OnCollectionChanged(global::LightSwitchApplication.Setup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IssueStatusSet_Changed(e);
                }
                private static void _IssueStatusSet_OnLoaded(global::LightSwitchApplication.Setup s, bool succeeded)
                {
                    s.IssueStatusSet_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.User>.Entry
                    Users = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.User>.Entry(
                        "Users",
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._Users_Stub,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._Users_Validate,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._Users_CreateQuery,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._Users_SelectionChanged,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._Users_OnCollectionChanged,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._Users_OnLoaded);
                private static void _Users_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Setup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.User>.Data> c, global::LightSwitchApplication.Setup.DetailsClass d, object sf)
                {
                    c(d, ref d._Users, sf);
                }
                private static void _Users_Validate(global::LightSwitchApplication.Setup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Users_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Users_CreateQuery(global::LightSwitchApplication.Setup.DetailsClass d, object[] args)
                {
                    return d.UsersQuery();
                }
                private static void _Users_SelectionChanged(global::LightSwitchApplication.Setup s)
                {
                    s.Users_SelectionChanged();
                }
                private static void _Users_OnCollectionChanged(global::LightSwitchApplication.Setup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Users_Changed(e);
                }
                private static void _Users_OnLoaded(global::LightSwitchApplication.Setup s, bool succeeded)
                {
                    s.Users_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.Department>.Entry
                    Departments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.Department>.Entry(
                        "Departments",
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._Departments_Stub,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._Departments_Validate,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._Departments_CreateQuery,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._Departments_SelectionChanged,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._Departments_OnCollectionChanged,
                        global::LightSwitchApplication.Setup.DetailsClass.PropertySetProperties._Departments_OnLoaded);
                private static void _Departments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Setup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass, global::LightSwitchApplication.Department>.Data> c, global::LightSwitchApplication.Setup.DetailsClass d, object sf)
                {
                    c(d, ref d._Departments, sf);
                }
                private static void _Departments_Validate(global::LightSwitchApplication.Setup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Departments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Departments_CreateQuery(global::LightSwitchApplication.Setup.DetailsClass d, object[] args)
                {
                    return d.DepartmentsQuery();
                }
                private static void _Departments_SelectionChanged(global::LightSwitchApplication.Setup s)
                {
                    s.Departments_SelectionChanged();
                }
                private static void _Departments_OnCollectionChanged(global::LightSwitchApplication.Setup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Departments_Changed(e);
                }
                private static void _Departments_OnLoaded(global::LightSwitchApplication.Setup s, bool succeeded)
                {
                    s.Departments_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Entry
                    SetupData = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Entry(
                        "SetupData",
                        global::LightSwitchApplication.Setup.DetailsClass.CommandSetProperties._SetupData_Stub,
                        global::LightSwitchApplication.Setup.DetailsClass.CommandSetProperties._SetupData_CreateExecutableObject);
                private static void _SetupData_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Setup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Data> c, global::LightSwitchApplication.Setup.DetailsClass d, object sf)
                {
                    c(d, ref d._SetupDataCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SetupData_CreateExecutableObject(global::LightSwitchApplication.Setup.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.Setup.DetailsClass)d).Methods.SetupData.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Entry
                    CloseAllIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Entry(
                        "CloseAllIssues",
                        global::LightSwitchApplication.Setup.DetailsClass.CommandSetProperties._CloseAllIssues_Stub,
                        global::LightSwitchApplication.Setup.DetailsClass.CommandSetProperties._CloseAllIssues_CreateExecutableObject);
                private static void _CloseAllIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Setup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Data> c, global::LightSwitchApplication.Setup.DetailsClass d, object sf)
                {
                    c(d, ref d._CloseAllIssuesCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CloseAllIssues_CreateExecutableObject(global::LightSwitchApplication.Setup.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.Setup.DetailsClass)d).Methods.CloseAllIssues.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Entry
                    DeleteAllIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Entry(
                        "DeleteAllIssues",
                        global::LightSwitchApplication.Setup.DetailsClass.CommandSetProperties._DeleteAllIssues_Stub,
                        global::LightSwitchApplication.Setup.DetailsClass.CommandSetProperties._DeleteAllIssues_CreateExecutableObject);
                private static void _DeleteAllIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Setup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Data> c, global::LightSwitchApplication.Setup.DetailsClass d, object sf)
                {
                    c(d, ref d._DeleteAllIssuesCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DeleteAllIssues_CreateExecutableObject(global::LightSwitchApplication.Setup.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.Setup.DetailsClass)d).Methods.DeleteAllIssues.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Entry
                    ArchiveIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Entry(
                        "ArchiveIssues",
                        global::LightSwitchApplication.Setup.DetailsClass.CommandSetProperties._ArchiveIssues_Stub,
                        global::LightSwitchApplication.Setup.DetailsClass.CommandSetProperties._ArchiveIssues_CreateExecutableObject);
                private static void _ArchiveIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Setup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Data> c, global::LightSwitchApplication.Setup.DetailsClass d, object sf)
                {
                    c(d, ref d._ArchiveIssuesCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ArchiveIssues_CreateExecutableObject(global::LightSwitchApplication.Setup.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.Setup.DetailsClass)d).Methods.ArchiveIssues.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Entry
                    SetupData = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Entry(
                        "SetupData",
                        global::LightSwitchApplication.Setup.DetailsClass.MethodSetProperties._SetupData_Stub,
                        global::LightSwitchApplication.Setup.DetailsClass.MethodSetProperties._SetupData_CanInvoke,
                        global::LightSwitchApplication.Setup.DetailsClass.MethodSetProperties._SetupData_InvokeMethod);
                private static void _SetupData_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Setup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Data> c, global::LightSwitchApplication.Setup.DetailsClass d, object sf)
                {
                    c(d, ref d._SetupDataMethod, sf);
                }
                private static global::System.Exception _SetupData_CanInvoke(global::LightSwitchApplication.Setup.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SetupData_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SetupData_InvokeMethod(global::LightSwitchApplication.Setup.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SetupData_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Entry
                    CloseAllIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Entry(
                        "CloseAllIssues",
                        global::LightSwitchApplication.Setup.DetailsClass.MethodSetProperties._CloseAllIssues_Stub,
                        global::LightSwitchApplication.Setup.DetailsClass.MethodSetProperties._CloseAllIssues_CanInvoke,
                        global::LightSwitchApplication.Setup.DetailsClass.MethodSetProperties._CloseAllIssues_InvokeMethod);
                private static void _CloseAllIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Setup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Data> c, global::LightSwitchApplication.Setup.DetailsClass d, object sf)
                {
                    c(d, ref d._CloseAllIssuesMethod, sf);
                }
                private static global::System.Exception _CloseAllIssues_CanInvoke(global::LightSwitchApplication.Setup.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CloseAllIssues_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CloseAllIssues_InvokeMethod(global::LightSwitchApplication.Setup.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CloseAllIssues_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Entry
                    DeleteAllIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Entry(
                        "DeleteAllIssues",
                        global::LightSwitchApplication.Setup.DetailsClass.MethodSetProperties._DeleteAllIssues_Stub,
                        global::LightSwitchApplication.Setup.DetailsClass.MethodSetProperties._DeleteAllIssues_CanInvoke,
                        global::LightSwitchApplication.Setup.DetailsClass.MethodSetProperties._DeleteAllIssues_InvokeMethod);
                private static void _DeleteAllIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Setup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Data> c, global::LightSwitchApplication.Setup.DetailsClass d, object sf)
                {
                    c(d, ref d._DeleteAllIssuesMethod, sf);
                }
                private static global::System.Exception _DeleteAllIssues_CanInvoke(global::LightSwitchApplication.Setup.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DeleteAllIssues_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DeleteAllIssues_InvokeMethod(global::LightSwitchApplication.Setup.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DeleteAllIssues_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Entry
                    ArchiveIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Entry(
                        "ArchiveIssues",
                        global::LightSwitchApplication.Setup.DetailsClass.MethodSetProperties._ArchiveIssues_Stub,
                        global::LightSwitchApplication.Setup.DetailsClass.MethodSetProperties._ArchiveIssues_CanInvoke,
                        global::LightSwitchApplication.Setup.DetailsClass.MethodSetProperties._ArchiveIssues_InvokeMethod);
                private static void _ArchiveIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Setup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Setup, global::LightSwitchApplication.Setup.DetailsClass>.Data> c, global::LightSwitchApplication.Setup.DetailsClass d, object sf)
                {
                    c(d, ref d._ArchiveIssuesMethod, sf);
                }
                private static global::System.Exception _ArchiveIssues_CanInvoke(global::LightSwitchApplication.Setup.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ArchiveIssues_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ArchiveIssues_InvokeMethod(global::LightSwitchApplication.Setup.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ArchiveIssues_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class IssueDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private IssueDetail(int IssueId) : base("LightSwitchApplication:IssueDetail")
        {
                this.IssueId = IssueId;
            global::LightSwitchApplication.IssueDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static IssueDetail CreateInstance(int IssueId)
        {
            return new global::LightSwitchApplication.IssueDetail(
                        IssueId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issue_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Loaded(bool succeeded);

        partial void IssueId_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue Issue
        {
            get
            {
                return global::LightSwitchApplication.IssueDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.Issue);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int IssueId
        {
            get 
            {
                return global::LightSwitchApplication.IssueDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.IssueId);
            }
            set
            {
                global::LightSwitchApplication.IssueDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.IssueId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the DiscardIssueRespChanges screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DiscardIssueRespChanges()
        {
            this.Details.Methods.DiscardIssueRespChanges.CreateInvocation().Execute();
        }
        partial void DiscardIssueRespChanges_CanExecute(ref bool result);
        partial void DiscardIssueRespChanges_Execute();

        /// <summary>
        /// Calls the DeleteIssue screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DeleteIssue()
        {
            this.Details.Methods.DeleteIssue.CreateInvocation().Execute();
        }
        partial void DeleteIssue_CanExecute(ref bool result);
        partial void DeleteIssue_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySet, global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSet, global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.Issue;
                var initializeCommandEntry = global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties.DiscardIssueRespChanges;
                var initializeMethodEntry = global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties.DiscardIssueRespChanges;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry
                __IssueDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeCreated,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeActivated,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeSaveErrorEvent);
            private static void __IssueDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.IssueDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.IssueDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __IssueDetail_InvokeSavingEvent(global::LightSwitchApplication.IssueDetail s)
            {
                bool handled = false;
                s.IssueDetail_Saving(ref handled);
                return handled;
            }
            private static void __IssueDetail_InvokeSavedEvent(global::LightSwitchApplication.IssueDetail s)
            {
                s.IssueDetail_Saved();
            }
            private static bool __IssueDetail_InvokeClosingEvent(global::LightSwitchApplication.IssueDetail s)
            {
                bool cancel = false;
                s.IssueDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __IssueDetail_InvokeCreated(global::LightSwitchApplication.IssueDetail s)
            {
                s.IssueDetail_Created();
            }
            private static void __IssueDetail_InvokeActivated(global::LightSwitchApplication.IssueDetail s)
            {
                s.IssueDetail_Activated();
            }
            private static bool __IssueDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.IssueDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.IssueDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issue;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>.Data _IssueId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data _DiscardIssueRespChangesCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data _DeleteIssueCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data _DiscardIssueRespChangesMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data _DeleteIssueMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue> Issue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.Issue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int> IssueId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.IssueId);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass> DiscardIssueRespChanges
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties.DiscardIssueRespChanges);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass> DeleteIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties.DeleteIssue);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass> DiscardIssueRespChanges
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties.DiscardIssueRespChanges);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass> DeleteIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties.DeleteIssue);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issue",
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_Validate,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_CreateQuery,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_OnValueChanged,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_OnLoaded);
                private static void _Issue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Issue, sf);
                }
                private static void _Issue_Validate(global::LightSwitchApplication.IssueDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issue_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issue_CreateQuery(global::LightSwitchApplication.IssueDetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Issue_OnValueChanged(global::LightSwitchApplication.IssueDetail s)
                {
                    s.Issue_Changed();
                }

                private static void _Issue_OnLoaded(global::LightSwitchApplication.IssueDetail s, bool succeeded)
                {
                    s.Issue_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>.Entry
                    IssueId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>.Entry(
                        "IssueId",
                        false,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._IssueId_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._IssueId_Validate,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._IssueId_OnValueChanged);
                private static void _IssueId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueId, sf);
                }
                private static void _IssueId_Validate(global::LightSwitchApplication.IssueDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueId_Validate(r);
                }
                private static void _IssueId_OnValueChanged(global::LightSwitchApplication.IssueDetail s)
                {
                    s.IssueId_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry
                    DiscardIssueRespChanges = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry(
                        "DiscardIssueRespChanges",
                        global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties._DiscardIssueRespChanges_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties._DiscardIssueRespChanges_CreateExecutableObject);
                private static void _DiscardIssueRespChanges_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._DiscardIssueRespChangesCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DiscardIssueRespChanges_CreateExecutableObject(global::LightSwitchApplication.IssueDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueDetail.DetailsClass)d).Methods.DiscardIssueRespChanges.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry
                    DeleteIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry(
                        "DeleteIssue",
                        global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties._DeleteIssue_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties._DeleteIssue_CreateExecutableObject);
                private static void _DeleteIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._DeleteIssueCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DeleteIssue_CreateExecutableObject(global::LightSwitchApplication.IssueDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueDetail.DetailsClass)d).Methods.DeleteIssue.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry
                    DiscardIssueRespChanges = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry(
                        "DiscardIssueRespChanges",
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._DiscardIssueRespChanges_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._DiscardIssueRespChanges_CanInvoke,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._DiscardIssueRespChanges_InvokeMethod);
                private static void _DiscardIssueRespChanges_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._DiscardIssueRespChangesMethod, sf);
                }
                private static global::System.Exception _DiscardIssueRespChanges_CanInvoke(global::LightSwitchApplication.IssueDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DiscardIssueRespChanges_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DiscardIssueRespChanges_InvokeMethod(global::LightSwitchApplication.IssueDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DiscardIssueRespChanges_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry
                    DeleteIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry(
                        "DeleteIssue",
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._DeleteIssue_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._DeleteIssue_CanInvoke,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._DeleteIssue_InvokeMethod);
                private static void _DeleteIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._DeleteIssueMethod, sf);
                }
                private static global::System.Exception _DeleteIssue_CanInvoke(global::LightSwitchApplication.IssueDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DeleteIssue_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DeleteIssue_InvokeMethod(global::LightSwitchApplication.IssueDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DeleteIssue_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class IssueDetailManager
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private IssueDetailManager(int IssueId) : base("LightSwitchApplication:IssueDetailManager")
        {
                this.IssueId = IssueId;
            global::LightSwitchApplication.IssueDetailManager.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static IssueDetailManager CreateInstance(int IssueId)
        {
            return new global::LightSwitchApplication.IssueDetailManager(
                        IssueId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetailManager_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetailManager_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetailManager_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetailManager_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetailManager_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetailManager_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetailManager_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issue_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Loaded(bool succeeded);

        partial void IssueId_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue Issue
        {
            get
            {
                return global::LightSwitchApplication.IssueDetailManager.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties.Issue);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int IssueId
        {
            get 
            {
                return global::LightSwitchApplication.IssueDetailManager.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties.IssueId);
            }
            set
            {
                global::LightSwitchApplication.IssueDetailManager.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties.IssueId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySet, global::LightSwitchApplication.IssueDetailManager.DetailsClass.CommandSet, global::LightSwitchApplication.IssueDetailManager.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties.Issue;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass>.Entry
                __IssueDetailManagerEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass>.Entry(
                    global::LightSwitchApplication.IssueDetailManager.DetailsClass.__IssueDetailManager_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.IssueDetailManager.DetailsClass.__IssueDetailManager_InvokeSavingEvent,
                    global::LightSwitchApplication.IssueDetailManager.DetailsClass.__IssueDetailManager_InvokeSavedEvent,
                    global::LightSwitchApplication.IssueDetailManager.DetailsClass.__IssueDetailManager_InvokeClosingEvent,
                    global::LightSwitchApplication.IssueDetailManager.DetailsClass.__IssueDetailManager_InvokeCreated,
                    global::LightSwitchApplication.IssueDetailManager.DetailsClass.__IssueDetailManager_InvokeActivated,
                    global::LightSwitchApplication.IssueDetailManager.DetailsClass.__IssueDetailManager_InvokeSaveErrorEvent);
            private static void __IssueDetailManager_InvokeInitializeDataWorkspace(global::LightSwitchApplication.IssueDetailManager s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.IssueDetailManager_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __IssueDetailManager_InvokeSavingEvent(global::LightSwitchApplication.IssueDetailManager s)
            {
                bool handled = false;
                s.IssueDetailManager_Saving(ref handled);
                return handled;
            }
            private static void __IssueDetailManager_InvokeSavedEvent(global::LightSwitchApplication.IssueDetailManager s)
            {
                s.IssueDetailManager_Saved();
            }
            private static bool __IssueDetailManager_InvokeClosingEvent(global::LightSwitchApplication.IssueDetailManager s)
            {
                bool cancel = false;
                s.IssueDetailManager_Closing(ref cancel);
                return cancel;
            }
            private static void __IssueDetailManager_InvokeCreated(global::LightSwitchApplication.IssueDetailManager s)
            {
                s.IssueDetailManager_Created();
            }
            private static void __IssueDetailManager_InvokeActivated(global::LightSwitchApplication.IssueDetailManager s)
            {
                s.IssueDetailManager_Activated();
            }
            private static bool __IssueDetailManager_InvokeSaveErrorEvent(global::LightSwitchApplication.IssueDetailManager s, global::System.Exception ex)
            {
                bool handled = false;
                s.IssueDetailManager_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.IssueDetailManager.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.IssueDetailManager.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issue;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, int>.Data _IssueId;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, global::LightSwitchApplication.Issue> Issue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties.Issue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, int> IssueId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties.IssueId);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issue",
                        global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties._Issue_Stub,
                        global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties._Issue_Validate,
                        global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties._Issue_CreateQuery,
                        global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties._Issue_OnValueChanged,
                        global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties._Issue_OnLoaded);
                private static void _Issue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetailManager.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.IssueDetailManager.DetailsClass d, object sf)
                {
                    c(d, ref d._Issue, sf);
                }
                private static void _Issue_Validate(global::LightSwitchApplication.IssueDetailManager s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issue_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issue_CreateQuery(global::LightSwitchApplication.IssueDetailManager.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Issue_OnValueChanged(global::LightSwitchApplication.IssueDetailManager s)
                {
                    s.Issue_Changed();
                }

                private static void _Issue_OnLoaded(global::LightSwitchApplication.IssueDetailManager s, bool succeeded)
                {
                    s.Issue_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, int>.Entry
                    IssueId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, int>.Entry(
                        "IssueId",
                        false,
                        global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties._IssueId_Stub,
                        global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties._IssueId_Validate,
                        global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties._IssueId_OnValueChanged);
                private static void _IssueId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetailManager.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, int>.Data> c, global::LightSwitchApplication.IssueDetailManager.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueId, sf);
                }
                private static void _IssueId_Validate(global::LightSwitchApplication.IssueDetailManager s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueId_Validate(r);
                }
                private static void _IssueId_OnValueChanged(global::LightSwitchApplication.IssueDetailManager s)
                {
                    s.IssueId_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EngineerDashboard
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EngineerDashboard(int EngineerId) : base("LightSwitchApplication:EngineerDashboard")
        {
                this.EngineerId = EngineerId;
            global::LightSwitchApplication.EngineerDashboard.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EngineerDashboard CreateInstance(int EngineerId)
        {
            return new global::LightSwitchApplication.EngineerDashboard(
                        EngineerId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineer_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Loaded(bool succeeded);

        partial void EngineerId_Changed();

        partial void IssuesOverdueLabel_Changed();

        partial void ScreenTitle_Changed();

        partial void Issues5OldestLabel_Changed();

        partial void HighPriorityIssuesLabel_Changed();

        partial void OldIssuesLabel_Changed();

        partial void QuickFindIssue_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer Engineer
        {
            get
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Engineer);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EngineerId
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.EngineerId);
            }
            set
            {
                global::LightSwitchApplication.EngineerDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.EngineerId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IssuesOverdueLabel
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.IssuesOverdueLabel);
            }
            set
            {
                global::LightSwitchApplication.EngineerDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.IssuesOverdueLabel, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesOverdueLabel_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ScreenTitle
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.ScreenTitle);
            }
            set
            {
                global::LightSwitchApplication.EngineerDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.ScreenTitle, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScreenTitle_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Issues5OldestLabel
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Issues5OldestLabel);
            }
            set
            {
                global::LightSwitchApplication.EngineerDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Issues5OldestLabel, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues5OldestLabel_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string HighPriorityIssuesLabel
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.HighPriorityIssuesLabel);
            }
            set
            {
                global::LightSwitchApplication.EngineerDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.HighPriorityIssuesLabel, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HighPriorityIssuesLabel_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string OldIssuesLabel
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.OldIssuesLabel);
            }
            set
            {
                global::LightSwitchApplication.EngineerDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.OldIssuesLabel, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OldIssuesLabel_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue QuickFindIssue
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.QuickFindIssue);
            }
            set
            {
                global::LightSwitchApplication.EngineerDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.QuickFindIssue, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuickFindIssue_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the RefreshAllScreens screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RefreshAllScreens()
        {
            this.Details.Methods.RefreshAllScreens.CreateInvocation().Execute();
        }
        partial void RefreshAllScreens_CanExecute(ref bool result);
        partial void RefreshAllScreens_Execute();

        /// <summary>
        /// Calls the OpenIssueSearchScreen screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenIssueSearchScreen()
        {
            this.Details.Methods.OpenIssueSearchScreen.CreateInvocation().Execute();
        }
        partial void OpenIssueSearchScreen_CanExecute(ref bool result);
        partial void OpenIssueSearchScreen_Execute();

        /// <summary>
        /// Calls the OpenNewIssueScreen screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenNewIssueScreen()
        {
            this.Details.Methods.OpenNewIssueScreen.CreateInvocation().Execute();
        }
        partial void OpenNewIssueScreen_CanExecute(ref bool result);
        partial void OpenNewIssueScreen_Execute();

        /// <summary>
        /// Calls the OpenIssue screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenIssue()
        {
            this.Details.Methods.OpenIssue.CreateInvocation().Execute();
        }
        partial void OpenIssue_CanExecute(ref bool result);
        partial void OpenIssue_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySet, global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSet, global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Engineer;
                var initializeCommandEntry = global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.RefreshAllScreens;
                var initializeMethodEntry = global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.RefreshAllScreens;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                __EngineerDashboardEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeSavingEvent,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeSavedEvent,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeClosingEvent,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeCreated,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeActivated,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeSaveErrorEvent);
            private static void __EngineerDashboard_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EngineerDashboard s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EngineerDashboard_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EngineerDashboard_InvokeSavingEvent(global::LightSwitchApplication.EngineerDashboard s)
            {
                bool handled = false;
                s.EngineerDashboard_Saving(ref handled);
                return handled;
            }
            private static void __EngineerDashboard_InvokeSavedEvent(global::LightSwitchApplication.EngineerDashboard s)
            {
                s.EngineerDashboard_Saved();
            }
            private static bool __EngineerDashboard_InvokeClosingEvent(global::LightSwitchApplication.EngineerDashboard s)
            {
                bool cancel = false;
                s.EngineerDashboard_Closing(ref cancel);
                return cancel;
            }
            private static void __EngineerDashboard_InvokeCreated(global::LightSwitchApplication.EngineerDashboard s)
            {
                s.EngineerDashboard_Created();
            }
            private static void __EngineerDashboard_InvokeActivated(global::LightSwitchApplication.EngineerDashboard s)
            {
                s.EngineerDashboard_Activated();
            }
            private static bool __EngineerDashboard_InvokeSaveErrorEvent(global::LightSwitchApplication.EngineerDashboard s, global::System.Exception ex)
            {
                bool handled = false;
                s.EngineerDashboard_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineer;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>.Data _EngineerId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data _IssuesOverdueLabel;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data _ScreenTitle;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data _Issues5OldestLabel;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data _HighPriorityIssuesLabel;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data _OldIssuesLabel;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Issue>.Data _QuickFindIssue;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _RefreshAllScreensCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _OpenIssueSearchScreenCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _OpenNewIssueScreenCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _OpenIssueCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _RefreshAllScreensMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _OpenIssueSearchScreenMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _OpenNewIssueScreenMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _OpenIssueMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer> Engineer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Engineer);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int> EngineerId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.EngineerId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string> IssuesOverdueLabel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.IssuesOverdueLabel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string> ScreenTitle
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.ScreenTitle);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string> Issues5OldestLabel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Issues5OldestLabel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string> HighPriorityIssuesLabel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.HighPriorityIssuesLabel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string> OldIssuesLabel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.OldIssuesLabel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Issue> QuickFindIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.QuickFindIssue);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> RefreshAllScreens
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.RefreshAllScreens);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> OpenIssueSearchScreen
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.OpenIssueSearchScreen);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> OpenNewIssueScreen
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.OpenNewIssueScreen);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> OpenIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.OpenIssue);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> RefreshAllScreens
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.RefreshAllScreens);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> OpenIssueSearchScreen
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.OpenIssueSearchScreen);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> OpenNewIssueScreen
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.OpenNewIssueScreen);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> OpenIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.OpenIssue);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineer",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_CreateQuery,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_OnValueChanged,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_OnLoaded);
                private static void _Engineer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineer, sf);
                }
                private static void _Engineer_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineer_CreateQuery(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Engineer_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.Engineer_Changed();
                }

                private static void _Engineer_OnLoaded(global::LightSwitchApplication.EngineerDashboard s, bool succeeded)
                {
                    s.Engineer_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>.Entry
                    EngineerId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>.Entry(
                        "EngineerId",
                        false,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._EngineerId_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._EngineerId_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._EngineerId_OnValueChanged);
                private static void _EngineerId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerId, sf);
                }
                private static void _EngineerId_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerId_Validate(r);
                }
                private static void _EngineerId_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.EngineerId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry
                    IssuesOverdueLabel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry(
                        "IssuesOverdueLabel",
                        false,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._IssuesOverdueLabel_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._IssuesOverdueLabel_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._IssuesOverdueLabel_OnValueChanged);
                private static void _IssuesOverdueLabel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._IssuesOverdueLabel, sf);
                }
                private static void _IssuesOverdueLabel_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssuesOverdueLabel_Validate(r);
                }
                private static void _IssuesOverdueLabel_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.IssuesOverdueLabel_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry
                    ScreenTitle = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry(
                        "ScreenTitle",
                        false,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._ScreenTitle_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._ScreenTitle_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._ScreenTitle_OnValueChanged);
                private static void _ScreenTitle_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ScreenTitle, sf);
                }
                private static void _ScreenTitle_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ScreenTitle_Validate(r);
                }
                private static void _ScreenTitle_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.ScreenTitle_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry
                    Issues5OldestLabel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry(
                        "Issues5OldestLabel",
                        false,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Issues5OldestLabel_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Issues5OldestLabel_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Issues5OldestLabel_OnValueChanged);
                private static void _Issues5OldestLabel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._Issues5OldestLabel, sf);
                }
                private static void _Issues5OldestLabel_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issues5OldestLabel_Validate(r);
                }
                private static void _Issues5OldestLabel_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.Issues5OldestLabel_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry
                    HighPriorityIssuesLabel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry(
                        "HighPriorityIssuesLabel",
                        false,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._HighPriorityIssuesLabel_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._HighPriorityIssuesLabel_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._HighPriorityIssuesLabel_OnValueChanged);
                private static void _HighPriorityIssuesLabel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._HighPriorityIssuesLabel, sf);
                }
                private static void _HighPriorityIssuesLabel_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.HighPriorityIssuesLabel_Validate(r);
                }
                private static void _HighPriorityIssuesLabel_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.HighPriorityIssuesLabel_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry
                    OldIssuesLabel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry(
                        "OldIssuesLabel",
                        false,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._OldIssuesLabel_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._OldIssuesLabel_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._OldIssuesLabel_OnValueChanged);
                private static void _OldIssuesLabel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OldIssuesLabel, sf);
                }
                private static void _OldIssuesLabel_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.OldIssuesLabel_Validate(r);
                }
                private static void _OldIssuesLabel_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.OldIssuesLabel_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    QuickFindIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "QuickFindIssue",
                        false,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._QuickFindIssue_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._QuickFindIssue_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._QuickFindIssue_OnValueChanged);
                private static void _QuickFindIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._QuickFindIssue, sf);
                }
                private static void _QuickFindIssue_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.QuickFindIssue_Validate(r);
                }
                private static void _QuickFindIssue_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.QuickFindIssue_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    RefreshAllScreens = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "RefreshAllScreens",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._RefreshAllScreens_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._RefreshAllScreens_CreateExecutableObject);
                private static void _RefreshAllScreens_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._RefreshAllScreensCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _RefreshAllScreens_CreateExecutableObject(global::LightSwitchApplication.EngineerDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDashboard.DetailsClass)d).Methods.RefreshAllScreens.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    OpenIssueSearchScreen = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "OpenIssueSearchScreen",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._OpenIssueSearchScreen_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._OpenIssueSearchScreen_CreateExecutableObject);
                private static void _OpenIssueSearchScreen_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIssueSearchScreenCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenIssueSearchScreen_CreateExecutableObject(global::LightSwitchApplication.EngineerDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDashboard.DetailsClass)d).Methods.OpenIssueSearchScreen.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    OpenNewIssueScreen = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "OpenNewIssueScreen",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._OpenNewIssueScreen_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._OpenNewIssueScreen_CreateExecutableObject);
                private static void _OpenNewIssueScreen_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenNewIssueScreenCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenNewIssueScreen_CreateExecutableObject(global::LightSwitchApplication.EngineerDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDashboard.DetailsClass)d).Methods.OpenNewIssueScreen.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    OpenIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "OpenIssue",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._OpenIssue_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._OpenIssue_CreateExecutableObject);
                private static void _OpenIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIssueCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenIssue_CreateExecutableObject(global::LightSwitchApplication.EngineerDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDashboard.DetailsClass)d).Methods.OpenIssue.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    RefreshAllScreens = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "RefreshAllScreens",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._RefreshAllScreens_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._RefreshAllScreens_CanInvoke,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._RefreshAllScreens_InvokeMethod);
                private static void _RefreshAllScreens_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._RefreshAllScreensMethod, sf);
                }
                private static global::System.Exception _RefreshAllScreens_CanInvoke(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.RefreshAllScreens_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _RefreshAllScreens_InvokeMethod(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.RefreshAllScreens_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    OpenIssueSearchScreen = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "OpenIssueSearchScreen",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenIssueSearchScreen_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenIssueSearchScreen_CanInvoke,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenIssueSearchScreen_InvokeMethod);
                private static void _OpenIssueSearchScreen_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIssueSearchScreenMethod, sf);
                }
                private static global::System.Exception _OpenIssueSearchScreen_CanInvoke(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenIssueSearchScreen_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenIssueSearchScreen_InvokeMethod(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenIssueSearchScreen_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    OpenNewIssueScreen = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "OpenNewIssueScreen",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenNewIssueScreen_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenNewIssueScreen_CanInvoke,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenNewIssueScreen_InvokeMethod);
                private static void _OpenNewIssueScreen_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenNewIssueScreenMethod, sf);
                }
                private static global::System.Exception _OpenNewIssueScreen_CanInvoke(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenNewIssueScreen_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenNewIssueScreen_InvokeMethod(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenNewIssueScreen_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    OpenIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "OpenIssue",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenIssue_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenIssue_CanInvoke,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenIssue_InvokeMethod);
                private static void _OpenIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIssueMethod, sf);
                }
                private static global::System.Exception _OpenIssue_CanInvoke(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenIssue_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenIssue_InvokeMethod(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenIssue_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EngineerTimeTracking
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EngineerTimeTracking(int EngineerId) : base("LightSwitchApplication:EngineerTimeTracking")
        {
                this.EngineerId = EngineerId;
            global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EngineerTimeTracking CreateInstance(int EngineerId)
        {
            return new global::LightSwitchApplication.EngineerTimeTracking(
                        EngineerId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerTimeTracking_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerTimeTracking_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerTimeTracking_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerTimeTracking_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerTimeTracking_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerTimeTracking_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerTimeTracking_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineer_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Loaded(bool succeeded);

        partial void EngineerId_Changed();

        partial void TimeTracking_SelectionChanged();

        partial void TimeTracking_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTracking_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer Engineer
        {
            get
            {
                return global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties.Engineer);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EngineerId
        {
            get 
            {
                return global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties.EngineerId);
            }
            set
            {
                global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties.EngineerId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TimeTracking visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeTracking> TimeTracking
        {
            get
            {
                return global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties.TimeTracking);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTracking_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the MergeDuplicateIssues screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void MergeDuplicateIssues()
        {
            this.Details.Methods.MergeDuplicateIssues.CreateInvocation().Execute();
        }
        partial void MergeDuplicateIssues_CanExecute(ref bool result);
        partial void MergeDuplicateIssues_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySet, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.CommandSet, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties.Engineer;
                var initializeCommandEntry = global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.CommandSetProperties.MergeDuplicateIssues;
                var initializeMethodEntry = global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.MethodSetProperties.MergeDuplicateIssues;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass>.Entry
                __EngineerTimeTrackingEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass>.Entry(
                    global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.__EngineerTimeTracking_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.__EngineerTimeTracking_InvokeSavingEvent,
                    global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.__EngineerTimeTracking_InvokeSavedEvent,
                    global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.__EngineerTimeTracking_InvokeClosingEvent,
                    global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.__EngineerTimeTracking_InvokeCreated,
                    global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.__EngineerTimeTracking_InvokeActivated,
                    global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.__EngineerTimeTracking_InvokeSaveErrorEvent);
            private static void __EngineerTimeTracking_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EngineerTimeTracking s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EngineerTimeTracking_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EngineerTimeTracking_InvokeSavingEvent(global::LightSwitchApplication.EngineerTimeTracking s)
            {
                bool handled = false;
                s.EngineerTimeTracking_Saving(ref handled);
                return handled;
            }
            private static void __EngineerTimeTracking_InvokeSavedEvent(global::LightSwitchApplication.EngineerTimeTracking s)
            {
                s.EngineerTimeTracking_Saved();
            }
            private static bool __EngineerTimeTracking_InvokeClosingEvent(global::LightSwitchApplication.EngineerTimeTracking s)
            {
                bool cancel = false;
                s.EngineerTimeTracking_Closing(ref cancel);
                return cancel;
            }
            private static void __EngineerTimeTracking_InvokeCreated(global::LightSwitchApplication.EngineerTimeTracking s)
            {
                s.EngineerTimeTracking_Created();
            }
            private static void __EngineerTimeTracking_InvokeActivated(global::LightSwitchApplication.EngineerTimeTracking s)
            {
                s.EngineerTimeTracking_Activated();
            }
            private static bool __EngineerTimeTracking_InvokeSaveErrorEvent(global::LightSwitchApplication.EngineerTimeTracking s, global::System.Exception ex)
            {
                bool handled = false;
                s.EngineerTimeTracking_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TimeTrackingQuery()
            {
                if (this.Screen.Engineer == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTracking> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTracking>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Engineer.Details.Properties.TimeTracking).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Issue");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineer;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, int>.Data _EngineerId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, global::LightSwitchApplication.TimeTracking>.Data _TimeTracking;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass>.Data _MergeDuplicateIssuesCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass>.Data _MergeDuplicateIssuesMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, global::LightSwitchApplication.Engineer> Engineer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties.Engineer);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, int> EngineerId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties.EngineerId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, global::LightSwitchApplication.TimeTracking> TimeTracking
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, global::LightSwitchApplication.TimeTracking>)base.GetItem(global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties.TimeTracking);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass> MergeDuplicateIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.CommandSetProperties.MergeDuplicateIssues);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass> MergeDuplicateIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.MethodSetProperties.MergeDuplicateIssues);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineer",
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties._Engineer_Stub,
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties._Engineer_Validate,
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties._Engineer_CreateQuery,
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties._Engineer_OnValueChanged,
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties._Engineer_OnLoaded);
                private static void _Engineer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineer, sf);
                }
                private static void _Engineer_Validate(global::LightSwitchApplication.EngineerTimeTracking s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineer_CreateQuery(global::LightSwitchApplication.EngineerTimeTracking.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Engineer_OnValueChanged(global::LightSwitchApplication.EngineerTimeTracking s)
                {
                    s.Engineer_Changed();
                }

                private static void _Engineer_OnLoaded(global::LightSwitchApplication.EngineerTimeTracking s, bool succeeded)
                {
                    s.Engineer_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, int>.Entry
                    EngineerId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, int>.Entry(
                        "EngineerId",
                        false,
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties._EngineerId_Stub,
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties._EngineerId_Validate,
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties._EngineerId_OnValueChanged);
                private static void _EngineerId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, int>.Data> c, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerId, sf);
                }
                private static void _EngineerId_Validate(global::LightSwitchApplication.EngineerTimeTracking s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerId_Validate(r);
                }
                private static void _EngineerId_OnValueChanged(global::LightSwitchApplication.EngineerTimeTracking s)
                {
                    s.EngineerId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, global::LightSwitchApplication.TimeTracking>.Entry
                    TimeTracking = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, global::LightSwitchApplication.TimeTracking>.Entry(
                        "TimeTracking",
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties._TimeTracking_Stub,
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties._TimeTracking_Validate,
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties._TimeTracking_CreateQuery,
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties._TimeTracking_SelectionChanged,
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties._TimeTracking_OnCollectionChanged,
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.PropertySetProperties._TimeTracking_OnLoaded);
                private static void _TimeTracking_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, global::LightSwitchApplication.TimeTracking>.Data> c, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeTracking, sf);
                }
                private static void _TimeTracking_Validate(global::LightSwitchApplication.EngineerTimeTracking s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TimeTracking_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TimeTracking_CreateQuery(global::LightSwitchApplication.EngineerTimeTracking.DetailsClass d, object[] args)
                {
                    return d.TimeTrackingQuery();
                }
                private static void _TimeTracking_SelectionChanged(global::LightSwitchApplication.EngineerTimeTracking s)
                {
                    s.TimeTracking_SelectionChanged();
                }
                private static void _TimeTracking_OnCollectionChanged(global::LightSwitchApplication.EngineerTimeTracking s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TimeTracking_Changed(e);
                }
                private static void _TimeTracking_OnLoaded(global::LightSwitchApplication.EngineerTimeTracking s, bool succeeded)
                {
                    s.TimeTracking_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass>.Entry
                    MergeDuplicateIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass>.Entry(
                        "MergeDuplicateIssues",
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.CommandSetProperties._MergeDuplicateIssues_Stub,
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.CommandSetProperties._MergeDuplicateIssues_CreateExecutableObject);
                private static void _MergeDuplicateIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._MergeDuplicateIssuesCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _MergeDuplicateIssues_CreateExecutableObject(global::LightSwitchApplication.EngineerTimeTracking.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerTimeTracking.DetailsClass)d).Methods.MergeDuplicateIssues.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass>.Entry
                    MergeDuplicateIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass>.Entry(
                        "MergeDuplicateIssues",
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.MethodSetProperties._MergeDuplicateIssues_Stub,
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.MethodSetProperties._MergeDuplicateIssues_CanInvoke,
                        global::LightSwitchApplication.EngineerTimeTracking.DetailsClass.MethodSetProperties._MergeDuplicateIssues_InvokeMethod);
                private static void _MergeDuplicateIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerTimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerTimeTracking, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerTimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._MergeDuplicateIssuesMethod, sf);
                }
                private static global::System.Exception _MergeDuplicateIssues_CanInvoke(global::LightSwitchApplication.EngineerTimeTracking.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.MergeDuplicateIssues_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _MergeDuplicateIssues_InvokeMethod(global::LightSwitchApplication.EngineerTimeTracking.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.MergeDuplicateIssues_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class CreateNewIssue
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private CreateNewIssue() : base("LightSwitchApplication:CreateNewIssue")
        {
            global::LightSwitchApplication.CreateNewIssue.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static CreateNewIssue CreateInstance()
        {
            return new global::LightSwitchApplication.CreateNewIssue(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssue_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssue_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssue_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssue_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssue_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssue_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssue_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void IssueProperty_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue IssueProperty
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties.IssueProperty);
            }
            set
            {
                global::LightSwitchApplication.CreateNewIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties.IssueProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySet, global::LightSwitchApplication.CreateNewIssue.DetailsClass.CommandSet, global::LightSwitchApplication.CreateNewIssue.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties.IssueProperty;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass>.Entry
                __CreateNewIssueEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass>.Entry(
                    global::LightSwitchApplication.CreateNewIssue.DetailsClass.__CreateNewIssue_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.CreateNewIssue.DetailsClass.__CreateNewIssue_InvokeSavingEvent,
                    global::LightSwitchApplication.CreateNewIssue.DetailsClass.__CreateNewIssue_InvokeSavedEvent,
                    global::LightSwitchApplication.CreateNewIssue.DetailsClass.__CreateNewIssue_InvokeClosingEvent,
                    global::LightSwitchApplication.CreateNewIssue.DetailsClass.__CreateNewIssue_InvokeCreated,
                    global::LightSwitchApplication.CreateNewIssue.DetailsClass.__CreateNewIssue_InvokeActivated,
                    global::LightSwitchApplication.CreateNewIssue.DetailsClass.__CreateNewIssue_InvokeSaveErrorEvent);
            private static void __CreateNewIssue_InvokeInitializeDataWorkspace(global::LightSwitchApplication.CreateNewIssue s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.CreateNewIssue_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __CreateNewIssue_InvokeSavingEvent(global::LightSwitchApplication.CreateNewIssue s)
            {
                bool handled = false;
                s.CreateNewIssue_Saving(ref handled);
                return handled;
            }
            private static void __CreateNewIssue_InvokeSavedEvent(global::LightSwitchApplication.CreateNewIssue s)
            {
                s.CreateNewIssue_Saved();
            }
            private static bool __CreateNewIssue_InvokeClosingEvent(global::LightSwitchApplication.CreateNewIssue s)
            {
                bool cancel = false;
                s.CreateNewIssue_Closing(ref cancel);
                return cancel;
            }
            private static void __CreateNewIssue_InvokeCreated(global::LightSwitchApplication.CreateNewIssue s)
            {
                s.CreateNewIssue_Created();
            }
            private static void __CreateNewIssue_InvokeActivated(global::LightSwitchApplication.CreateNewIssue s)
            {
                s.CreateNewIssue_Activated();
            }
            private static bool __CreateNewIssue_InvokeSaveErrorEvent(global::LightSwitchApplication.CreateNewIssue s, global::System.Exception ex)
            {
                bool handled = false;
                s.CreateNewIssue_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.CreateNewIssue.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.CreateNewIssue.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data _IssueProperty;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.Issue> IssueProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties.IssueProperty);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    IssueProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "IssueProperty",
                        false,
                        global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties._IssueProperty_Stub,
                        global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties._IssueProperty_Validate,
                        global::LightSwitchApplication.CreateNewIssue.DetailsClass.PropertySetProperties._IssueProperty_OnValueChanged);
                private static void _IssueProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssue, global::LightSwitchApplication.CreateNewIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.CreateNewIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueProperty, sf);
                }
                private static void _IssueProperty_Validate(global::LightSwitchApplication.CreateNewIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueProperty_Validate(r);
                }
                private static void _IssueProperty_OnValueChanged(global::LightSwitchApplication.CreateNewIssue s)
                {
                    s.IssueProperty_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EngineersManagerGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EngineersManagerGrid() : base("LightSwitchApplication:EngineersManagerGrid")
        {
            global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EngineersManagerGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EngineersManagerGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineers_SelectionChanged();

        partial void Engineers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Engineers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Engineer> Engineers
        {
            get
            {
                return global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties.Engineers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the ViewDashboard screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ViewDashboard()
        {
            this.Details.Methods.ViewDashboard.CreateInvocation().Execute();
        }
        partial void ViewDashboard_CanExecute(ref bool result);
        partial void ViewDashboard_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties.Engineers;
                var initializeCommandEntry = global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSetProperties.ViewDashboard;
                var initializeMethodEntry = global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties.ViewDashboard;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry
                __EngineersManagerGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeCreated,
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeActivated,
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeSaveErrorEvent);
            private static void __EngineersManagerGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EngineersManagerGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EngineersManagerGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EngineersManagerGrid_InvokeSavingEvent(global::LightSwitchApplication.EngineersManagerGrid s)
            {
                bool handled = false;
                s.EngineersManagerGrid_Saving(ref handled);
                return handled;
            }
            private static void __EngineersManagerGrid_InvokeSavedEvent(global::LightSwitchApplication.EngineersManagerGrid s)
            {
                s.EngineersManagerGrid_Saved();
            }
            private static bool __EngineersManagerGrid_InvokeClosingEvent(global::LightSwitchApplication.EngineersManagerGrid s)
            {
                bool cancel = false;
                s.EngineersManagerGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EngineersManagerGrid_InvokeCreated(global::LightSwitchApplication.EngineersManagerGrid s)
            {
                s.EngineersManagerGrid_Created();
            }
            private static void __EngineersManagerGrid_InvokeActivated(global::LightSwitchApplication.EngineersManagerGrid s)
            {
                s.EngineersManagerGrid_Activated();
            }
            private static bool __EngineersManagerGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EngineersManagerGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EngineersManagerGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EngineersQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Engineers;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineers;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data _ViewDashboardCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data _ViewDashboardMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer> Engineers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties.Engineers);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass> ViewDashboard
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSetProperties.ViewDashboard);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass> ViewDashboard
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties.ViewDashboard);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineers",
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._Engineers_Stub,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._Engineers_Validate,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._Engineers_CreateQuery,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._Engineers_SelectionChanged,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._Engineers_OnCollectionChanged,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._Engineers_OnLoaded);
                private static void _Engineers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineers, sf);
                }
                private static void _Engineers_Validate(global::LightSwitchApplication.EngineersManagerGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineers_CreateQuery(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, object[] args)
                {
                    return d.EngineersQuery();
                }
                private static void _Engineers_SelectionChanged(global::LightSwitchApplication.EngineersManagerGrid s)
                {
                    s.Engineers_SelectionChanged();
                }
                private static void _Engineers_OnCollectionChanged(global::LightSwitchApplication.EngineersManagerGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Engineers_Changed(e);
                }
                private static void _Engineers_OnLoaded(global::LightSwitchApplication.EngineersManagerGrid s, bool succeeded)
                {
                    s.Engineers_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry
                    ViewDashboard = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry(
                        "ViewDashboard",
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSetProperties._ViewDashboard_Stub,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSetProperties._ViewDashboard_CreateExecutableObject);
                private static void _ViewDashboard_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewDashboardCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ViewDashboard_CreateExecutableObject(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineersManagerGrid.DetailsClass)d).Methods.ViewDashboard.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry
                    ViewDashboard = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry(
                        "ViewDashboard",
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties._ViewDashboard_Stub,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties._ViewDashboard_CanInvoke,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties._ViewDashboard_InvokeMethod);
                private static void _ViewDashboard_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewDashboardMethod, sf);
                }
                private static global::System.Exception _ViewDashboard_CanInvoke(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ViewDashboard_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ViewDashboard_InvokeMethod(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ViewDashboard_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class IssueSearchAll
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private IssueSearchAll(global::System.Nullable<int> IssueEngineerId) : base("LightSwitchApplication:IssueSearchAll")
        {
                this.IssueEngineerId = IssueEngineerId;
            global::LightSwitchApplication.IssueSearchAll.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static IssueSearchAll CreateInstance(global::System.Nullable<int> IssueEngineerId)
        {
            return new global::LightSwitchApplication.IssueSearchAll(
                        IssueEngineerId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueSearchAll_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueSearchAll_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueSearchAll_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueSearchAll_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueSearchAll_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueSearchAll_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueSearchAll_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issues_SelectionChanged();

        partial void Issues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Loaded(bool succeeded);

        partial void IssueEngineerId_Changed();

        partial void IssueProblemDescription_Changed();

        partial void IssueCreateDateTimeStart_Changed();

        partial void IssueCreateDateTimeEnd_Changed();

        partial void EngineerSelector_Changed();

        partial void PrioritySelector_Changed();

        partial void IssueStatusSelector_Changed();

        /// <summary>
        /// Gets the Issues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> Issues
        {
            get
            {
                return global::LightSwitchApplication.IssueSearchAll.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.Issues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IssueEngineerId
        {
            get 
            {
                return global::LightSwitchApplication.IssueSearchAll.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueEngineerId);
            }
            set
            {
                global::LightSwitchApplication.IssueSearchAll.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueEngineerId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueEngineerId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IssueProblemDescription
        {
            get 
            {
                return global::LightSwitchApplication.IssueSearchAll.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueProblemDescription);
            }
            set
            {
                global::LightSwitchApplication.IssueSearchAll.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueProblemDescription, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueProblemDescription_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> IssueCreateDateTimeStart
        {
            get 
            {
                return global::LightSwitchApplication.IssueSearchAll.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueCreateDateTimeStart);
            }
            set
            {
                global::LightSwitchApplication.IssueSearchAll.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueCreateDateTimeStart, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueCreateDateTimeStart_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> IssueCreateDateTimeEnd
        {
            get 
            {
                return global::LightSwitchApplication.IssueSearchAll.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueCreateDateTimeEnd);
            }
            set
            {
                global::LightSwitchApplication.IssueSearchAll.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueCreateDateTimeEnd, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueCreateDateTimeEnd_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer EngineerSelector
        {
            get 
            {
                return global::LightSwitchApplication.IssueSearchAll.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.EngineerSelector);
            }
            set
            {
                global::LightSwitchApplication.IssueSearchAll.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.EngineerSelector, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSelector_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Priority PrioritySelector
        {
            get 
            {
                return global::LightSwitchApplication.IssueSearchAll.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.PrioritySelector);
            }
            set
            {
                global::LightSwitchApplication.IssueSearchAll.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.PrioritySelector, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrioritySelector_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.IssueStatus IssueStatusSelector
        {
            get 
            {
                return global::LightSwitchApplication.IssueSearchAll.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueStatusSelector);
            }
            set
            {
                global::LightSwitchApplication.IssueSearchAll.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueStatusSelector, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSelector_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the ToggleVisibility screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ToggleVisibility()
        {
            this.Details.Methods.ToggleVisibility.CreateInvocation().Execute();
        }
        partial void ToggleVisibility_CanExecute(ref bool result);
        partial void ToggleVisibility_Execute();

        /// <summary>
        /// Calls the SaveButton screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveButton()
        {
            this.Details.Methods.SaveButton.CreateInvocation().Execute();
        }
        partial void SaveButton_CanExecute(ref bool result);
        partial void SaveButton_Execute();

        /// <summary>
        /// Calls the CancelButton screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelButton()
        {
            this.Details.Methods.CancelButton.CreateInvocation().Execute();
        }
        partial void CancelButton_CanExecute(ref bool result);
        partial void CancelButton_Execute();

        /// <summary>
        /// Calls the AddItem screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddItem()
        {
            this.Details.Methods.AddItem.CreateInvocation().Execute();
        }
        partial void AddItem_CanExecute(ref bool result);
        partial void AddItem_Execute();

        /// <summary>
        /// Calls the EditItem screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EditItem()
        {
            this.Details.Methods.EditItem.CreateInvocation().Execute();
        }
        partial void EditItem_CanExecute(ref bool result);
        partial void EditItem_Execute();

        /// <summary>
        /// Calls the DeleteItem screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DeleteItem()
        {
            this.Details.Methods.DeleteItem.CreateInvocation().Execute();
        }
        partial void DeleteItem_CanExecute(ref bool result);
        partial void DeleteItem_Execute();

        /// <summary>
        /// Calls the SaveItem screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveItem()
        {
            this.Details.Methods.SaveItem.CreateInvocation().Execute();
        }
        partial void SaveItem_CanExecute(ref bool result);
        partial void SaveItem_Execute();

        /// <summary>
        /// Calls the CancelItem screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelItem()
        {
            this.Details.Methods.CancelItem.CreateInvocation().Execute();
        }
        partial void CancelItem_CanExecute(ref bool result);
        partial void CancelItem_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySet, global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSet, global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.Issues;
                var initializeCommandEntry = global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties.ToggleVisibility;
                var initializeMethodEntry = global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties.ToggleVisibility;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                __IssueSearchAllEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                    global::LightSwitchApplication.IssueSearchAll.DetailsClass.__IssueSearchAll_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.IssueSearchAll.DetailsClass.__IssueSearchAll_InvokeSavingEvent,
                    global::LightSwitchApplication.IssueSearchAll.DetailsClass.__IssueSearchAll_InvokeSavedEvent,
                    global::LightSwitchApplication.IssueSearchAll.DetailsClass.__IssueSearchAll_InvokeClosingEvent,
                    global::LightSwitchApplication.IssueSearchAll.DetailsClass.__IssueSearchAll_InvokeCreated,
                    global::LightSwitchApplication.IssueSearchAll.DetailsClass.__IssueSearchAll_InvokeActivated,
                    global::LightSwitchApplication.IssueSearchAll.DetailsClass.__IssueSearchAll_InvokeSaveErrorEvent);
            private static void __IssueSearchAll_InvokeInitializeDataWorkspace(global::LightSwitchApplication.IssueSearchAll s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.IssueSearchAll_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __IssueSearchAll_InvokeSavingEvent(global::LightSwitchApplication.IssueSearchAll s)
            {
                bool handled = false;
                s.IssueSearchAll_Saving(ref handled);
                return handled;
            }
            private static void __IssueSearchAll_InvokeSavedEvent(global::LightSwitchApplication.IssueSearchAll s)
            {
                s.IssueSearchAll_Saved();
            }
            private static bool __IssueSearchAll_InvokeClosingEvent(global::LightSwitchApplication.IssueSearchAll s)
            {
                bool cancel = false;
                s.IssueSearchAll_Closing(ref cancel);
                return cancel;
            }
            private static void __IssueSearchAll_InvokeCreated(global::LightSwitchApplication.IssueSearchAll s)
            {
                s.IssueSearchAll_Created();
            }
            private static void __IssueSearchAll_InvokeActivated(global::LightSwitchApplication.IssueSearchAll s)
            {
                s.IssueSearchAll_Activated();
            }
            private static bool __IssueSearchAll_InvokeSaveErrorEvent(global::LightSwitchApplication.IssueSearchAll s, global::System.Exception ex)
            {
                bool handled = false;
                s.IssueSearchAll_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssuesQuery(global::System.Nullable<int> EngineerId, string ProblemDescription, global::System.Nullable<global::System.DateTime> CreateDateTimeStart, global::System.Nullable<global::System.DateTime> CreateDateTimeEnd, global::System.Nullable<int> StatusId, global::System.Nullable<int> PriorityId)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                    this.Screen.DataWorkspace.ApplicationData.IssueSearchAll(EngineerId, ProblemDescription, CreateDateTimeStart, CreateDateTimeEnd, StatusId, PriorityId),
                                    "IssueStatus"),
                                "AssignedTo"),
                            "ClosedByEngineer"),
                        "Priority"),
                    "User");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issues;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>.Data _IssueEngineerId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, string>.Data _IssueProblemDescription;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _IssueCreateDateTimeStart;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _IssueCreateDateTimeEnd;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Engineer>.Data _EngineerSelector;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Priority>.Data _PrioritySelector;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.IssueStatus>.Data _IssueStatusSelector;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _ToggleVisibilityCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _SaveButtonCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _CancelButtonCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _AddItemCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _EditItemCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _DeleteItemCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _SaveItemCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _CancelItemCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _ToggleVisibilityMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _SaveButtonMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _CancelButtonMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _AddItemMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _EditItemMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _DeleteItemMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _SaveItemMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _CancelItemMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Issue> Issues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.Issues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>> IssueEngineerId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueEngineerId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, string> IssueProblemDescription
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueProblemDescription);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>> IssueCreateDateTimeStart
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueCreateDateTimeStart);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>> IssueCreateDateTimeEnd
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueCreateDateTimeEnd);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Engineer> EngineerSelector
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.EngineerSelector);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Priority> PrioritySelector
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Priority>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.PrioritySelector);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.IssueStatus> IssueStatusSelector
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.IssueStatus>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueStatusSelector);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> ToggleVisibility
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties.ToggleVisibility);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> SaveButton
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties.SaveButton);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> CancelButton
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties.CancelButton);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> AddItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties.AddItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> EditItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties.EditItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> DeleteItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties.DeleteItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> SaveItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties.SaveItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> CancelItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties.CancelItem);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> ToggleVisibility
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties.ToggleVisibility);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> SaveButton
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties.SaveButton);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> CancelButton
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties.CancelButton);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> AddItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties.AddItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> EditItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties.EditItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> DeleteItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties.DeleteItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> SaveItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties.SaveItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> CancelItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties.CancelItem);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issues",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._Issues_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._Issues_Validate,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._Issues_CreateQuery,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._Issues_SelectionChanged,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._Issues_OnCollectionChanged,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._Issues_OnLoaded);
                private static void _Issues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._Issues, sf);
                }
                private static void _Issues_Validate(global::LightSwitchApplication.IssueSearchAll s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issues_CreateQuery(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object[] args)
                {
                    return d.IssuesQuery((global::System.Nullable<int>)args[0], (string)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Nullable<global::System.DateTime>)args[3], (global::System.Nullable<int>)args[4], (global::System.Nullable<int>)args[5]);
                }
                private static void _Issues_SelectionChanged(global::LightSwitchApplication.IssueSearchAll s)
                {
                    s.Issues_SelectionChanged();
                }
                private static void _Issues_OnCollectionChanged(global::LightSwitchApplication.IssueSearchAll s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Issues_Changed(e);
                }
                private static void _Issues_OnLoaded(global::LightSwitchApplication.IssueSearchAll s, bool succeeded)
                {
                    s.Issues_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>.Entry
                    IssueEngineerId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IssueEngineerId",
                        false,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueEngineerId_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueEngineerId_Validate,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueEngineerId_OnValueChanged);
                private static void _IssueEngineerId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueEngineerId, sf);
                }
                private static void _IssueEngineerId_Validate(global::LightSwitchApplication.IssueSearchAll s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueEngineerId_Validate(r);
                }
                private static void _IssueEngineerId_OnValueChanged(global::LightSwitchApplication.IssueSearchAll s)
                {
                    s.IssueEngineerId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, string>.Entry
                    IssueProblemDescription = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, string>.Entry(
                        "IssueProblemDescription",
                        false,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueProblemDescription_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueProblemDescription_Validate,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueProblemDescription_OnValueChanged);
                private static void _IssueProblemDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, string>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueProblemDescription, sf);
                }
                private static void _IssueProblemDescription_Validate(global::LightSwitchApplication.IssueSearchAll s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueProblemDescription_Validate(r);
                }
                private static void _IssueProblemDescription_OnValueChanged(global::LightSwitchApplication.IssueSearchAll s)
                {
                    s.IssueProblemDescription_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    IssueCreateDateTimeStart = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "IssueCreateDateTimeStart",
                        false,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueCreateDateTimeStart_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueCreateDateTimeStart_Validate,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueCreateDateTimeStart_OnValueChanged);
                private static void _IssueCreateDateTimeStart_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueCreateDateTimeStart, sf);
                }
                private static void _IssueCreateDateTimeStart_Validate(global::LightSwitchApplication.IssueSearchAll s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueCreateDateTimeStart_Validate(r);
                }
                private static void _IssueCreateDateTimeStart_OnValueChanged(global::LightSwitchApplication.IssueSearchAll s)
                {
                    s.IssueCreateDateTimeStart_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    IssueCreateDateTimeEnd = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "IssueCreateDateTimeEnd",
                        false,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueCreateDateTimeEnd_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueCreateDateTimeEnd_Validate,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueCreateDateTimeEnd_OnValueChanged);
                private static void _IssueCreateDateTimeEnd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueCreateDateTimeEnd, sf);
                }
                private static void _IssueCreateDateTimeEnd_Validate(global::LightSwitchApplication.IssueSearchAll s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueCreateDateTimeEnd_Validate(r);
                }
                private static void _IssueCreateDateTimeEnd_OnValueChanged(global::LightSwitchApplication.IssueSearchAll s)
                {
                    s.IssueCreateDateTimeEnd_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    EngineerSelector = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "EngineerSelector",
                        false,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._EngineerSelector_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._EngineerSelector_Validate,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._EngineerSelector_OnValueChanged);
                private static void _EngineerSelector_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerSelector, sf);
                }
                private static void _EngineerSelector_Validate(global::LightSwitchApplication.IssueSearchAll s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerSelector_Validate(r);
                }
                private static void _EngineerSelector_OnValueChanged(global::LightSwitchApplication.IssueSearchAll s)
                {
                    s.EngineerSelector_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Priority>.Entry
                    PrioritySelector = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Priority>.Entry(
                        "PrioritySelector",
                        false,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._PrioritySelector_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._PrioritySelector_Validate,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._PrioritySelector_OnValueChanged);
                private static void _PrioritySelector_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Priority>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._PrioritySelector, sf);
                }
                private static void _PrioritySelector_Validate(global::LightSwitchApplication.IssueSearchAll s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.PrioritySelector_Validate(r);
                }
                private static void _PrioritySelector_OnValueChanged(global::LightSwitchApplication.IssueSearchAll s)
                {
                    s.PrioritySelector_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.IssueStatus>.Entry
                    IssueStatusSelector = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.IssueStatus>.Entry(
                        "IssueStatusSelector",
                        false,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueStatusSelector_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueStatusSelector_Validate,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueStatusSelector_OnValueChanged);
                private static void _IssueStatusSelector_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.IssueStatus>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueStatusSelector, sf);
                }
                private static void _IssueStatusSelector_Validate(global::LightSwitchApplication.IssueSearchAll s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueStatusSelector_Validate(r);
                }
                private static void _IssueStatusSelector_OnValueChanged(global::LightSwitchApplication.IssueSearchAll s)
                {
                    s.IssueStatusSelector_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    ToggleVisibility = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "ToggleVisibility",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._ToggleVisibility_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._ToggleVisibility_CreateExecutableObject);
                private static void _ToggleVisibility_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleVisibilityCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ToggleVisibility_CreateExecutableObject(global::LightSwitchApplication.IssueSearchAll.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueSearchAll.DetailsClass)d).Methods.ToggleVisibility.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    SaveButton = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "SaveButton",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._SaveButton_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._SaveButton_CreateExecutableObject);
                private static void _SaveButton_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveButtonCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveButton_CreateExecutableObject(global::LightSwitchApplication.IssueSearchAll.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueSearchAll.DetailsClass)d).Methods.SaveButton.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    CancelButton = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "CancelButton",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._CancelButton_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._CancelButton_CreateExecutableObject);
                private static void _CancelButton_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelButtonCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelButton_CreateExecutableObject(global::LightSwitchApplication.IssueSearchAll.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueSearchAll.DetailsClass)d).Methods.CancelButton.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    AddItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "AddItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._AddItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._AddItem_CreateExecutableObject);
                private static void _AddItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._AddItemCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddItem_CreateExecutableObject(global::LightSwitchApplication.IssueSearchAll.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueSearchAll.DetailsClass)d).Methods.AddItem.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    EditItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "EditItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._EditItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._EditItem_CreateExecutableObject);
                private static void _EditItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._EditItemCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EditItem_CreateExecutableObject(global::LightSwitchApplication.IssueSearchAll.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueSearchAll.DetailsClass)d).Methods.EditItem.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    DeleteItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "DeleteItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._DeleteItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._DeleteItem_CreateExecutableObject);
                private static void _DeleteItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._DeleteItemCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DeleteItem_CreateExecutableObject(global::LightSwitchApplication.IssueSearchAll.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueSearchAll.DetailsClass)d).Methods.DeleteItem.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    SaveItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "SaveItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._SaveItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._SaveItem_CreateExecutableObject);
                private static void _SaveItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveItemCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveItem_CreateExecutableObject(global::LightSwitchApplication.IssueSearchAll.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueSearchAll.DetailsClass)d).Methods.SaveItem.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    CancelItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "CancelItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._CancelItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._CancelItem_CreateExecutableObject);
                private static void _CancelItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelItemCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelItem_CreateExecutableObject(global::LightSwitchApplication.IssueSearchAll.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueSearchAll.DetailsClass)d).Methods.CancelItem.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    ToggleVisibility = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "ToggleVisibility",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._ToggleVisibility_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._ToggleVisibility_CanInvoke,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._ToggleVisibility_InvokeMethod);
                private static void _ToggleVisibility_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleVisibilityMethod, sf);
                }
                private static global::System.Exception _ToggleVisibility_CanInvoke(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ToggleVisibility_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ToggleVisibility_InvokeMethod(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ToggleVisibility_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    SaveButton = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "SaveButton",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._SaveButton_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._SaveButton_CanInvoke,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._SaveButton_InvokeMethod);
                private static void _SaveButton_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveButtonMethod, sf);
                }
                private static global::System.Exception _SaveButton_CanInvoke(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveButton_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveButton_InvokeMethod(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveButton_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    CancelButton = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "CancelButton",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._CancelButton_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._CancelButton_CanInvoke,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._CancelButton_InvokeMethod);
                private static void _CancelButton_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelButtonMethod, sf);
                }
                private static global::System.Exception _CancelButton_CanInvoke(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelButton_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelButton_InvokeMethod(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelButton_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    AddItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "AddItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._AddItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._AddItem_CanInvoke,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._AddItem_InvokeMethod);
                private static void _AddItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._AddItemMethod, sf);
                }
                private static global::System.Exception _AddItem_CanInvoke(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddItem_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddItem_InvokeMethod(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddItem_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    EditItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "EditItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._EditItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._EditItem_CanInvoke,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._EditItem_InvokeMethod);
                private static void _EditItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._EditItemMethod, sf);
                }
                private static global::System.Exception _EditItem_CanInvoke(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EditItem_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EditItem_InvokeMethod(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EditItem_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    DeleteItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "DeleteItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._DeleteItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._DeleteItem_CanInvoke,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._DeleteItem_InvokeMethod);
                private static void _DeleteItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._DeleteItemMethod, sf);
                }
                private static global::System.Exception _DeleteItem_CanInvoke(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DeleteItem_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DeleteItem_InvokeMethod(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DeleteItem_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    SaveItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "SaveItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._SaveItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._SaveItem_CanInvoke,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._SaveItem_InvokeMethod);
                private static void _SaveItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveItemMethod, sf);
                }
                private static global::System.Exception _SaveItem_CanInvoke(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveItem_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveItem_InvokeMethod(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveItem_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    CancelItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "CancelItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._CancelItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._CancelItem_CanInvoke,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._CancelItem_InvokeMethod);
                private static void _CancelItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelItemMethod, sf);
                }
                private static global::System.Exception _CancelItem_CanInvoke(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelItem_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelItem_InvokeMethod(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelItem_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class CreateNewIssueResponse
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private CreateNewIssueResponse(global::System.Nullable<int> IssueId) : base("LightSwitchApplication:CreateNewIssueResponse")
        {
                this.IssueId = IssueId;
            global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static CreateNewIssueResponse CreateInstance(global::System.Nullable<int> IssueId)
        {
            return new global::LightSwitchApplication.CreateNewIssueResponse(
                        IssueId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void IssueResponseProperty_Changed();

        partial void ResponseTextCount_Changed();

        partial void IssueId_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.IssueResponse IssueResponseProperty
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.IssueResponseProperty);
            }
            set
            {
                global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.IssueResponseProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponseProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ResponseTextCount
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.ResponseTextCount);
            }
            set
            {
                global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.ResponseTextCount, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ResponseTextCount_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IssueId
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.IssueId);
            }
            set
            {
                global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.IssueId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySet, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.CommandSet, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.IssueResponseProperty;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass>.Entry
                __CreateNewIssueResponseEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass>.Entry(
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeSavingEvent,
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeSavedEvent,
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeClosingEvent,
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeCreated,
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeActivated,
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeSaveErrorEvent);
            private static void __CreateNewIssueResponse_InvokeInitializeDataWorkspace(global::LightSwitchApplication.CreateNewIssueResponse s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.CreateNewIssueResponse_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __CreateNewIssueResponse_InvokeSavingEvent(global::LightSwitchApplication.CreateNewIssueResponse s)
            {
                bool handled = false;
                s.CreateNewIssueResponse_Saving(ref handled);
                return handled;
            }
            private static void __CreateNewIssueResponse_InvokeSavedEvent(global::LightSwitchApplication.CreateNewIssueResponse s)
            {
                s.CreateNewIssueResponse_Saved();
            }
            private static bool __CreateNewIssueResponse_InvokeClosingEvent(global::LightSwitchApplication.CreateNewIssueResponse s)
            {
                bool cancel = false;
                s.CreateNewIssueResponse_Closing(ref cancel);
                return cancel;
            }
            private static void __CreateNewIssueResponse_InvokeCreated(global::LightSwitchApplication.CreateNewIssueResponse s)
            {
                s.CreateNewIssueResponse_Created();
            }
            private static void __CreateNewIssueResponse_InvokeActivated(global::LightSwitchApplication.CreateNewIssueResponse s)
            {
                s.CreateNewIssueResponse_Activated();
            }
            private static bool __CreateNewIssueResponse_InvokeSaveErrorEvent(global::LightSwitchApplication.CreateNewIssueResponse s, global::System.Exception ex)
            {
                bool handled = false;
                s.CreateNewIssueResponse_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.IssueResponse>.Data _IssueResponseProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>.Data _ResponseTextCount;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>.Data _IssueId;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.IssueResponse> IssueResponseProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.IssueResponse>)base.GetItem(global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.IssueResponseProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>> ResponseTextCount
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>)base.GetItem(global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.ResponseTextCount);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>> IssueId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>)base.GetItem(global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.IssueId);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.IssueResponse>.Entry
                    IssueResponseProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.IssueResponse>.Entry(
                        "IssueResponseProperty",
                        false,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._IssueResponseProperty_Stub,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._IssueResponseProperty_Validate,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._IssueResponseProperty_OnValueChanged);
                private static void _IssueResponseProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.IssueResponse>.Data> c, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueResponseProperty, sf);
                }
                private static void _IssueResponseProperty_Validate(global::LightSwitchApplication.CreateNewIssueResponse s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueResponseProperty_Validate(r);
                }
                private static void _IssueResponseProperty_OnValueChanged(global::LightSwitchApplication.CreateNewIssueResponse s)
                {
                    s.IssueResponseProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>.Entry
                    ResponseTextCount = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ResponseTextCount",
                        false,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._ResponseTextCount_Stub,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._ResponseTextCount_Validate,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._ResponseTextCount_OnValueChanged);
                private static void _ResponseTextCount_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass d, object sf)
                {
                    c(d, ref d._ResponseTextCount, sf);
                }
                private static void _ResponseTextCount_Validate(global::LightSwitchApplication.CreateNewIssueResponse s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ResponseTextCount_Validate(r);
                }
                private static void _ResponseTextCount_OnValueChanged(global::LightSwitchApplication.CreateNewIssueResponse s)
                {
                    s.ResponseTextCount_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>.Entry
                    IssueId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IssueId",
                        false,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._IssueId_Stub,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._IssueId_Validate,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._IssueId_OnValueChanged);
                private static void _IssueId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueId, sf);
                }
                private static void _IssueId_Validate(global::LightSwitchApplication.CreateNewIssueResponse s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueId_Validate(r);
                }
                private static void _IssueId_OnValueChanged(global::LightSwitchApplication.CreateNewIssueResponse s)
                {
                    s.IssueId_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class AddEditIssue
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private AddEditIssue(global::System.Nullable<int> IssueId) : base("LightSwitchApplication:AddEditIssue")
        {
                this.IssueId = IssueId;
            global::LightSwitchApplication.AddEditIssue.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static AddEditIssue CreateInstance(global::System.Nullable<int> IssueId)
        {
            return new global::LightSwitchApplication.AddEditIssue(
                        IssueId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issue_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Loaded(bool succeeded);

        partial void IssueId_Changed();

        partial void IssueProperty_Changed();

        partial void IssueResponses_SelectionChanged();

        partial void IssueResponses_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponses_Loaded(bool succeeded);

        partial void IssueDocuments_SelectionChanged();

        partial void IssueDocuments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocuments_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue Issue
        {
            get
            {
                return global::LightSwitchApplication.AddEditIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.Issue);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IssueId
        {
            get 
            {
                return global::LightSwitchApplication.AddEditIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueId);
            }
            set
            {
                global::LightSwitchApplication.AddEditIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue IssueProperty
        {
            get 
            {
                return global::LightSwitchApplication.AddEditIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueProperty);
            }
            set
            {
                global::LightSwitchApplication.AddEditIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IssueResponses visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.IssueResponse> IssueResponses
        {
            get
            {
                return global::LightSwitchApplication.AddEditIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueResponses);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponses_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IssueDocuments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.IssueDocument> IssueDocuments
        {
            get
            {
                return global::LightSwitchApplication.AddEditIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueDocuments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocuments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the AddIssueResponse screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddIssueResponse()
        {
            this.Details.Methods.AddIssueResponse.CreateInvocation().Execute();
        }
        partial void AddIssueResponse_CanExecute(ref bool result);
        partial void AddIssueResponse_Execute();

        /// <summary>
        /// Calls the AddIssueDocument screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddIssueDocument()
        {
            this.Details.Methods.AddIssueDocument.CreateInvocation().Execute();
        }
        partial void AddIssueDocument_CanExecute(ref bool result);
        partial void AddIssueDocument_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySet, global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSet, global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.Issue;
                var initializeCommandEntry = global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSetProperties.AddIssueResponse;
                var initializeMethodEntry = global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties.AddIssueResponse;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry
                __AddEditIssueEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry(
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeSavingEvent,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeSavedEvent,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeClosingEvent,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeCreated,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeActivated,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeSaveErrorEvent);
            private static void __AddEditIssue_InvokeInitializeDataWorkspace(global::LightSwitchApplication.AddEditIssue s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.AddEditIssue_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __AddEditIssue_InvokeSavingEvent(global::LightSwitchApplication.AddEditIssue s)
            {
                bool handled = false;
                s.AddEditIssue_Saving(ref handled);
                return handled;
            }
            private static void __AddEditIssue_InvokeSavedEvent(global::LightSwitchApplication.AddEditIssue s)
            {
                s.AddEditIssue_Saved();
            }
            private static bool __AddEditIssue_InvokeClosingEvent(global::LightSwitchApplication.AddEditIssue s)
            {
                bool cancel = false;
                s.AddEditIssue_Closing(ref cancel);
                return cancel;
            }
            private static void __AddEditIssue_InvokeCreated(global::LightSwitchApplication.AddEditIssue s)
            {
                s.AddEditIssue_Created();
            }
            private static void __AddEditIssue_InvokeActivated(global::LightSwitchApplication.AddEditIssue s)
            {
                s.AddEditIssue_Activated();
            }
            private static bool __AddEditIssue_InvokeSaveErrorEvent(global::LightSwitchApplication.AddEditIssue s, global::System.Exception ex)
            {
                bool handled = false;
                s.AddEditIssue_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssueResponsesQuery()
            {
                if (this.Screen.Issue == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.IssueResponse> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.IssueResponse>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Issue.Details.Properties.IssueResponses).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Issue");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssueDocumentsQuery()
            {
                if (this.Screen.Issue == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.IssueDocument> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.IssueDocument>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Issue.Details.Properties.IssueDocuments).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Issue");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issue;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>.Data _IssueId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data _IssueProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueResponse>.Data _IssueResponses;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueDocument>.Data _IssueDocuments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Data _AddIssueResponseCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Data _AddIssueDocumentCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Data _AddIssueResponseMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Data _AddIssueDocumentMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue> Issue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.Issue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>> IssueId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue> IssueProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueResponse> IssueResponses
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueResponse>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueResponses);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueDocument> IssueDocuments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueDocument>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueDocuments);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass> AddIssueResponse
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSetProperties.AddIssueResponse);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass> AddIssueDocument
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSetProperties.AddIssueDocument);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass> AddIssueResponse
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties.AddIssueResponse);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass> AddIssueDocument
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties.AddIssueDocument);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issue",
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_Validate,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_CreateQuery,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_OnValueChanged,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_OnLoaded);
                private static void _Issue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._Issue, sf);
                }
                private static void _Issue_Validate(global::LightSwitchApplication.AddEditIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issue_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issue_CreateQuery(global::LightSwitchApplication.AddEditIssue.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Issue_OnValueChanged(global::LightSwitchApplication.AddEditIssue s)
                {
                    s.Issue_Changed();
                }

                private static void _Issue_OnLoaded(global::LightSwitchApplication.AddEditIssue s, bool succeeded)
                {
                    s.Issue_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>.Entry
                    IssueId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IssueId",
                        false,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueId_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueId_Validate,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueId_OnValueChanged);
                private static void _IssueId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueId, sf);
                }
                private static void _IssueId_Validate(global::LightSwitchApplication.AddEditIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueId_Validate(r);
                }
                private static void _IssueId_OnValueChanged(global::LightSwitchApplication.AddEditIssue s)
                {
                    s.IssueId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    IssueProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "IssueProperty",
                        false,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueProperty_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueProperty_Validate,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueProperty_OnValueChanged);
                private static void _IssueProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueProperty, sf);
                }
                private static void _IssueProperty_Validate(global::LightSwitchApplication.AddEditIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueProperty_Validate(r);
                }
                private static void _IssueProperty_OnValueChanged(global::LightSwitchApplication.AddEditIssue s)
                {
                    s.IssueProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueResponse>.Entry
                    IssueResponses = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueResponse>.Entry(
                        "IssueResponses",
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueResponses_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueResponses_Validate,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueResponses_CreateQuery,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueResponses_SelectionChanged,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueResponses_OnCollectionChanged,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueResponses_OnLoaded);
                private static void _IssueResponses_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueResponse>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueResponses, sf);
                }
                private static void _IssueResponses_Validate(global::LightSwitchApplication.AddEditIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueResponses_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IssueResponses_CreateQuery(global::LightSwitchApplication.AddEditIssue.DetailsClass d, object[] args)
                {
                    return d.IssueResponsesQuery();
                }
                private static void _IssueResponses_SelectionChanged(global::LightSwitchApplication.AddEditIssue s)
                {
                    s.IssueResponses_SelectionChanged();
                }
                private static void _IssueResponses_OnCollectionChanged(global::LightSwitchApplication.AddEditIssue s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IssueResponses_Changed(e);
                }
                private static void _IssueResponses_OnLoaded(global::LightSwitchApplication.AddEditIssue s, bool succeeded)
                {
                    s.IssueResponses_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueDocument>.Entry
                    IssueDocuments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueDocument>.Entry(
                        "IssueDocuments",
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueDocuments_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueDocuments_Validate,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueDocuments_CreateQuery,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueDocuments_SelectionChanged,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueDocuments_OnCollectionChanged,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueDocuments_OnLoaded);
                private static void _IssueDocuments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueDocument>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueDocuments, sf);
                }
                private static void _IssueDocuments_Validate(global::LightSwitchApplication.AddEditIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueDocuments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IssueDocuments_CreateQuery(global::LightSwitchApplication.AddEditIssue.DetailsClass d, object[] args)
                {
                    return d.IssueDocumentsQuery();
                }
                private static void _IssueDocuments_SelectionChanged(global::LightSwitchApplication.AddEditIssue s)
                {
                    s.IssueDocuments_SelectionChanged();
                }
                private static void _IssueDocuments_OnCollectionChanged(global::LightSwitchApplication.AddEditIssue s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IssueDocuments_Changed(e);
                }
                private static void _IssueDocuments_OnLoaded(global::LightSwitchApplication.AddEditIssue s, bool succeeded)
                {
                    s.IssueDocuments_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry
                    AddIssueResponse = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry(
                        "AddIssueResponse",
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSetProperties._AddIssueResponse_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSetProperties._AddIssueResponse_CreateExecutableObject);
                private static void _AddIssueResponse_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._AddIssueResponseCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddIssueResponse_CreateExecutableObject(global::LightSwitchApplication.AddEditIssue.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.AddEditIssue.DetailsClass)d).Methods.AddIssueResponse.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry
                    AddIssueDocument = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry(
                        "AddIssueDocument",
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSetProperties._AddIssueDocument_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSetProperties._AddIssueDocument_CreateExecutableObject);
                private static void _AddIssueDocument_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._AddIssueDocumentCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddIssueDocument_CreateExecutableObject(global::LightSwitchApplication.AddEditIssue.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.AddEditIssue.DetailsClass)d).Methods.AddIssueDocument.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry
                    AddIssueResponse = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry(
                        "AddIssueResponse",
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties._AddIssueResponse_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties._AddIssueResponse_CanInvoke,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties._AddIssueResponse_InvokeMethod);
                private static void _AddIssueResponse_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._AddIssueResponseMethod, sf);
                }
                private static global::System.Exception _AddIssueResponse_CanInvoke(global::LightSwitchApplication.AddEditIssue.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddIssueResponse_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddIssueResponse_InvokeMethod(global::LightSwitchApplication.AddEditIssue.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddIssueResponse_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry
                    AddIssueDocument = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry(
                        "AddIssueDocument",
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties._AddIssueDocument_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties._AddIssueDocument_CanInvoke,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties._AddIssueDocument_InvokeMethod);
                private static void _AddIssueDocument_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._AddIssueDocumentMethod, sf);
                }
                private static global::System.Exception _AddIssueDocument_CanInvoke(global::LightSwitchApplication.AddEditIssue.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddIssueDocument_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddIssueDocument_InvokeMethod(global::LightSwitchApplication.AddEditIssue.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddIssueDocument_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EditableIssuesByUserGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditableIssuesByUserGrid() : base("LightSwitchApplication:EditableIssuesByUserGrid")
        {
            global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditableIssuesByUserGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditableIssuesByUserGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesByUserGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesByUserGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesByUserGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesByUserGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesByUserGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesByUserGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesByUserGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void IssuesByUser_SelectionChanged();

        partial void IssuesByUser_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesByUser_Loaded(bool succeeded);

        partial void IssueUserId_Changed();

        partial void DepartmentProperty_Changed();

        partial void UserProperty_Changed();

        partial void UsersByDepartment_SelectionChanged();

        partial void UsersByDepartment_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UsersByDepartment_Loaded(bool succeeded);

        /// <summary>
        /// Gets the IssuesByUser visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> IssuesByUser
        {
            get
            {
                return global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties.IssuesByUser);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesByUser_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int IssueUserId
        {
            get 
            {
                return global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties.IssueUserId);
            }
            set
            {
                global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.SetValue(this, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties.IssueUserId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueUserId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Department DepartmentProperty
        {
            get 
            {
                return global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties.DepartmentProperty);
            }
            set
            {
                global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.SetValue(this, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties.DepartmentProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepartmentProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.User UserProperty
        {
            get 
            {
                return global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties.UserProperty);
            }
            set
            {
                global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.SetValue(this, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties.UserProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the UsersByDepartment visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.User> UsersByDepartment
        {
            get
            {
                return global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties.UsersByDepartment);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UsersByDepartment_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties.IssuesByUser;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass>.Entry
                __EditableIssuesByUserGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.__EditableIssuesByUserGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.__EditableIssuesByUserGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.__EditableIssuesByUserGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.__EditableIssuesByUserGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.__EditableIssuesByUserGrid_InvokeCreated,
                    global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.__EditableIssuesByUserGrid_InvokeActivated,
                    global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.__EditableIssuesByUserGrid_InvokeSaveErrorEvent);
            private static void __EditableIssuesByUserGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditableIssuesByUserGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditableIssuesByUserGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditableIssuesByUserGrid_InvokeSavingEvent(global::LightSwitchApplication.EditableIssuesByUserGrid s)
            {
                bool handled = false;
                s.EditableIssuesByUserGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditableIssuesByUserGrid_InvokeSavedEvent(global::LightSwitchApplication.EditableIssuesByUserGrid s)
            {
                s.EditableIssuesByUserGrid_Saved();
            }
            private static bool __EditableIssuesByUserGrid_InvokeClosingEvent(global::LightSwitchApplication.EditableIssuesByUserGrid s)
            {
                bool cancel = false;
                s.EditableIssuesByUserGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditableIssuesByUserGrid_InvokeCreated(global::LightSwitchApplication.EditableIssuesByUserGrid s)
            {
                s.EditableIssuesByUserGrid_Created();
            }
            private static void __EditableIssuesByUserGrid_InvokeActivated(global::LightSwitchApplication.EditableIssuesByUserGrid s)
            {
                s.EditableIssuesByUserGrid_Activated();
            }
            private static bool __EditableIssuesByUserGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditableIssuesByUserGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditableIssuesByUserGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssuesByUserQuery(global::System.Nullable<int> UserId)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                    this.Screen.DataWorkspace.ApplicationData.IssuesByUser(UserId),
                                    "IssueStatus"),
                                "AssignedTo"),
                            "ClosedByEngineer"),
                        "Priority"),
                    "User");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable UsersByDepartmentQuery(global::System.Nullable<int> DepartmentId)
            {
                return this.Screen.DataWorkspace.ApplicationData.UsersByDepartment(DepartmentId);
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.Issue>.Data _IssuesByUser;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, int>.Data _IssueUserId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.Department>.Data _DepartmentProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.User>.Data _UserProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.User>.Data _UsersByDepartment;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.Issue> IssuesByUser
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties.IssuesByUser);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, int> IssueUserId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties.IssueUserId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.Department> DepartmentProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.Department>)base.GetItem(global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties.DepartmentProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.User> UserProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.User>)base.GetItem(global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties.UserProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.User> UsersByDepartment
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.User>)base.GetItem(global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties.UsersByDepartment);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    IssuesByUser = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "IssuesByUser",
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._IssuesByUser_Stub,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._IssuesByUser_Validate,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._IssuesByUser_CreateQuery,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._IssuesByUser_SelectionChanged,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._IssuesByUser_OnCollectionChanged,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._IssuesByUser_OnLoaded);
                private static void _IssuesByUser_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._IssuesByUser, sf);
                }
                private static void _IssuesByUser_Validate(global::LightSwitchApplication.EditableIssuesByUserGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssuesByUser_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IssuesByUser_CreateQuery(global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass d, object[] args)
                {
                    return d.IssuesByUserQuery((global::System.Nullable<int>)args[0]);
                }
                private static void _IssuesByUser_SelectionChanged(global::LightSwitchApplication.EditableIssuesByUserGrid s)
                {
                    s.IssuesByUser_SelectionChanged();
                }
                private static void _IssuesByUser_OnCollectionChanged(global::LightSwitchApplication.EditableIssuesByUserGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IssuesByUser_Changed(e);
                }
                private static void _IssuesByUser_OnLoaded(global::LightSwitchApplication.EditableIssuesByUserGrid s, bool succeeded)
                {
                    s.IssuesByUser_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, int>.Entry
                    IssueUserId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, int>.Entry(
                        "IssueUserId",
                        false,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._IssueUserId_Stub,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._IssueUserId_Validate,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._IssueUserId_OnValueChanged);
                private static void _IssueUserId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, int>.Data> c, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueUserId, sf);
                }
                private static void _IssueUserId_Validate(global::LightSwitchApplication.EditableIssuesByUserGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueUserId_Validate(r);
                }
                private static void _IssueUserId_OnValueChanged(global::LightSwitchApplication.EditableIssuesByUserGrid s)
                {
                    s.IssueUserId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.Department>.Entry
                    DepartmentProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.Department>.Entry(
                        "DepartmentProperty",
                        false,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._DepartmentProperty_Stub,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._DepartmentProperty_Validate,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._DepartmentProperty_OnValueChanged);
                private static void _DepartmentProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.Department>.Data> c, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._DepartmentProperty, sf);
                }
                private static void _DepartmentProperty_Validate(global::LightSwitchApplication.EditableIssuesByUserGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.DepartmentProperty_Validate(r);
                }
                private static void _DepartmentProperty_OnValueChanged(global::LightSwitchApplication.EditableIssuesByUserGrid s)
                {
                    s.DepartmentProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.User>.Entry
                    UserProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.User>.Entry(
                        "UserProperty",
                        false,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._UserProperty_Stub,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._UserProperty_Validate,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._UserProperty_OnValueChanged);
                private static void _UserProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.User>.Data> c, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._UserProperty, sf);
                }
                private static void _UserProperty_Validate(global::LightSwitchApplication.EditableIssuesByUserGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.UserProperty_Validate(r);
                }
                private static void _UserProperty_OnValueChanged(global::LightSwitchApplication.EditableIssuesByUserGrid s)
                {
                    s.UserProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.User>.Entry
                    UsersByDepartment = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.User>.Entry(
                        "UsersByDepartment",
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._UsersByDepartment_Stub,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._UsersByDepartment_Validate,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._UsersByDepartment_CreateQuery,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._UsersByDepartment_SelectionChanged,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._UsersByDepartment_OnCollectionChanged,
                        global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass.PropertySetProperties._UsersByDepartment_OnLoaded);
                private static void _UsersByDepartment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesByUserGrid, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass, global::LightSwitchApplication.User>.Data> c, global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._UsersByDepartment, sf);
                }
                private static void _UsersByDepartment_Validate(global::LightSwitchApplication.EditableIssuesByUserGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.UsersByDepartment_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _UsersByDepartment_CreateQuery(global::LightSwitchApplication.EditableIssuesByUserGrid.DetailsClass d, object[] args)
                {
                    return d.UsersByDepartmentQuery((global::System.Nullable<int>)args[0]);
                }
                private static void _UsersByDepartment_SelectionChanged(global::LightSwitchApplication.EditableIssuesByUserGrid s)
                {
                    s.UsersByDepartment_SelectionChanged();
                }
                private static void _UsersByDepartment_OnCollectionChanged(global::LightSwitchApplication.EditableIssuesByUserGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.UsersByDepartment_Changed(e);
                }
                private static void _UsersByDepartment_OnLoaded(global::LightSwitchApplication.EditableIssuesByUserGrid s, bool succeeded)
                {
                    s.UsersByDepartment_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class IssuesManagerGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private IssuesManagerGrid() : base("LightSwitchApplication:IssuesManagerGrid")
        {
            global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static IssuesManagerGrid CreateInstance()
        {
            return new global::LightSwitchApplication.IssuesManagerGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesManagerGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesManagerGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesManagerGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesManagerGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesManagerGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesManagerGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesManagerGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issues_SelectionChanged();

        partial void Issues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Issues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> Issues
        {
            get
            {
                return global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties.Issues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the CancelSelectedIssues screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelSelectedIssues()
        {
            this.Details.Methods.CancelSelectedIssues.CreateInvocation().Execute();
        }
        partial void CancelSelectedIssues_CanExecute(ref bool result);
        partial void CancelSelectedIssues_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySet, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.CommandSet, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties.Issues;
                var initializeCommandEntry = global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.CommandSetProperties.CancelSelectedIssues;
                var initializeMethodEntry = global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.MethodSetProperties.CancelSelectedIssues;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Entry
                __IssuesManagerGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.__IssuesManagerGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.__IssuesManagerGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.__IssuesManagerGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.__IssuesManagerGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.__IssuesManagerGrid_InvokeCreated,
                    global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.__IssuesManagerGrid_InvokeActivated,
                    global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.__IssuesManagerGrid_InvokeSaveErrorEvent);
            private static void __IssuesManagerGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.IssuesManagerGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.IssuesManagerGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __IssuesManagerGrid_InvokeSavingEvent(global::LightSwitchApplication.IssuesManagerGrid s)
            {
                bool handled = false;
                s.IssuesManagerGrid_Saving(ref handled);
                return handled;
            }
            private static void __IssuesManagerGrid_InvokeSavedEvent(global::LightSwitchApplication.IssuesManagerGrid s)
            {
                s.IssuesManagerGrid_Saved();
            }
            private static bool __IssuesManagerGrid_InvokeClosingEvent(global::LightSwitchApplication.IssuesManagerGrid s)
            {
                bool cancel = false;
                s.IssuesManagerGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __IssuesManagerGrid_InvokeCreated(global::LightSwitchApplication.IssuesManagerGrid s)
            {
                s.IssuesManagerGrid_Created();
            }
            private static void __IssuesManagerGrid_InvokeActivated(global::LightSwitchApplication.IssuesManagerGrid s)
            {
                s.IssuesManagerGrid_Activated();
            }
            private static bool __IssuesManagerGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.IssuesManagerGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.IssuesManagerGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssuesQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                    this.Screen.DataWorkspace.ApplicationData.Issues,
                                    "IssueStatus"),
                                "AssignedTo"),
                            "ClosedByEngineer"),
                        "Priority"),
                    "User");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issues;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Data _CancelSelectedIssuesCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Data _CancelSelectedIssuesMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::LightSwitchApplication.Issue> Issues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties.Issues);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass> CancelSelectedIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.CommandSetProperties.CancelSelectedIssues);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass> CancelSelectedIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.MethodSetProperties.CancelSelectedIssues);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issues",
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._Issues_Stub,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._Issues_Validate,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._Issues_CreateQuery,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._Issues_SelectionChanged,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._Issues_OnCollectionChanged,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._Issues_OnLoaded);
                private static void _Issues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Issues, sf);
                }
                private static void _Issues_Validate(global::LightSwitchApplication.IssuesManagerGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issues_CreateQuery(global::LightSwitchApplication.IssuesManagerGrid.DetailsClass d, object[] args)
                {
                    return d.IssuesQuery();
                }
                private static void _Issues_SelectionChanged(global::LightSwitchApplication.IssuesManagerGrid s)
                {
                    s.Issues_SelectionChanged();
                }
                private static void _Issues_OnCollectionChanged(global::LightSwitchApplication.IssuesManagerGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Issues_Changed(e);
                }
                private static void _Issues_OnLoaded(global::LightSwitchApplication.IssuesManagerGrid s, bool succeeded)
                {
                    s.Issues_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Entry
                    CancelSelectedIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Entry(
                        "CancelSelectedIssues",
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.CommandSetProperties._CancelSelectedIssues_Stub,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.CommandSetProperties._CancelSelectedIssues_CreateExecutableObject);
                private static void _CancelSelectedIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Data> c, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelSelectedIssuesCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelSelectedIssues_CreateExecutableObject(global::LightSwitchApplication.IssuesManagerGrid.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssuesManagerGrid.DetailsClass)d).Methods.CancelSelectedIssues.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Entry
                    CancelSelectedIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Entry(
                        "CancelSelectedIssues",
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.MethodSetProperties._CancelSelectedIssues_Stub,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.MethodSetProperties._CancelSelectedIssues_CanInvoke,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.MethodSetProperties._CancelSelectedIssues_InvokeMethod);
                private static void _CancelSelectedIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Data> c, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelSelectedIssuesMethod, sf);
                }
                private static global::System.Exception _CancelSelectedIssues_CanInvoke(global::LightSwitchApplication.IssuesManagerGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelSelectedIssues_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelSelectedIssues_InvokeMethod(global::LightSwitchApplication.IssuesManagerGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelSelectedIssues_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class AppOptionsEdit
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private AppOptionsEdit() : base("LightSwitchApplication:AppOptionsEdit")
        {
            global::LightSwitchApplication.AppOptionsEdit.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static AppOptionsEdit CreateInstance()
        {
            return new global::LightSwitchApplication.AppOptionsEdit(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptionsEdit_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptionsEdit_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptionsEdit_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptionsEdit_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptionsEdit_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptionsEdit_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptionsEdit_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void AppOptionProperty_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.AppOption AppOptionProperty
        {
            get 
            {
                return global::LightSwitchApplication.AppOptionsEdit.DetailsClass.GetValue(this, global::LightSwitchApplication.AppOptionsEdit.DetailsClass.PropertySetProperties.AppOptionProperty);
            }
            set
            {
                global::LightSwitchApplication.AppOptionsEdit.DetailsClass.SetValue(this, global::LightSwitchApplication.AppOptionsEdit.DetailsClass.PropertySetProperties.AppOptionProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptionProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass, global::LightSwitchApplication.AppOptionsEdit.DetailsClass.PropertySet, global::LightSwitchApplication.AppOptionsEdit.DetailsClass.CommandSet, global::LightSwitchApplication.AppOptionsEdit.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.AppOptionsEdit.DetailsClass.PropertySetProperties.AppOptionProperty;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass>.Entry
                __AppOptionsEditEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass>.Entry(
                    global::LightSwitchApplication.AppOptionsEdit.DetailsClass.__AppOptionsEdit_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.AppOptionsEdit.DetailsClass.__AppOptionsEdit_InvokeSavingEvent,
                    global::LightSwitchApplication.AppOptionsEdit.DetailsClass.__AppOptionsEdit_InvokeSavedEvent,
                    global::LightSwitchApplication.AppOptionsEdit.DetailsClass.__AppOptionsEdit_InvokeClosingEvent,
                    global::LightSwitchApplication.AppOptionsEdit.DetailsClass.__AppOptionsEdit_InvokeCreated,
                    global::LightSwitchApplication.AppOptionsEdit.DetailsClass.__AppOptionsEdit_InvokeActivated,
                    global::LightSwitchApplication.AppOptionsEdit.DetailsClass.__AppOptionsEdit_InvokeSaveErrorEvent);
            private static void __AppOptionsEdit_InvokeInitializeDataWorkspace(global::LightSwitchApplication.AppOptionsEdit s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.AppOptionsEdit_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __AppOptionsEdit_InvokeSavingEvent(global::LightSwitchApplication.AppOptionsEdit s)
            {
                bool handled = false;
                s.AppOptionsEdit_Saving(ref handled);
                return handled;
            }
            private static void __AppOptionsEdit_InvokeSavedEvent(global::LightSwitchApplication.AppOptionsEdit s)
            {
                s.AppOptionsEdit_Saved();
            }
            private static bool __AppOptionsEdit_InvokeClosingEvent(global::LightSwitchApplication.AppOptionsEdit s)
            {
                bool cancel = false;
                s.AppOptionsEdit_Closing(ref cancel);
                return cancel;
            }
            private static void __AppOptionsEdit_InvokeCreated(global::LightSwitchApplication.AppOptionsEdit s)
            {
                s.AppOptionsEdit_Created();
            }
            private static void __AppOptionsEdit_InvokeActivated(global::LightSwitchApplication.AppOptionsEdit s)
            {
                s.AppOptionsEdit_Activated();
            }
            private static bool __AppOptionsEdit_InvokeSaveErrorEvent(global::LightSwitchApplication.AppOptionsEdit s, global::System.Exception ex)
            {
                bool handled = false;
                s.AppOptionsEdit_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.AppOptionsEdit.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.AppOptionsEdit.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.AppOptionsEdit.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass, global::LightSwitchApplication.AppOption>.Data _AppOptionProperty;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass, global::LightSwitchApplication.AppOption> AppOptionProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass, global::LightSwitchApplication.AppOption>)base.GetItem(global::LightSwitchApplication.AppOptionsEdit.DetailsClass.PropertySetProperties.AppOptionProperty);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass, global::LightSwitchApplication.AppOption>.Entry
                    AppOptionProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass, global::LightSwitchApplication.AppOption>.Entry(
                        "AppOptionProperty",
                        false,
                        global::LightSwitchApplication.AppOptionsEdit.DetailsClass.PropertySetProperties._AppOptionProperty_Stub,
                        global::LightSwitchApplication.AppOptionsEdit.DetailsClass.PropertySetProperties._AppOptionProperty_Validate,
                        global::LightSwitchApplication.AppOptionsEdit.DetailsClass.PropertySetProperties._AppOptionProperty_OnValueChanged);
                private static void _AppOptionProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AppOptionsEdit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass, global::LightSwitchApplication.AppOption>.Data> c, global::LightSwitchApplication.AppOptionsEdit.DetailsClass d, object sf)
                {
                    c(d, ref d._AppOptionProperty, sf);
                }
                private static void _AppOptionProperty_Validate(global::LightSwitchApplication.AppOptionsEdit s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.AppOptionProperty_Validate(r);
                }
                private static void _AppOptionProperty_OnValueChanged(global::LightSwitchApplication.AppOptionsEdit s)
                {
                    s.AppOptionProperty_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class CreateNewIssueDocument
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private CreateNewIssueDocument(global::System.Nullable<int> IssueId) : base("LightSwitchApplication:CreateNewIssueDocument")
        {
                this.IssueId = IssueId;
            global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static CreateNewIssueDocument CreateInstance(global::System.Nullable<int> IssueId)
        {
            return new global::LightSwitchApplication.CreateNewIssueDocument(
                        IssueId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueDocument_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueDocument_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueDocument_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueDocument_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueDocument_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueDocument_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueDocument_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void IssueDocumentProperty_Changed();

        partial void IssueId_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.IssueDocument IssueDocumentProperty
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties.IssueDocumentProperty);
            }
            set
            {
                global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties.IssueDocumentProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocumentProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IssueId
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties.IssueId);
            }
            set
            {
                global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties.IssueId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the UploadFileToDatabase screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void UploadFileToDatabase()
        {
            this.Details.Methods.UploadFileToDatabase.CreateInvocation().Execute();
        }
        partial void UploadFileToDatabase_CanExecute(ref bool result);
        partial void UploadFileToDatabase_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySet, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.CommandSet, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties.IssueDocumentProperty;
                var initializeCommandEntry = global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.CommandSetProperties.UploadFileToDatabase;
                var initializeMethodEntry = global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.MethodSetProperties.UploadFileToDatabase;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Entry
                __CreateNewIssueDocumentEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Entry(
                    global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.__CreateNewIssueDocument_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.__CreateNewIssueDocument_InvokeSavingEvent,
                    global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.__CreateNewIssueDocument_InvokeSavedEvent,
                    global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.__CreateNewIssueDocument_InvokeClosingEvent,
                    global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.__CreateNewIssueDocument_InvokeCreated,
                    global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.__CreateNewIssueDocument_InvokeActivated,
                    global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.__CreateNewIssueDocument_InvokeSaveErrorEvent);
            private static void __CreateNewIssueDocument_InvokeInitializeDataWorkspace(global::LightSwitchApplication.CreateNewIssueDocument s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.CreateNewIssueDocument_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __CreateNewIssueDocument_InvokeSavingEvent(global::LightSwitchApplication.CreateNewIssueDocument s)
            {
                bool handled = false;
                s.CreateNewIssueDocument_Saving(ref handled);
                return handled;
            }
            private static void __CreateNewIssueDocument_InvokeSavedEvent(global::LightSwitchApplication.CreateNewIssueDocument s)
            {
                s.CreateNewIssueDocument_Saved();
            }
            private static bool __CreateNewIssueDocument_InvokeClosingEvent(global::LightSwitchApplication.CreateNewIssueDocument s)
            {
                bool cancel = false;
                s.CreateNewIssueDocument_Closing(ref cancel);
                return cancel;
            }
            private static void __CreateNewIssueDocument_InvokeCreated(global::LightSwitchApplication.CreateNewIssueDocument s)
            {
                s.CreateNewIssueDocument_Created();
            }
            private static void __CreateNewIssueDocument_InvokeActivated(global::LightSwitchApplication.CreateNewIssueDocument s)
            {
                s.CreateNewIssueDocument_Activated();
            }
            private static bool __CreateNewIssueDocument_InvokeSaveErrorEvent(global::LightSwitchApplication.CreateNewIssueDocument s, global::System.Exception ex)
            {
                bool handled = false;
                s.CreateNewIssueDocument_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::LightSwitchApplication.IssueDocument>.Data _IssueDocumentProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::System.Nullable<int>>.Data _IssueId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Data _UploadFileToDatabaseCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Data _UploadFileToDatabaseMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::LightSwitchApplication.IssueDocument> IssueDocumentProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::LightSwitchApplication.IssueDocument>)base.GetItem(global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties.IssueDocumentProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::System.Nullable<int>> IssueId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::System.Nullable<int>>)base.GetItem(global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties.IssueId);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass> UploadFileToDatabase
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>)base.GetItem(global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.CommandSetProperties.UploadFileToDatabase);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass> UploadFileToDatabase
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>)base.GetItem(global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.MethodSetProperties.UploadFileToDatabase);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::LightSwitchApplication.IssueDocument>.Entry
                    IssueDocumentProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::LightSwitchApplication.IssueDocument>.Entry(
                        "IssueDocumentProperty",
                        false,
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties._IssueDocumentProperty_Stub,
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties._IssueDocumentProperty_Validate,
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties._IssueDocumentProperty_OnValueChanged);
                private static void _IssueDocumentProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::LightSwitchApplication.IssueDocument>.Data> c, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueDocumentProperty, sf);
                }
                private static void _IssueDocumentProperty_Validate(global::LightSwitchApplication.CreateNewIssueDocument s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueDocumentProperty_Validate(r);
                }
                private static void _IssueDocumentProperty_OnValueChanged(global::LightSwitchApplication.CreateNewIssueDocument s)
                {
                    s.IssueDocumentProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::System.Nullable<int>>.Entry
                    IssueId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IssueId",
                        false,
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties._IssueId_Stub,
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties._IssueId_Validate,
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties._IssueId_OnValueChanged);
                private static void _IssueId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueId, sf);
                }
                private static void _IssueId_Validate(global::LightSwitchApplication.CreateNewIssueDocument s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueId_Validate(r);
                }
                private static void _IssueId_OnValueChanged(global::LightSwitchApplication.CreateNewIssueDocument s)
                {
                    s.IssueId_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Entry
                    UploadFileToDatabase = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Entry(
                        "UploadFileToDatabase",
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.CommandSetProperties._UploadFileToDatabase_Stub,
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.CommandSetProperties._UploadFileToDatabase_CreateExecutableObject);
                private static void _UploadFileToDatabase_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Data> c, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass d, object sf)
                {
                    c(d, ref d._UploadFileToDatabaseCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _UploadFileToDatabase_CreateExecutableObject(global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass)d).Methods.UploadFileToDatabase.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Entry
                    UploadFileToDatabase = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Entry(
                        "UploadFileToDatabase",
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.MethodSetProperties._UploadFileToDatabase_Stub,
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.MethodSetProperties._UploadFileToDatabase_CanInvoke,
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.MethodSetProperties._UploadFileToDatabase_InvokeMethod);
                private static void _UploadFileToDatabase_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Data> c, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass d, object sf)
                {
                    c(d, ref d._UploadFileToDatabaseMethod, sf);
                }
                private static global::System.Exception _UploadFileToDatabase_CanInvoke(global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.UploadFileToDatabase_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _UploadFileToDatabase_InvokeMethod(global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.UploadFileToDatabase_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class IssueDocumentDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private IssueDocumentDetail(int IssueDocumentId) : base("LightSwitchApplication:IssueDocumentDetail")
        {
                this.IssueDocumentId = IssueDocumentId;
            global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static IssueDocumentDetail CreateInstance(int IssueDocumentId)
        {
            return new global::LightSwitchApplication.IssueDocumentDetail(
                        IssueDocumentId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocumentDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocumentDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocumentDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocumentDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocumentDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocumentDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocumentDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void IssueDocument_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocument_Loaded(bool succeeded);

        partial void IssueDocumentId_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.IssueDocument IssueDocument
        {
            get
            {
                return global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties.IssueDocument);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocument_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int IssueDocumentId
        {
            get 
            {
                return global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties.IssueDocumentId);
            }
            set
            {
                global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties.IssueDocumentId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocumentId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the SaveFileFromDatabase screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveFileFromDatabase()
        {
            this.Details.Methods.SaveFileFromDatabase.CreateInvocation().Execute();
        }
        partial void SaveFileFromDatabase_CanExecute(ref bool result);
        partial void SaveFileFromDatabase_Execute();

        /// <summary>
        /// Calls the OpenFileFromDatabase screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenFileFromDatabase()
        {
            this.Details.Methods.OpenFileFromDatabase.CreateInvocation().Execute();
        }
        partial void OpenFileFromDatabase_CanExecute(ref bool result);
        partial void OpenFileFromDatabase_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySet, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.CommandSet, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties.IssueDocument;
                var initializeCommandEntry = global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.CommandSetProperties.SaveFileFromDatabase;
                var initializeMethodEntry = global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSetProperties.SaveFileFromDatabase;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry
                __IssueDocumentDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.__IssueDocumentDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.__IssueDocumentDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.__IssueDocumentDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.__IssueDocumentDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.__IssueDocumentDetail_InvokeCreated,
                    global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.__IssueDocumentDetail_InvokeActivated,
                    global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.__IssueDocumentDetail_InvokeSaveErrorEvent);
            private static void __IssueDocumentDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.IssueDocumentDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.IssueDocumentDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __IssueDocumentDetail_InvokeSavingEvent(global::LightSwitchApplication.IssueDocumentDetail s)
            {
                bool handled = false;
                s.IssueDocumentDetail_Saving(ref handled);
                return handled;
            }
            private static void __IssueDocumentDetail_InvokeSavedEvent(global::LightSwitchApplication.IssueDocumentDetail s)
            {
                s.IssueDocumentDetail_Saved();
            }
            private static bool __IssueDocumentDetail_InvokeClosingEvent(global::LightSwitchApplication.IssueDocumentDetail s)
            {
                bool cancel = false;
                s.IssueDocumentDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __IssueDocumentDetail_InvokeCreated(global::LightSwitchApplication.IssueDocumentDetail s)
            {
                s.IssueDocumentDetail_Created();
            }
            private static void __IssueDocumentDetail_InvokeActivated(global::LightSwitchApplication.IssueDocumentDetail s)
            {
                s.IssueDocumentDetail_Activated();
            }
            private static bool __IssueDocumentDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.IssueDocumentDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.IssueDocumentDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::LightSwitchApplication.IssueDocument>.Data _IssueDocument;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, int>.Data _IssueDocumentId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Data _SaveFileFromDatabaseCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Data _OpenFileFromDatabaseCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Data _SaveFileFromDatabaseMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Data _OpenFileFromDatabaseMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::LightSwitchApplication.IssueDocument> IssueDocument
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::LightSwitchApplication.IssueDocument>)base.GetItem(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties.IssueDocument);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, int> IssueDocumentId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties.IssueDocumentId);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass> SaveFileFromDatabase
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.CommandSetProperties.SaveFileFromDatabase);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass> OpenFileFromDatabase
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.CommandSetProperties.OpenFileFromDatabase);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass> SaveFileFromDatabase
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSetProperties.SaveFileFromDatabase);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass> OpenFileFromDatabase
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSetProperties.OpenFileFromDatabase);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::LightSwitchApplication.IssueDocument>.Entry
                    IssueDocument = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::LightSwitchApplication.IssueDocument>.Entry(
                        "IssueDocument",
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties._IssueDocument_Stub,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties._IssueDocument_Validate,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties._IssueDocument_CreateQuery,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties._IssueDocument_OnValueChanged,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties._IssueDocument_OnLoaded);
                private static void _IssueDocument_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::LightSwitchApplication.IssueDocument>.Data> c, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueDocument, sf);
                }
                private static void _IssueDocument_Validate(global::LightSwitchApplication.IssueDocumentDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueDocument_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IssueDocument_CreateQuery(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _IssueDocument_OnValueChanged(global::LightSwitchApplication.IssueDocumentDetail s)
                {
                    s.IssueDocument_Changed();
                }

                private static void _IssueDocument_OnLoaded(global::LightSwitchApplication.IssueDocumentDetail s, bool succeeded)
                {
                    s.IssueDocument_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, int>.Entry
                    IssueDocumentId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, int>.Entry(
                        "IssueDocumentId",
                        false,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties._IssueDocumentId_Stub,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties._IssueDocumentId_Validate,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties._IssueDocumentId_OnValueChanged);
                private static void _IssueDocumentId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueDocumentId, sf);
                }
                private static void _IssueDocumentId_Validate(global::LightSwitchApplication.IssueDocumentDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueDocumentId_Validate(r);
                }
                private static void _IssueDocumentId_OnValueChanged(global::LightSwitchApplication.IssueDocumentDetail s)
                {
                    s.IssueDocumentId_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry
                    SaveFileFromDatabase = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry(
                        "SaveFileFromDatabase",
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.CommandSetProperties._SaveFileFromDatabase_Stub,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.CommandSetProperties._SaveFileFromDatabase_CreateExecutableObject);
                private static void _SaveFileFromDatabase_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveFileFromDatabaseCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveFileFromDatabase_CreateExecutableObject(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueDocumentDetail.DetailsClass)d).Methods.SaveFileFromDatabase.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry
                    OpenFileFromDatabase = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry(
                        "OpenFileFromDatabase",
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.CommandSetProperties._OpenFileFromDatabase_Stub,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.CommandSetProperties._OpenFileFromDatabase_CreateExecutableObject);
                private static void _OpenFileFromDatabase_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFileFromDatabaseCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenFileFromDatabase_CreateExecutableObject(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueDocumentDetail.DetailsClass)d).Methods.OpenFileFromDatabase.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry
                    SaveFileFromDatabase = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry(
                        "SaveFileFromDatabase",
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSetProperties._SaveFileFromDatabase_Stub,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSetProperties._SaveFileFromDatabase_CanInvoke,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSetProperties._SaveFileFromDatabase_InvokeMethod);
                private static void _SaveFileFromDatabase_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveFileFromDatabaseMethod, sf);
                }
                private static global::System.Exception _SaveFileFromDatabase_CanInvoke(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveFileFromDatabase_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveFileFromDatabase_InvokeMethod(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveFileFromDatabase_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry
                    OpenFileFromDatabase = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry(
                        "OpenFileFromDatabase",
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSetProperties._OpenFileFromDatabase_Stub,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSetProperties._OpenFileFromDatabase_CanInvoke,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSetProperties._OpenFileFromDatabase_InvokeMethod);
                private static void _OpenFileFromDatabase_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFileFromDatabaseMethod, sf);
                }
                private static global::System.Exception _OpenFileFromDatabase_CanInvoke(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenFileFromDatabase_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenFileFromDatabase_InvokeMethod(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenFileFromDatabase_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Info
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private Info() : base("LightSwitchApplication:Info")
        {
            global::LightSwitchApplication.Info.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static Info CreateInstance()
        {
            return new global::LightSwitchApplication.Info(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass, global::LightSwitchApplication.Info.DetailsClass.PropertySet, global::LightSwitchApplication.Info.DetailsClass.CommandSet, global::LightSwitchApplication.Info.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass>.Entry
                __InfoEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass>.Entry(
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeSavingEvent,
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeSavedEvent,
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeClosingEvent,
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeCreated,
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeActivated,
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeSaveErrorEvent);
            private static void __Info_InvokeInitializeDataWorkspace(global::LightSwitchApplication.Info s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.Info_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __Info_InvokeSavingEvent(global::LightSwitchApplication.Info s)
            {
                bool handled = false;
                s.Info_Saving(ref handled);
                return handled;
            }
            private static void __Info_InvokeSavedEvent(global::LightSwitchApplication.Info s)
            {
                s.Info_Saved();
            }
            private static bool __Info_InvokeClosingEvent(global::LightSwitchApplication.Info s)
            {
                bool cancel = false;
                s.Info_Closing(ref cancel);
                return cancel;
            }
            private static void __Info_InvokeCreated(global::LightSwitchApplication.Info s)
            {
                s.Info_Created();
            }
            private static void __Info_InvokeActivated(global::LightSwitchApplication.Info s)
            {
                s.Info_Activated();
            }
            private static bool __Info_InvokeSaveErrorEvent(global::LightSwitchApplication.Info s, global::System.Exception ex)
            {
                bool handled = false;
                s.Info_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.Info.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.Info.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.Info.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
}

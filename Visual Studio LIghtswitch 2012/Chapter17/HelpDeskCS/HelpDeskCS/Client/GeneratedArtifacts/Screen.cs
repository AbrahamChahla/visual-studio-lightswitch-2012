//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EditableIssuesGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditableIssuesGrid() : base("LightSwitchApplication:EditableIssuesGrid")
        {
            global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditableIssuesGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditableIssuesGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issues_SelectionChanged();

        partial void Issues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Issues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> Issues
        {
            get
            {
                return global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties.Issues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties.Issues;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry
                __EditableIssuesGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeCreated,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeActivated,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeSaveErrorEvent);
            private static void __EditableIssuesGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditableIssuesGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditableIssuesGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditableIssuesGrid_InvokeSavingEvent(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                bool handled = false;
                s.EditableIssuesGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditableIssuesGrid_InvokeSavedEvent(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                s.EditableIssuesGrid_Saved();
            }
            private static bool __EditableIssuesGrid_InvokeClosingEvent(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                bool cancel = false;
                s.EditableIssuesGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditableIssuesGrid_InvokeCreated(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                s.EditableIssuesGrid_Created();
            }
            private static void __EditableIssuesGrid_InvokeActivated(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                s.EditableIssuesGrid_Activated();
            }
            private static bool __EditableIssuesGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditableIssuesGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditableIssuesGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssuesQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            this.Screen.DataWorkspace.ApplicationData.Issues,
                            "IssueStatus"),
                        "AssignedTo"),
                    "ClosedByEngineer");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issues;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue> Issues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties.Issues);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issues",
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_Stub,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_Validate,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_CreateQuery,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_SelectionChanged,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_OnCollectionChanged,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_OnLoaded);
                private static void _Issues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Issues, sf);
                }
                private static void _Issues_Validate(global::LightSwitchApplication.EditableIssuesGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issues_CreateQuery(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, object[] args)
                {
                    return d.IssuesQuery();
                }
                private static void _Issues_SelectionChanged(global::LightSwitchApplication.EditableIssuesGrid s)
                {
                    s.Issues_SelectionChanged();
                }
                private static void _Issues_OnCollectionChanged(global::LightSwitchApplication.EditableIssuesGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Issues_Changed(e);
                }
                private static void _Issues_OnLoaded(global::LightSwitchApplication.EditableIssuesGrid s, bool succeeded)
                {
                    s.Issues_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EngineerDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EngineerDetail(int EngineerId) : base("LightSwitchApplication:EngineerDetail")
        {
                this.EngineerId = EngineerId;
            global::LightSwitchApplication.EngineerDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EngineerDetail CreateInstance(int EngineerId)
        {
            return new global::LightSwitchApplication.EngineerDetail(
                        EngineerId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineer_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Loaded(bool succeeded);

        partial void EngineerId_Changed();

        partial void Issues_SelectionChanged();

        partial void Issues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Loaded(bool succeeded);

        partial void EngineerToAdd_Changed();

        partial void Subordinates_SelectionChanged();

        partial void Subordinates_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subordinates_Loaded(bool succeeded);

        partial void LoginNameProperty_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer Engineer
        {
            get
            {
                return global::LightSwitchApplication.EngineerDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.Engineer);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EngineerId
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.EngineerId);
            }
            set
            {
                global::LightSwitchApplication.EngineerDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.EngineerId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Issues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> Issues
        {
            get
            {
                return global::LightSwitchApplication.EngineerDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.Issues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer EngineerToAdd
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.EngineerToAdd);
            }
            set
            {
                global::LightSwitchApplication.EngineerDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.EngineerToAdd, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerToAdd_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Subordinates visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Engineer> Subordinates
        {
            get
            {
                return global::LightSwitchApplication.EngineerDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.Subordinates);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subordinates_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LoginNameProperty
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.LoginNameProperty);
            }
            set
            {
                global::LightSwitchApplication.EngineerDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.LoginNameProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LoginNameProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the ValidationSummary screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ValidationSummary()
        {
            this.Details.Methods.ValidationSummary.CreateInvocation().Execute();
        }
        partial void ValidationSummary_CanExecute(ref bool result);
        partial void ValidationSummary_Execute();

        /// <summary>
        /// Calls the AssignSubordinate screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AssignSubordinate()
        {
            this.Details.Methods.AssignSubordinate.CreateInvocation().Execute();
        }
        partial void AssignSubordinate_CanExecute(ref bool result);
        partial void AssignSubordinate_Execute();

        /// <summary>
        /// Calls the UnassignSubordinate screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void UnassignSubordinate()
        {
            this.Details.Methods.UnassignSubordinate.CreateInvocation().Execute();
        }
        partial void UnassignSubordinate_CanExecute(ref bool result);
        partial void UnassignSubordinate_Execute();

        /// <summary>
        /// Calls the CloseModalWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CloseModalWindow()
        {
            this.Details.Methods.CloseModalWindow.CreateInvocation().Execute();
        }
        partial void CloseModalWindow_CanExecute(ref bool result);
        partial void CloseModalWindow_Execute();

        /// <summary>
        /// Calls the OkModalWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OkModalWindow()
        {
            this.Details.Methods.OkModalWindow.CreateInvocation().Execute();
        }
        partial void OkModalWindow_CanExecute(ref bool result);
        partial void OkModalWindow_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySet, global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSet, global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.Engineer;
                var initializeCommandEntry = global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties.ValidationSummary;
                var initializeMethodEntry = global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties.ValidationSummary;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                __EngineerDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeCreated,
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeActivated,
                    global::LightSwitchApplication.EngineerDetail.DetailsClass.__EngineerDetail_InvokeSaveErrorEvent);
            private static void __EngineerDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EngineerDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EngineerDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EngineerDetail_InvokeSavingEvent(global::LightSwitchApplication.EngineerDetail s)
            {
                bool handled = false;
                s.EngineerDetail_Saving(ref handled);
                return handled;
            }
            private static void __EngineerDetail_InvokeSavedEvent(global::LightSwitchApplication.EngineerDetail s)
            {
                s.EngineerDetail_Saved();
            }
            private static bool __EngineerDetail_InvokeClosingEvent(global::LightSwitchApplication.EngineerDetail s)
            {
                bool cancel = false;
                s.EngineerDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __EngineerDetail_InvokeCreated(global::LightSwitchApplication.EngineerDetail s)
            {
                s.EngineerDetail_Created();
            }
            private static void __EngineerDetail_InvokeActivated(global::LightSwitchApplication.EngineerDetail s)
            {
                s.EngineerDetail_Activated();
            }
            private static bool __EngineerDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.EngineerDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.EngineerDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssuesQuery()
            {
                if (this.Screen.Engineer == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Engineer.Details.Properties.Issues).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SubordinatesQuery()
            {
                if (this.Screen.Engineer == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Engineer> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Engineer>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Engineer.Details.Properties.Subordinates).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineer;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, int>.Data _EngineerId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issues;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Data _EngineerToAdd;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Subordinates;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, string>.Data _LoginNameProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data _ValidationSummaryCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data _AssignSubordinateCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data _UnassignSubordinateCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data _CloseModalWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data _OkModalWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data _ValidationSummaryMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data _AssignSubordinateMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data _UnassignSubordinateMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data _CloseModalWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data _OkModalWindowMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer> Engineer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.Engineer);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, int> EngineerId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.EngineerId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Issue> Issues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.Issues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer> EngineerToAdd
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.EngineerToAdd);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer> Subordinates
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.Subordinates);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, string> LoginNameProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties.LoginNameProperty);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass> ValidationSummary
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties.ValidationSummary);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass> AssignSubordinate
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties.AssignSubordinate);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass> UnassignSubordinate
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties.UnassignSubordinate);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass> CloseModalWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties.CloseModalWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass> OkModalWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties.OkModalWindow);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass> ValidationSummary
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties.ValidationSummary);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass> AssignSubordinate
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties.AssignSubordinate);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass> UnassignSubordinate
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties.UnassignSubordinate);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass> CloseModalWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties.CloseModalWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass> OkModalWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties.OkModalWindow);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineer",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Engineer_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Engineer_Validate,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Engineer_CreateQuery,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Engineer_OnValueChanged,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Engineer_OnLoaded);
                private static void _Engineer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineer, sf);
                }
                private static void _Engineer_Validate(global::LightSwitchApplication.EngineerDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineer_CreateQuery(global::LightSwitchApplication.EngineerDetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Engineer_OnValueChanged(global::LightSwitchApplication.EngineerDetail s)
                {
                    s.Engineer_Changed();
                }

                private static void _Engineer_OnLoaded(global::LightSwitchApplication.EngineerDetail s, bool succeeded)
                {
                    s.Engineer_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, int>.Entry
                    EngineerId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, int>.Entry(
                        "EngineerId",
                        false,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._EngineerId_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._EngineerId_Validate,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._EngineerId_OnValueChanged);
                private static void _EngineerId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerId, sf);
                }
                private static void _EngineerId_Validate(global::LightSwitchApplication.EngineerDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerId_Validate(r);
                }
                private static void _EngineerId_OnValueChanged(global::LightSwitchApplication.EngineerDetail s)
                {
                    s.EngineerId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issues",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Issues_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Issues_Validate,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Issues_CreateQuery,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Issues_SelectionChanged,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Issues_OnCollectionChanged,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Issues_OnLoaded);
                private static void _Issues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Issues, sf);
                }
                private static void _Issues_Validate(global::LightSwitchApplication.EngineerDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issues_CreateQuery(global::LightSwitchApplication.EngineerDetail.DetailsClass d, object[] args)
                {
                    return d.IssuesQuery();
                }
                private static void _Issues_SelectionChanged(global::LightSwitchApplication.EngineerDetail s)
                {
                    s.Issues_SelectionChanged();
                }
                private static void _Issues_OnCollectionChanged(global::LightSwitchApplication.EngineerDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Issues_Changed(e);
                }
                private static void _Issues_OnLoaded(global::LightSwitchApplication.EngineerDetail s, bool succeeded)
                {
                    s.Issues_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    EngineerToAdd = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "EngineerToAdd",
                        false,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._EngineerToAdd_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._EngineerToAdd_Validate,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._EngineerToAdd_OnValueChanged);
                private static void _EngineerToAdd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerToAdd, sf);
                }
                private static void _EngineerToAdd_Validate(global::LightSwitchApplication.EngineerDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerToAdd_Validate(r);
                }
                private static void _EngineerToAdd_OnValueChanged(global::LightSwitchApplication.EngineerDetail s)
                {
                    s.EngineerToAdd_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Subordinates = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Subordinates",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Subordinates_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Subordinates_Validate,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Subordinates_CreateQuery,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Subordinates_SelectionChanged,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Subordinates_OnCollectionChanged,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._Subordinates_OnLoaded);
                private static void _Subordinates_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Subordinates, sf);
                }
                private static void _Subordinates_Validate(global::LightSwitchApplication.EngineerDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Subordinates_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Subordinates_CreateQuery(global::LightSwitchApplication.EngineerDetail.DetailsClass d, object[] args)
                {
                    return d.SubordinatesQuery();
                }
                private static void _Subordinates_SelectionChanged(global::LightSwitchApplication.EngineerDetail s)
                {
                    s.Subordinates_SelectionChanged();
                }
                private static void _Subordinates_OnCollectionChanged(global::LightSwitchApplication.EngineerDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Subordinates_Changed(e);
                }
                private static void _Subordinates_OnLoaded(global::LightSwitchApplication.EngineerDetail s, bool succeeded)
                {
                    s.Subordinates_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, string>.Entry
                    LoginNameProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, string>.Entry(
                        "LoginNameProperty",
                        false,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._LoginNameProperty_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._LoginNameProperty_Validate,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.PropertySetProperties._LoginNameProperty_OnValueChanged);
                private static void _LoginNameProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._LoginNameProperty, sf);
                }
                private static void _LoginNameProperty_Validate(global::LightSwitchApplication.EngineerDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.LoginNameProperty_Validate(r);
                }
                private static void _LoginNameProperty_OnValueChanged(global::LightSwitchApplication.EngineerDetail s)
                {
                    s.LoginNameProperty_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                    ValidationSummary = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                        "ValidationSummary",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties._ValidationSummary_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties._ValidationSummary_CreateExecutableObject);
                private static void _ValidationSummary_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ValidationSummaryCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ValidationSummary_CreateExecutableObject(global::LightSwitchApplication.EngineerDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDetail.DetailsClass)d).Methods.ValidationSummary.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                    AssignSubordinate = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                        "AssignSubordinate",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties._AssignSubordinate_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties._AssignSubordinate_CreateExecutableObject);
                private static void _AssignSubordinate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AssignSubordinateCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AssignSubordinate_CreateExecutableObject(global::LightSwitchApplication.EngineerDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDetail.DetailsClass)d).Methods.AssignSubordinate.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                    UnassignSubordinate = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                        "UnassignSubordinate",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties._UnassignSubordinate_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties._UnassignSubordinate_CreateExecutableObject);
                private static void _UnassignSubordinate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._UnassignSubordinateCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _UnassignSubordinate_CreateExecutableObject(global::LightSwitchApplication.EngineerDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDetail.DetailsClass)d).Methods.UnassignSubordinate.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                    CloseModalWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                        "CloseModalWindow",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties._CloseModalWindow_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties._CloseModalWindow_CreateExecutableObject);
                private static void _CloseModalWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CloseModalWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CloseModalWindow_CreateExecutableObject(global::LightSwitchApplication.EngineerDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDetail.DetailsClass)d).Methods.CloseModalWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                    OkModalWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                        "OkModalWindow",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties._OkModalWindow_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.CommandSetProperties._OkModalWindow_CreateExecutableObject);
                private static void _OkModalWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._OkModalWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OkModalWindow_CreateExecutableObject(global::LightSwitchApplication.EngineerDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDetail.DetailsClass)d).Methods.OkModalWindow.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                    ValidationSummary = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                        "ValidationSummary",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._ValidationSummary_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._ValidationSummary_CanInvoke,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._ValidationSummary_InvokeMethod);
                private static void _ValidationSummary_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ValidationSummaryMethod, sf);
                }
                private static global::System.Exception _ValidationSummary_CanInvoke(global::LightSwitchApplication.EngineerDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ValidationSummary_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ValidationSummary_InvokeMethod(global::LightSwitchApplication.EngineerDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ValidationSummary_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                    AssignSubordinate = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                        "AssignSubordinate",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._AssignSubordinate_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._AssignSubordinate_CanInvoke,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._AssignSubordinate_InvokeMethod);
                private static void _AssignSubordinate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AssignSubordinateMethod, sf);
                }
                private static global::System.Exception _AssignSubordinate_CanInvoke(global::LightSwitchApplication.EngineerDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AssignSubordinate_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AssignSubordinate_InvokeMethod(global::LightSwitchApplication.EngineerDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AssignSubordinate_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                    UnassignSubordinate = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                        "UnassignSubordinate",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._UnassignSubordinate_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._UnassignSubordinate_CanInvoke,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._UnassignSubordinate_InvokeMethod);
                private static void _UnassignSubordinate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._UnassignSubordinateMethod, sf);
                }
                private static global::System.Exception _UnassignSubordinate_CanInvoke(global::LightSwitchApplication.EngineerDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.UnassignSubordinate_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _UnassignSubordinate_InvokeMethod(global::LightSwitchApplication.EngineerDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.UnassignSubordinate_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                    CloseModalWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                        "CloseModalWindow",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._CloseModalWindow_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._CloseModalWindow_CanInvoke,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._CloseModalWindow_InvokeMethod);
                private static void _CloseModalWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CloseModalWindowMethod, sf);
                }
                private static global::System.Exception _CloseModalWindow_CanInvoke(global::LightSwitchApplication.EngineerDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CloseModalWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CloseModalWindow_InvokeMethod(global::LightSwitchApplication.EngineerDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CloseModalWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry
                    OkModalWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Entry(
                        "OkModalWindow",
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._OkModalWindow_Stub,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._OkModalWindow_CanInvoke,
                        global::LightSwitchApplication.EngineerDetail.DetailsClass.MethodSetProperties._OkModalWindow_InvokeMethod);
                private static void _OkModalWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDetail, global::LightSwitchApplication.EngineerDetail.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._OkModalWindowMethod, sf);
                }
                private static global::System.Exception _OkModalWindow_CanInvoke(global::LightSwitchApplication.EngineerDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OkModalWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OkModalWindow_InvokeMethod(global::LightSwitchApplication.EngineerDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OkModalWindow_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EngineerIssues
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EngineerIssues(int EngineerId) : base("LightSwitchApplication:EngineerIssues")
        {
                this.EngineerId = EngineerId;
            global::LightSwitchApplication.EngineerIssues.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EngineerIssues CreateInstance(int EngineerId)
        {
            return new global::LightSwitchApplication.EngineerIssues(
                        EngineerId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineer_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Loaded(bool succeeded);

        partial void EngineerId_Changed();

        partial void Issues_SelectionChanged();

        partial void Issues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer Engineer
        {
            get
            {
                return global::LightSwitchApplication.EngineerIssues.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.Engineer);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EngineerId
        {
            get 
            {
                return global::LightSwitchApplication.EngineerIssues.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.EngineerId);
            }
            set
            {
                global::LightSwitchApplication.EngineerIssues.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.EngineerId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Issues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> Issues
        {
            get
            {
                return global::LightSwitchApplication.EngineerIssues.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.Issues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySet, global::LightSwitchApplication.EngineerIssues.DetailsClass.CommandSet, global::LightSwitchApplication.EngineerIssues.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.Engineer;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass>.Entry
                __EngineerIssuesEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass>.Entry(
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeSavingEvent,
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeSavedEvent,
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeClosingEvent,
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeCreated,
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeActivated,
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeSaveErrorEvent);
            private static void __EngineerIssues_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EngineerIssues s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EngineerIssues_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EngineerIssues_InvokeSavingEvent(global::LightSwitchApplication.EngineerIssues s)
            {
                bool handled = false;
                s.EngineerIssues_Saving(ref handled);
                return handled;
            }
            private static void __EngineerIssues_InvokeSavedEvent(global::LightSwitchApplication.EngineerIssues s)
            {
                s.EngineerIssues_Saved();
            }
            private static bool __EngineerIssues_InvokeClosingEvent(global::LightSwitchApplication.EngineerIssues s)
            {
                bool cancel = false;
                s.EngineerIssues_Closing(ref cancel);
                return cancel;
            }
            private static void __EngineerIssues_InvokeCreated(global::LightSwitchApplication.EngineerIssues s)
            {
                s.EngineerIssues_Created();
            }
            private static void __EngineerIssues_InvokeActivated(global::LightSwitchApplication.EngineerIssues s)
            {
                s.EngineerIssues_Activated();
            }
            private static bool __EngineerIssues_InvokeSaveErrorEvent(global::LightSwitchApplication.EngineerIssues s, global::System.Exception ex)
            {
                bool handled = false;
                s.EngineerIssues_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EngineerIssues.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EngineerIssues.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssuesQuery()
            {
                if (this.Screen.Engineer == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Engineer.Details.Properties.Issues).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        loader,
                        "IssueStatus"),
                    "ClosedByEngineer");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineer;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, int>.Data _EngineerId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issues;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Engineer> Engineer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.Engineer);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, int> EngineerId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.EngineerId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Issue> Issues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.Issues);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineer",
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Engineer_Stub,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Engineer_Validate,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Engineer_CreateQuery,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Engineer_OnValueChanged,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Engineer_OnLoaded);
                private static void _Engineer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerIssues.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineerIssues.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineer, sf);
                }
                private static void _Engineer_Validate(global::LightSwitchApplication.EngineerIssues s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineer_CreateQuery(global::LightSwitchApplication.EngineerIssues.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Engineer_OnValueChanged(global::LightSwitchApplication.EngineerIssues s)
                {
                    s.Engineer_Changed();
                }

                private static void _Engineer_OnLoaded(global::LightSwitchApplication.EngineerIssues s, bool succeeded)
                {
                    s.Engineer_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, int>.Entry
                    EngineerId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, int>.Entry(
                        "EngineerId",
                        false,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._EngineerId_Stub,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._EngineerId_Validate,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._EngineerId_OnValueChanged);
                private static void _EngineerId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerIssues.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, int>.Data> c, global::LightSwitchApplication.EngineerIssues.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerId, sf);
                }
                private static void _EngineerId_Validate(global::LightSwitchApplication.EngineerIssues s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerId_Validate(r);
                }
                private static void _EngineerId_OnValueChanged(global::LightSwitchApplication.EngineerIssues s)
                {
                    s.EngineerId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issues",
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Issues_Stub,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Issues_Validate,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Issues_CreateQuery,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Issues_SelectionChanged,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Issues_OnCollectionChanged,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Issues_OnLoaded);
                private static void _Issues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerIssues.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.EngineerIssues.DetailsClass d, object sf)
                {
                    c(d, ref d._Issues, sf);
                }
                private static void _Issues_Validate(global::LightSwitchApplication.EngineerIssues s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issues_CreateQuery(global::LightSwitchApplication.EngineerIssues.DetailsClass d, object[] args)
                {
                    return d.IssuesQuery();
                }
                private static void _Issues_SelectionChanged(global::LightSwitchApplication.EngineerIssues s)
                {
                    s.Issues_SelectionChanged();
                }
                private static void _Issues_OnCollectionChanged(global::LightSwitchApplication.EngineerIssues s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Issues_Changed(e);
                }
                private static void _Issues_OnLoaded(global::LightSwitchApplication.EngineerIssues s, bool succeeded)
                {
                    s.Issues_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class IssueDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private IssueDetail(int IssueId) : base("LightSwitchApplication:IssueDetail")
        {
                this.IssueId = IssueId;
            global::LightSwitchApplication.IssueDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static IssueDetail CreateInstance(int IssueId)
        {
            return new global::LightSwitchApplication.IssueDetail(
                        IssueId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issue_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Loaded(bool succeeded);

        partial void IssueId_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue Issue
        {
            get
            {
                return global::LightSwitchApplication.IssueDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.Issue);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int IssueId
        {
            get 
            {
                return global::LightSwitchApplication.IssueDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.IssueId);
            }
            set
            {
                global::LightSwitchApplication.IssueDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.IssueId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the DiscardIssueRespChanges screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DiscardIssueRespChanges()
        {
            this.Details.Methods.DiscardIssueRespChanges.CreateInvocation().Execute();
        }
        partial void DiscardIssueRespChanges_CanExecute(ref bool result);
        partial void DiscardIssueRespChanges_Execute();

        /// <summary>
        /// Calls the DeleteIssue screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DeleteIssue()
        {
            this.Details.Methods.DeleteIssue.CreateInvocation().Execute();
        }
        partial void DeleteIssue_CanExecute(ref bool result);
        partial void DeleteIssue_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySet, global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSet, global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.Issue;
                var initializeCommandEntry = global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties.DiscardIssueRespChanges;
                var initializeMethodEntry = global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties.DiscardIssueRespChanges;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry
                __IssueDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeCreated,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeActivated,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeSaveErrorEvent);
            private static void __IssueDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.IssueDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.IssueDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __IssueDetail_InvokeSavingEvent(global::LightSwitchApplication.IssueDetail s)
            {
                bool handled = false;
                s.IssueDetail_Saving(ref handled);
                return handled;
            }
            private static void __IssueDetail_InvokeSavedEvent(global::LightSwitchApplication.IssueDetail s)
            {
                s.IssueDetail_Saved();
            }
            private static bool __IssueDetail_InvokeClosingEvent(global::LightSwitchApplication.IssueDetail s)
            {
                bool cancel = false;
                s.IssueDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __IssueDetail_InvokeCreated(global::LightSwitchApplication.IssueDetail s)
            {
                s.IssueDetail_Created();
            }
            private static void __IssueDetail_InvokeActivated(global::LightSwitchApplication.IssueDetail s)
            {
                s.IssueDetail_Activated();
            }
            private static bool __IssueDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.IssueDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.IssueDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issue;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>.Data _IssueId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data _DiscardIssueRespChangesCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data _DeleteIssueCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data _DiscardIssueRespChangesMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data _DeleteIssueMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue> Issue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.Issue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int> IssueId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.IssueId);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass> DiscardIssueRespChanges
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties.DiscardIssueRespChanges);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass> DeleteIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties.DeleteIssue);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass> DiscardIssueRespChanges
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties.DiscardIssueRespChanges);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass> DeleteIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties.DeleteIssue);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issue",
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_Validate,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_CreateQuery,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_OnValueChanged,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_OnLoaded);
                private static void _Issue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Issue, sf);
                }
                private static void _Issue_Validate(global::LightSwitchApplication.IssueDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issue_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issue_CreateQuery(global::LightSwitchApplication.IssueDetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Issue_OnValueChanged(global::LightSwitchApplication.IssueDetail s)
                {
                    s.Issue_Changed();
                }

                private static void _Issue_OnLoaded(global::LightSwitchApplication.IssueDetail s, bool succeeded)
                {
                    s.Issue_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>.Entry
                    IssueId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>.Entry(
                        "IssueId",
                        false,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._IssueId_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._IssueId_Validate,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._IssueId_OnValueChanged);
                private static void _IssueId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueId, sf);
                }
                private static void _IssueId_Validate(global::LightSwitchApplication.IssueDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueId_Validate(r);
                }
                private static void _IssueId_OnValueChanged(global::LightSwitchApplication.IssueDetail s)
                {
                    s.IssueId_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry
                    DiscardIssueRespChanges = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry(
                        "DiscardIssueRespChanges",
                        global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties._DiscardIssueRespChanges_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties._DiscardIssueRespChanges_CreateExecutableObject);
                private static void _DiscardIssueRespChanges_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._DiscardIssueRespChangesCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DiscardIssueRespChanges_CreateExecutableObject(global::LightSwitchApplication.IssueDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueDetail.DetailsClass)d).Methods.DiscardIssueRespChanges.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry
                    DeleteIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry(
                        "DeleteIssue",
                        global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties._DeleteIssue_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties._DeleteIssue_CreateExecutableObject);
                private static void _DeleteIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._DeleteIssueCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DeleteIssue_CreateExecutableObject(global::LightSwitchApplication.IssueDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueDetail.DetailsClass)d).Methods.DeleteIssue.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry
                    DiscardIssueRespChanges = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry(
                        "DiscardIssueRespChanges",
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._DiscardIssueRespChanges_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._DiscardIssueRespChanges_CanInvoke,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._DiscardIssueRespChanges_InvokeMethod);
                private static void _DiscardIssueRespChanges_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._DiscardIssueRespChangesMethod, sf);
                }
                private static global::System.Exception _DiscardIssueRespChanges_CanInvoke(global::LightSwitchApplication.IssueDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DiscardIssueRespChanges_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DiscardIssueRespChanges_InvokeMethod(global::LightSwitchApplication.IssueDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DiscardIssueRespChanges_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry
                    DeleteIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry(
                        "DeleteIssue",
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._DeleteIssue_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._DeleteIssue_CanInvoke,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._DeleteIssue_InvokeMethod);
                private static void _DeleteIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._DeleteIssueMethod, sf);
                }
                private static global::System.Exception _DeleteIssue_CanInvoke(global::LightSwitchApplication.IssueDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DeleteIssue_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DeleteIssue_InvokeMethod(global::LightSwitchApplication.IssueDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DeleteIssue_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EngineerDashboard
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EngineerDashboard(int EngineerId) : base("LightSwitchApplication:EngineerDashboard")
        {
                this.EngineerId = EngineerId;
            global::LightSwitchApplication.EngineerDashboard.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EngineerDashboard CreateInstance(int EngineerId)
        {
            return new global::LightSwitchApplication.EngineerDashboard(
                        EngineerId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineer_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Loaded(bool succeeded);

        partial void EngineerId_Changed();

        partial void IssuesOverdueLabel_Changed();

        partial void ScreenTitle_Changed();

        partial void IssuesOutstandingLabel_Changed();

        partial void Issues5OldestLabel_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer Engineer
        {
            get
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Engineer);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EngineerId
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.EngineerId);
            }
            set
            {
                global::LightSwitchApplication.EngineerDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.EngineerId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IssuesOverdueLabel
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.IssuesOverdueLabel);
            }
            set
            {
                global::LightSwitchApplication.EngineerDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.IssuesOverdueLabel, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesOverdueLabel_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ScreenTitle
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.ScreenTitle);
            }
            set
            {
                global::LightSwitchApplication.EngineerDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.ScreenTitle, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScreenTitle_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IssuesOutstandingLabel
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.IssuesOutstandingLabel);
            }
            set
            {
                global::LightSwitchApplication.EngineerDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.IssuesOutstandingLabel, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesOutstandingLabel_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Issues5OldestLabel
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Issues5OldestLabel);
            }
            set
            {
                global::LightSwitchApplication.EngineerDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Issues5OldestLabel, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues5OldestLabel_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the RefreshAllScreens screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RefreshAllScreens()
        {
            this.Details.Methods.RefreshAllScreens.CreateInvocation().Execute();
        }
        partial void RefreshAllScreens_CanExecute(ref bool result);
        partial void RefreshAllScreens_Execute();

        /// <summary>
        /// Calls the OpenIssueSearchScreen screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenIssueSearchScreen()
        {
            this.Details.Methods.OpenIssueSearchScreen.CreateInvocation().Execute();
        }
        partial void OpenIssueSearchScreen_CanExecute(ref bool result);
        partial void OpenIssueSearchScreen_Execute();

        /// <summary>
        /// Calls the OpenNewIssueScreen screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenNewIssueScreen()
        {
            this.Details.Methods.OpenNewIssueScreen.CreateInvocation().Execute();
        }
        partial void OpenNewIssueScreen_CanExecute(ref bool result);
        partial void OpenNewIssueScreen_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySet, global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSet, global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Engineer;
                var initializeCommandEntry = global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.RefreshAllScreens;
                var initializeMethodEntry = global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.RefreshAllScreens;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                __EngineerDashboardEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeSavingEvent,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeSavedEvent,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeClosingEvent,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeCreated,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeActivated,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeSaveErrorEvent);
            private static void __EngineerDashboard_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EngineerDashboard s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EngineerDashboard_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EngineerDashboard_InvokeSavingEvent(global::LightSwitchApplication.EngineerDashboard s)
            {
                bool handled = false;
                s.EngineerDashboard_Saving(ref handled);
                return handled;
            }
            private static void __EngineerDashboard_InvokeSavedEvent(global::LightSwitchApplication.EngineerDashboard s)
            {
                s.EngineerDashboard_Saved();
            }
            private static bool __EngineerDashboard_InvokeClosingEvent(global::LightSwitchApplication.EngineerDashboard s)
            {
                bool cancel = false;
                s.EngineerDashboard_Closing(ref cancel);
                return cancel;
            }
            private static void __EngineerDashboard_InvokeCreated(global::LightSwitchApplication.EngineerDashboard s)
            {
                s.EngineerDashboard_Created();
            }
            private static void __EngineerDashboard_InvokeActivated(global::LightSwitchApplication.EngineerDashboard s)
            {
                s.EngineerDashboard_Activated();
            }
            private static bool __EngineerDashboard_InvokeSaveErrorEvent(global::LightSwitchApplication.EngineerDashboard s, global::System.Exception ex)
            {
                bool handled = false;
                s.EngineerDashboard_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineer;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>.Data _EngineerId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data _IssuesOverdueLabel;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data _ScreenTitle;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data _IssuesOutstandingLabel;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data _Issues5OldestLabel;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _RefreshAllScreensCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _OpenIssueSearchScreenCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _OpenNewIssueScreenCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _RefreshAllScreensMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _OpenIssueSearchScreenMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _OpenNewIssueScreenMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer> Engineer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Engineer);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int> EngineerId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.EngineerId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string> IssuesOverdueLabel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.IssuesOverdueLabel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string> ScreenTitle
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.ScreenTitle);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string> IssuesOutstandingLabel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.IssuesOutstandingLabel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string> Issues5OldestLabel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Issues5OldestLabel);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> RefreshAllScreens
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.RefreshAllScreens);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> OpenIssueSearchScreen
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.OpenIssueSearchScreen);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> OpenNewIssueScreen
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.OpenNewIssueScreen);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> RefreshAllScreens
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.RefreshAllScreens);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> OpenIssueSearchScreen
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.OpenIssueSearchScreen);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> OpenNewIssueScreen
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.OpenNewIssueScreen);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineer",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_CreateQuery,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_OnValueChanged,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_OnLoaded);
                private static void _Engineer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineer, sf);
                }
                private static void _Engineer_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineer_CreateQuery(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Engineer_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.Engineer_Changed();
                }

                private static void _Engineer_OnLoaded(global::LightSwitchApplication.EngineerDashboard s, bool succeeded)
                {
                    s.Engineer_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>.Entry
                    EngineerId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>.Entry(
                        "EngineerId",
                        false,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._EngineerId_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._EngineerId_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._EngineerId_OnValueChanged);
                private static void _EngineerId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerId, sf);
                }
                private static void _EngineerId_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerId_Validate(r);
                }
                private static void _EngineerId_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.EngineerId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry
                    IssuesOverdueLabel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry(
                        "IssuesOverdueLabel",
                        false,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._IssuesOverdueLabel_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._IssuesOverdueLabel_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._IssuesOverdueLabel_OnValueChanged);
                private static void _IssuesOverdueLabel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._IssuesOverdueLabel, sf);
                }
                private static void _IssuesOverdueLabel_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssuesOverdueLabel_Validate(r);
                }
                private static void _IssuesOverdueLabel_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.IssuesOverdueLabel_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry
                    ScreenTitle = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry(
                        "ScreenTitle",
                        false,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._ScreenTitle_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._ScreenTitle_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._ScreenTitle_OnValueChanged);
                private static void _ScreenTitle_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ScreenTitle, sf);
                }
                private static void _ScreenTitle_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ScreenTitle_Validate(r);
                }
                private static void _ScreenTitle_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.ScreenTitle_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry
                    IssuesOutstandingLabel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry(
                        "IssuesOutstandingLabel",
                        false,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._IssuesOutstandingLabel_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._IssuesOutstandingLabel_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._IssuesOutstandingLabel_OnValueChanged);
                private static void _IssuesOutstandingLabel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._IssuesOutstandingLabel, sf);
                }
                private static void _IssuesOutstandingLabel_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssuesOutstandingLabel_Validate(r);
                }
                private static void _IssuesOutstandingLabel_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.IssuesOutstandingLabel_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry
                    Issues5OldestLabel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry(
                        "Issues5OldestLabel",
                        false,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Issues5OldestLabel_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Issues5OldestLabel_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Issues5OldestLabel_OnValueChanged);
                private static void _Issues5OldestLabel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._Issues5OldestLabel, sf);
                }
                private static void _Issues5OldestLabel_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issues5OldestLabel_Validate(r);
                }
                private static void _Issues5OldestLabel_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.Issues5OldestLabel_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    RefreshAllScreens = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "RefreshAllScreens",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._RefreshAllScreens_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._RefreshAllScreens_CreateExecutableObject);
                private static void _RefreshAllScreens_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._RefreshAllScreensCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _RefreshAllScreens_CreateExecutableObject(global::LightSwitchApplication.EngineerDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDashboard.DetailsClass)d).Methods.RefreshAllScreens.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    OpenIssueSearchScreen = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "OpenIssueSearchScreen",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._OpenIssueSearchScreen_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._OpenIssueSearchScreen_CreateExecutableObject);
                private static void _OpenIssueSearchScreen_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIssueSearchScreenCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenIssueSearchScreen_CreateExecutableObject(global::LightSwitchApplication.EngineerDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDashboard.DetailsClass)d).Methods.OpenIssueSearchScreen.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    OpenNewIssueScreen = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "OpenNewIssueScreen",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._OpenNewIssueScreen_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._OpenNewIssueScreen_CreateExecutableObject);
                private static void _OpenNewIssueScreen_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenNewIssueScreenCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenNewIssueScreen_CreateExecutableObject(global::LightSwitchApplication.EngineerDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDashboard.DetailsClass)d).Methods.OpenNewIssueScreen.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    RefreshAllScreens = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "RefreshAllScreens",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._RefreshAllScreens_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._RefreshAllScreens_CanInvoke,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._RefreshAllScreens_InvokeMethod);
                private static void _RefreshAllScreens_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._RefreshAllScreensMethod, sf);
                }
                private static global::System.Exception _RefreshAllScreens_CanInvoke(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.RefreshAllScreens_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _RefreshAllScreens_InvokeMethod(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.RefreshAllScreens_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    OpenIssueSearchScreen = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "OpenIssueSearchScreen",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenIssueSearchScreen_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenIssueSearchScreen_CanInvoke,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenIssueSearchScreen_InvokeMethod);
                private static void _OpenIssueSearchScreen_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIssueSearchScreenMethod, sf);
                }
                private static global::System.Exception _OpenIssueSearchScreen_CanInvoke(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenIssueSearchScreen_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenIssueSearchScreen_InvokeMethod(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenIssueSearchScreen_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    OpenNewIssueScreen = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "OpenNewIssueScreen",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenNewIssueScreen_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenNewIssueScreen_CanInvoke,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenNewIssueScreen_InvokeMethod);
                private static void _OpenNewIssueScreen_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenNewIssueScreenMethod, sf);
                }
                private static global::System.Exception _OpenNewIssueScreen_CanInvoke(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenNewIssueScreen_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenNewIssueScreen_InvokeMethod(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenNewIssueScreen_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EngineersManagerGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EngineersManagerGrid() : base("LightSwitchApplication:EngineersManagerGrid")
        {
            global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EngineersManagerGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EngineersManagerGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineers_SelectionChanged();

        partial void Engineers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Loaded(bool succeeded);

        partial void EngineerIssueReportURL_Changed();

        /// <summary>
        /// Gets the Engineers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Engineer> Engineers
        {
            get
            {
                return global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties.Engineers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EngineerIssueReportURL
        {
            get 
            {
                return global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties.EngineerIssueReportURL);
            }
            set
            {
                global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties.EngineerIssueReportURL, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssueReportURL_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the ViewDashboard screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ViewDashboard()
        {
            this.Details.Methods.ViewDashboard.CreateInvocation().Execute();
        }
        partial void ViewDashboard_CanExecute(ref bool result);
        partial void ViewDashboard_Execute();

        /// <summary>
        /// Calls the OpenEngineerIssueReport screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenEngineerIssueReport()
        {
            this.Details.Methods.OpenEngineerIssueReport.CreateInvocation().Execute();
        }
        partial void OpenEngineerIssueReport_CanExecute(ref bool result);
        partial void OpenEngineerIssueReport_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties.Engineers;
                var initializeCommandEntry = global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSetProperties.ViewDashboard;
                var initializeMethodEntry = global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties.ViewDashboard;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry
                __EngineersManagerGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeCreated,
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeActivated,
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeSaveErrorEvent);
            private static void __EngineersManagerGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EngineersManagerGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EngineersManagerGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EngineersManagerGrid_InvokeSavingEvent(global::LightSwitchApplication.EngineersManagerGrid s)
            {
                bool handled = false;
                s.EngineersManagerGrid_Saving(ref handled);
                return handled;
            }
            private static void __EngineersManagerGrid_InvokeSavedEvent(global::LightSwitchApplication.EngineersManagerGrid s)
            {
                s.EngineersManagerGrid_Saved();
            }
            private static bool __EngineersManagerGrid_InvokeClosingEvent(global::LightSwitchApplication.EngineersManagerGrid s)
            {
                bool cancel = false;
                s.EngineersManagerGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EngineersManagerGrid_InvokeCreated(global::LightSwitchApplication.EngineersManagerGrid s)
            {
                s.EngineersManagerGrid_Created();
            }
            private static void __EngineersManagerGrid_InvokeActivated(global::LightSwitchApplication.EngineersManagerGrid s)
            {
                s.EngineersManagerGrid_Activated();
            }
            private static bool __EngineersManagerGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EngineersManagerGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EngineersManagerGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EngineersQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Engineers;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineers;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, string>.Data _EngineerIssueReportURL;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data _ViewDashboardCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data _OpenEngineerIssueReportCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data _ViewDashboardMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data _OpenEngineerIssueReportMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer> Engineers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties.Engineers);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, string> EngineerIssueReportURL
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties.EngineerIssueReportURL);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass> ViewDashboard
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSetProperties.ViewDashboard);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass> OpenEngineerIssueReport
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSetProperties.OpenEngineerIssueReport);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass> ViewDashboard
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties.ViewDashboard);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass> OpenEngineerIssueReport
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties.OpenEngineerIssueReport);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineers",
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._Engineers_Stub,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._Engineers_Validate,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._Engineers_CreateQuery,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._Engineers_SelectionChanged,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._Engineers_OnCollectionChanged,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._Engineers_OnLoaded);
                private static void _Engineers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineers, sf);
                }
                private static void _Engineers_Validate(global::LightSwitchApplication.EngineersManagerGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineers_CreateQuery(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, object[] args)
                {
                    return d.EngineersQuery();
                }
                private static void _Engineers_SelectionChanged(global::LightSwitchApplication.EngineersManagerGrid s)
                {
                    s.Engineers_SelectionChanged();
                }
                private static void _Engineers_OnCollectionChanged(global::LightSwitchApplication.EngineersManagerGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Engineers_Changed(e);
                }
                private static void _Engineers_OnLoaded(global::LightSwitchApplication.EngineersManagerGrid s, bool succeeded)
                {
                    s.Engineers_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, string>.Entry
                    EngineerIssueReportURL = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, string>.Entry(
                        "EngineerIssueReportURL",
                        false,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._EngineerIssueReportURL_Stub,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._EngineerIssueReportURL_Validate,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._EngineerIssueReportURL_OnValueChanged);
                private static void _EngineerIssueReportURL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, string>.Data> c, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerIssueReportURL, sf);
                }
                private static void _EngineerIssueReportURL_Validate(global::LightSwitchApplication.EngineersManagerGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerIssueReportURL_Validate(r);
                }
                private static void _EngineerIssueReportURL_OnValueChanged(global::LightSwitchApplication.EngineersManagerGrid s)
                {
                    s.EngineerIssueReportURL_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry
                    ViewDashboard = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry(
                        "ViewDashboard",
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSetProperties._ViewDashboard_Stub,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSetProperties._ViewDashboard_CreateExecutableObject);
                private static void _ViewDashboard_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewDashboardCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ViewDashboard_CreateExecutableObject(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineersManagerGrid.DetailsClass)d).Methods.ViewDashboard.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry
                    OpenEngineerIssueReport = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry(
                        "OpenEngineerIssueReport",
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSetProperties._OpenEngineerIssueReport_Stub,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSetProperties._OpenEngineerIssueReport_CreateExecutableObject);
                private static void _OpenEngineerIssueReport_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenEngineerIssueReportCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenEngineerIssueReport_CreateExecutableObject(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineersManagerGrid.DetailsClass)d).Methods.OpenEngineerIssueReport.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry
                    ViewDashboard = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry(
                        "ViewDashboard",
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties._ViewDashboard_Stub,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties._ViewDashboard_CanInvoke,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties._ViewDashboard_InvokeMethod);
                private static void _ViewDashboard_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewDashboardMethod, sf);
                }
                private static global::System.Exception _ViewDashboard_CanInvoke(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ViewDashboard_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ViewDashboard_InvokeMethod(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ViewDashboard_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry
                    OpenEngineerIssueReport = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry(
                        "OpenEngineerIssueReport",
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties._OpenEngineerIssueReport_Stub,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties._OpenEngineerIssueReport_CanInvoke,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties._OpenEngineerIssueReport_InvokeMethod);
                private static void _OpenEngineerIssueReport_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenEngineerIssueReportMethod, sf);
                }
                private static global::System.Exception _OpenEngineerIssueReport_CanInvoke(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenEngineerIssueReport_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenEngineerIssueReport_InvokeMethod(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenEngineerIssueReport_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class IssueSearchAll
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private IssueSearchAll(global::System.Nullable<int> IssueEngineerId) : base("LightSwitchApplication:IssueSearchAll")
        {
                this.IssueEngineerId = IssueEngineerId;
            global::LightSwitchApplication.IssueSearchAll.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static IssueSearchAll CreateInstance(global::System.Nullable<int> IssueEngineerId)
        {
            return new global::LightSwitchApplication.IssueSearchAll(
                        IssueEngineerId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueSearchAll_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueSearchAll_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueSearchAll_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueSearchAll_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueSearchAll_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueSearchAll_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueSearchAll_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issues_SelectionChanged();

        partial void Issues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Loaded(bool succeeded);

        partial void IssueEngineerId_Changed();

        partial void IssueProblemDescription_Changed();

        partial void IssueCreateDateTimeStart_Changed();

        partial void IssueCreateDateTimeEnd_Changed();

        partial void IssueStatusId_Changed();

        partial void IssuePriorityId_Changed();

        partial void EngineerSelectionProperty_Changed();

        /// <summary>
        /// Gets the Issues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> Issues
        {
            get
            {
                return global::LightSwitchApplication.IssueSearchAll.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.Issues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IssueEngineerId
        {
            get 
            {
                return global::LightSwitchApplication.IssueSearchAll.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueEngineerId);
            }
            set
            {
                global::LightSwitchApplication.IssueSearchAll.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueEngineerId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueEngineerId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IssueProblemDescription
        {
            get 
            {
                return global::LightSwitchApplication.IssueSearchAll.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueProblemDescription);
            }
            set
            {
                global::LightSwitchApplication.IssueSearchAll.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueProblemDescription, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueProblemDescription_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> IssueCreateDateTimeStart
        {
            get 
            {
                return global::LightSwitchApplication.IssueSearchAll.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueCreateDateTimeStart);
            }
            set
            {
                global::LightSwitchApplication.IssueSearchAll.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueCreateDateTimeStart, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueCreateDateTimeStart_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> IssueCreateDateTimeEnd
        {
            get 
            {
                return global::LightSwitchApplication.IssueSearchAll.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueCreateDateTimeEnd);
            }
            set
            {
                global::LightSwitchApplication.IssueSearchAll.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueCreateDateTimeEnd, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueCreateDateTimeEnd_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IssueStatusId
        {
            get 
            {
                return global::LightSwitchApplication.IssueSearchAll.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueStatusId);
            }
            set
            {
                global::LightSwitchApplication.IssueSearchAll.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueStatusId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IssuePriorityId
        {
            get 
            {
                return global::LightSwitchApplication.IssueSearchAll.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssuePriorityId);
            }
            set
            {
                global::LightSwitchApplication.IssueSearchAll.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssuePriorityId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuePriorityId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer EngineerSelectionProperty
        {
            get 
            {
                return global::LightSwitchApplication.IssueSearchAll.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.EngineerSelectionProperty);
            }
            set
            {
                global::LightSwitchApplication.IssueSearchAll.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.EngineerSelectionProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSelectionProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the ToggleVisibility screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ToggleVisibility()
        {
            this.Details.Methods.ToggleVisibility.CreateInvocation().Execute();
        }
        partial void ToggleVisibility_CanExecute(ref bool result);
        partial void ToggleVisibility_Execute();

        /// <summary>
        /// Calls the SaveButton screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveButton()
        {
            this.Details.Methods.SaveButton.CreateInvocation().Execute();
        }
        partial void SaveButton_CanExecute(ref bool result);
        partial void SaveButton_Execute();

        /// <summary>
        /// Calls the CancelButton screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelButton()
        {
            this.Details.Methods.CancelButton.CreateInvocation().Execute();
        }
        partial void CancelButton_CanExecute(ref bool result);
        partial void CancelButton_Execute();

        /// <summary>
        /// Calls the AddItem screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddItem()
        {
            this.Details.Methods.AddItem.CreateInvocation().Execute();
        }
        partial void AddItem_CanExecute(ref bool result);
        partial void AddItem_Execute();

        /// <summary>
        /// Calls the EditItem screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EditItem()
        {
            this.Details.Methods.EditItem.CreateInvocation().Execute();
        }
        partial void EditItem_CanExecute(ref bool result);
        partial void EditItem_Execute();

        /// <summary>
        /// Calls the DeleteItem screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DeleteItem()
        {
            this.Details.Methods.DeleteItem.CreateInvocation().Execute();
        }
        partial void DeleteItem_CanExecute(ref bool result);
        partial void DeleteItem_Execute();

        /// <summary>
        /// Calls the SaveItem screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveItem()
        {
            this.Details.Methods.SaveItem.CreateInvocation().Execute();
        }
        partial void SaveItem_CanExecute(ref bool result);
        partial void SaveItem_Execute();

        /// <summary>
        /// Calls the CancelItem screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelItem()
        {
            this.Details.Methods.CancelItem.CreateInvocation().Execute();
        }
        partial void CancelItem_CanExecute(ref bool result);
        partial void CancelItem_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySet, global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSet, global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.Issues;
                var initializeCommandEntry = global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties.ToggleVisibility;
                var initializeMethodEntry = global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties.ToggleVisibility;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                __IssueSearchAllEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                    global::LightSwitchApplication.IssueSearchAll.DetailsClass.__IssueSearchAll_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.IssueSearchAll.DetailsClass.__IssueSearchAll_InvokeSavingEvent,
                    global::LightSwitchApplication.IssueSearchAll.DetailsClass.__IssueSearchAll_InvokeSavedEvent,
                    global::LightSwitchApplication.IssueSearchAll.DetailsClass.__IssueSearchAll_InvokeClosingEvent,
                    global::LightSwitchApplication.IssueSearchAll.DetailsClass.__IssueSearchAll_InvokeCreated,
                    global::LightSwitchApplication.IssueSearchAll.DetailsClass.__IssueSearchAll_InvokeActivated,
                    global::LightSwitchApplication.IssueSearchAll.DetailsClass.__IssueSearchAll_InvokeSaveErrorEvent);
            private static void __IssueSearchAll_InvokeInitializeDataWorkspace(global::LightSwitchApplication.IssueSearchAll s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.IssueSearchAll_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __IssueSearchAll_InvokeSavingEvent(global::LightSwitchApplication.IssueSearchAll s)
            {
                bool handled = false;
                s.IssueSearchAll_Saving(ref handled);
                return handled;
            }
            private static void __IssueSearchAll_InvokeSavedEvent(global::LightSwitchApplication.IssueSearchAll s)
            {
                s.IssueSearchAll_Saved();
            }
            private static bool __IssueSearchAll_InvokeClosingEvent(global::LightSwitchApplication.IssueSearchAll s)
            {
                bool cancel = false;
                s.IssueSearchAll_Closing(ref cancel);
                return cancel;
            }
            private static void __IssueSearchAll_InvokeCreated(global::LightSwitchApplication.IssueSearchAll s)
            {
                s.IssueSearchAll_Created();
            }
            private static void __IssueSearchAll_InvokeActivated(global::LightSwitchApplication.IssueSearchAll s)
            {
                s.IssueSearchAll_Activated();
            }
            private static bool __IssueSearchAll_InvokeSaveErrorEvent(global::LightSwitchApplication.IssueSearchAll s, global::System.Exception ex)
            {
                bool handled = false;
                s.IssueSearchAll_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssuesQuery(global::System.Nullable<int> EngineerId, string ProblemDescription, global::System.Nullable<global::System.DateTime> CreateDateTimeStart, global::System.Nullable<global::System.DateTime> CreateDateTimeEnd, global::System.Nullable<int> StatusId, global::System.Nullable<int> PriorityId)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                    this.Screen.DataWorkspace.ApplicationData.IssueSearchAll(EngineerId, ProblemDescription, CreateDateTimeStart, CreateDateTimeEnd, StatusId, PriorityId),
                                    "AssignedTo"),
                                "IssueStatus"),
                            "ClosedByEngineer"),
                        "Priority"),
                    "User");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issues;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>.Data _IssueEngineerId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, string>.Data _IssueProblemDescription;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _IssueCreateDateTimeStart;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _IssueCreateDateTimeEnd;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>.Data _IssueStatusId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>.Data _IssuePriorityId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Engineer>.Data _EngineerSelectionProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _ToggleVisibilityCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _SaveButtonCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _CancelButtonCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _AddItemCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _EditItemCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _DeleteItemCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _SaveItemCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _CancelItemCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _ToggleVisibilityMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _SaveButtonMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _CancelButtonMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _AddItemMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _EditItemMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _DeleteItemMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _SaveItemMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data _CancelItemMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Issue> Issues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.Issues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>> IssueEngineerId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueEngineerId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, string> IssueProblemDescription
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueProblemDescription);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>> IssueCreateDateTimeStart
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueCreateDateTimeStart);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>> IssueCreateDateTimeEnd
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueCreateDateTimeEnd);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>> IssueStatusId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssueStatusId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>> IssuePriorityId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.IssuePriorityId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Engineer> EngineerSelectionProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties.EngineerSelectionProperty);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> ToggleVisibility
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties.ToggleVisibility);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> SaveButton
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties.SaveButton);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> CancelButton
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties.CancelButton);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> AddItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties.AddItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> EditItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties.EditItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> DeleteItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties.DeleteItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> SaveItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties.SaveItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> CancelItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties.CancelItem);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> ToggleVisibility
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties.ToggleVisibility);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> SaveButton
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties.SaveButton);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> CancelButton
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties.CancelButton);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> AddItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties.AddItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> EditItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties.EditItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> DeleteItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties.DeleteItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> SaveItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties.SaveItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass> CancelItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties.CancelItem);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issues",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._Issues_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._Issues_Validate,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._Issues_CreateQuery,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._Issues_SelectionChanged,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._Issues_OnCollectionChanged,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._Issues_OnLoaded);
                private static void _Issues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._Issues, sf);
                }
                private static void _Issues_Validate(global::LightSwitchApplication.IssueSearchAll s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issues_CreateQuery(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object[] args)
                {
                    return d.IssuesQuery((global::System.Nullable<int>)args[0], (string)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Nullable<global::System.DateTime>)args[3], (global::System.Nullable<int>)args[4], (global::System.Nullable<int>)args[5]);
                }
                private static void _Issues_SelectionChanged(global::LightSwitchApplication.IssueSearchAll s)
                {
                    s.Issues_SelectionChanged();
                }
                private static void _Issues_OnCollectionChanged(global::LightSwitchApplication.IssueSearchAll s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Issues_Changed(e);
                }
                private static void _Issues_OnLoaded(global::LightSwitchApplication.IssueSearchAll s, bool succeeded)
                {
                    s.Issues_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>.Entry
                    IssueEngineerId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IssueEngineerId",
                        false,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueEngineerId_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueEngineerId_Validate,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueEngineerId_OnValueChanged);
                private static void _IssueEngineerId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueEngineerId, sf);
                }
                private static void _IssueEngineerId_Validate(global::LightSwitchApplication.IssueSearchAll s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueEngineerId_Validate(r);
                }
                private static void _IssueEngineerId_OnValueChanged(global::LightSwitchApplication.IssueSearchAll s)
                {
                    s.IssueEngineerId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, string>.Entry
                    IssueProblemDescription = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, string>.Entry(
                        "IssueProblemDescription",
                        false,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueProblemDescription_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueProblemDescription_Validate,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueProblemDescription_OnValueChanged);
                private static void _IssueProblemDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, string>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueProblemDescription, sf);
                }
                private static void _IssueProblemDescription_Validate(global::LightSwitchApplication.IssueSearchAll s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueProblemDescription_Validate(r);
                }
                private static void _IssueProblemDescription_OnValueChanged(global::LightSwitchApplication.IssueSearchAll s)
                {
                    s.IssueProblemDescription_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    IssueCreateDateTimeStart = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "IssueCreateDateTimeStart",
                        false,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueCreateDateTimeStart_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueCreateDateTimeStart_Validate,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueCreateDateTimeStart_OnValueChanged);
                private static void _IssueCreateDateTimeStart_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueCreateDateTimeStart, sf);
                }
                private static void _IssueCreateDateTimeStart_Validate(global::LightSwitchApplication.IssueSearchAll s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueCreateDateTimeStart_Validate(r);
                }
                private static void _IssueCreateDateTimeStart_OnValueChanged(global::LightSwitchApplication.IssueSearchAll s)
                {
                    s.IssueCreateDateTimeStart_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    IssueCreateDateTimeEnd = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "IssueCreateDateTimeEnd",
                        false,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueCreateDateTimeEnd_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueCreateDateTimeEnd_Validate,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueCreateDateTimeEnd_OnValueChanged);
                private static void _IssueCreateDateTimeEnd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueCreateDateTimeEnd, sf);
                }
                private static void _IssueCreateDateTimeEnd_Validate(global::LightSwitchApplication.IssueSearchAll s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueCreateDateTimeEnd_Validate(r);
                }
                private static void _IssueCreateDateTimeEnd_OnValueChanged(global::LightSwitchApplication.IssueSearchAll s)
                {
                    s.IssueCreateDateTimeEnd_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>.Entry
                    IssueStatusId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IssueStatusId",
                        false,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueStatusId_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueStatusId_Validate,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssueStatusId_OnValueChanged);
                private static void _IssueStatusId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueStatusId, sf);
                }
                private static void _IssueStatusId_Validate(global::LightSwitchApplication.IssueSearchAll s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueStatusId_Validate(r);
                }
                private static void _IssueStatusId_OnValueChanged(global::LightSwitchApplication.IssueSearchAll s)
                {
                    s.IssueStatusId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>.Entry
                    IssuePriorityId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IssuePriorityId",
                        false,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssuePriorityId_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssuePriorityId_Validate,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._IssuePriorityId_OnValueChanged);
                private static void _IssuePriorityId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._IssuePriorityId, sf);
                }
                private static void _IssuePriorityId_Validate(global::LightSwitchApplication.IssueSearchAll s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssuePriorityId_Validate(r);
                }
                private static void _IssuePriorityId_OnValueChanged(global::LightSwitchApplication.IssueSearchAll s)
                {
                    s.IssuePriorityId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    EngineerSelectionProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "EngineerSelectionProperty",
                        false,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._EngineerSelectionProperty_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._EngineerSelectionProperty_Validate,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.PropertySetProperties._EngineerSelectionProperty_OnValueChanged);
                private static void _EngineerSelectionProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerSelectionProperty, sf);
                }
                private static void _EngineerSelectionProperty_Validate(global::LightSwitchApplication.IssueSearchAll s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerSelectionProperty_Validate(r);
                }
                private static void _EngineerSelectionProperty_OnValueChanged(global::LightSwitchApplication.IssueSearchAll s)
                {
                    s.EngineerSelectionProperty_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    ToggleVisibility = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "ToggleVisibility",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._ToggleVisibility_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._ToggleVisibility_CreateExecutableObject);
                private static void _ToggleVisibility_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleVisibilityCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ToggleVisibility_CreateExecutableObject(global::LightSwitchApplication.IssueSearchAll.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueSearchAll.DetailsClass)d).Methods.ToggleVisibility.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    SaveButton = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "SaveButton",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._SaveButton_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._SaveButton_CreateExecutableObject);
                private static void _SaveButton_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveButtonCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveButton_CreateExecutableObject(global::LightSwitchApplication.IssueSearchAll.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueSearchAll.DetailsClass)d).Methods.SaveButton.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    CancelButton = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "CancelButton",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._CancelButton_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._CancelButton_CreateExecutableObject);
                private static void _CancelButton_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelButtonCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelButton_CreateExecutableObject(global::LightSwitchApplication.IssueSearchAll.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueSearchAll.DetailsClass)d).Methods.CancelButton.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    AddItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "AddItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._AddItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._AddItem_CreateExecutableObject);
                private static void _AddItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._AddItemCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddItem_CreateExecutableObject(global::LightSwitchApplication.IssueSearchAll.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueSearchAll.DetailsClass)d).Methods.AddItem.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    EditItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "EditItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._EditItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._EditItem_CreateExecutableObject);
                private static void _EditItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._EditItemCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EditItem_CreateExecutableObject(global::LightSwitchApplication.IssueSearchAll.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueSearchAll.DetailsClass)d).Methods.EditItem.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    DeleteItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "DeleteItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._DeleteItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._DeleteItem_CreateExecutableObject);
                private static void _DeleteItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._DeleteItemCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DeleteItem_CreateExecutableObject(global::LightSwitchApplication.IssueSearchAll.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueSearchAll.DetailsClass)d).Methods.DeleteItem.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    SaveItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "SaveItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._SaveItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._SaveItem_CreateExecutableObject);
                private static void _SaveItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveItemCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveItem_CreateExecutableObject(global::LightSwitchApplication.IssueSearchAll.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueSearchAll.DetailsClass)d).Methods.SaveItem.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    CancelItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "CancelItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._CancelItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.CommandSetProperties._CancelItem_CreateExecutableObject);
                private static void _CancelItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelItemCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelItem_CreateExecutableObject(global::LightSwitchApplication.IssueSearchAll.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueSearchAll.DetailsClass)d).Methods.CancelItem.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    ToggleVisibility = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "ToggleVisibility",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._ToggleVisibility_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._ToggleVisibility_CanInvoke,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._ToggleVisibility_InvokeMethod);
                private static void _ToggleVisibility_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleVisibilityMethod, sf);
                }
                private static global::System.Exception _ToggleVisibility_CanInvoke(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ToggleVisibility_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ToggleVisibility_InvokeMethod(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ToggleVisibility_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    SaveButton = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "SaveButton",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._SaveButton_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._SaveButton_CanInvoke,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._SaveButton_InvokeMethod);
                private static void _SaveButton_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveButtonMethod, sf);
                }
                private static global::System.Exception _SaveButton_CanInvoke(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveButton_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveButton_InvokeMethod(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveButton_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    CancelButton = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "CancelButton",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._CancelButton_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._CancelButton_CanInvoke,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._CancelButton_InvokeMethod);
                private static void _CancelButton_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelButtonMethod, sf);
                }
                private static global::System.Exception _CancelButton_CanInvoke(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelButton_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelButton_InvokeMethod(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelButton_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    AddItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "AddItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._AddItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._AddItem_CanInvoke,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._AddItem_InvokeMethod);
                private static void _AddItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._AddItemMethod, sf);
                }
                private static global::System.Exception _AddItem_CanInvoke(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddItem_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddItem_InvokeMethod(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddItem_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    EditItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "EditItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._EditItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._EditItem_CanInvoke,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._EditItem_InvokeMethod);
                private static void _EditItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._EditItemMethod, sf);
                }
                private static global::System.Exception _EditItem_CanInvoke(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EditItem_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EditItem_InvokeMethod(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EditItem_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    DeleteItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "DeleteItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._DeleteItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._DeleteItem_CanInvoke,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._DeleteItem_InvokeMethod);
                private static void _DeleteItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._DeleteItemMethod, sf);
                }
                private static global::System.Exception _DeleteItem_CanInvoke(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DeleteItem_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DeleteItem_InvokeMethod(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DeleteItem_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    SaveItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "SaveItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._SaveItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._SaveItem_CanInvoke,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._SaveItem_InvokeMethod);
                private static void _SaveItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveItemMethod, sf);
                }
                private static global::System.Exception _SaveItem_CanInvoke(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveItem_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveItem_InvokeMethod(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveItem_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry
                    CancelItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Entry(
                        "CancelItem",
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._CancelItem_Stub,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._CancelItem_CanInvoke,
                        global::LightSwitchApplication.IssueSearchAll.DetailsClass.MethodSetProperties._CancelItem_InvokeMethod);
                private static void _CancelItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueSearchAll.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueSearchAll, global::LightSwitchApplication.IssueSearchAll.DetailsClass>.Data> c, global::LightSwitchApplication.IssueSearchAll.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelItemMethod, sf);
                }
                private static global::System.Exception _CancelItem_CanInvoke(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelItem_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelItem_InvokeMethod(global::LightSwitchApplication.IssueSearchAll.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelItem_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class AddEditIssue
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private AddEditIssue(global::System.Nullable<int> IssueId) : base("LightSwitchApplication:AddEditIssue")
        {
                this.IssueId = IssueId;
            global::LightSwitchApplication.AddEditIssue.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static AddEditIssue CreateInstance(global::System.Nullable<int> IssueId)
        {
            return new global::LightSwitchApplication.AddEditIssue(
                        IssueId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issue_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Loaded(bool succeeded);

        partial void IssueId_Changed();

        partial void IssueProperty_Changed();

        partial void IssueResponses_SelectionChanged();

        partial void IssueResponses_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponses_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue Issue
        {
            get
            {
                return global::LightSwitchApplication.AddEditIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.Issue);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IssueId
        {
            get 
            {
                return global::LightSwitchApplication.AddEditIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueId);
            }
            set
            {
                global::LightSwitchApplication.AddEditIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue IssueProperty
        {
            get 
            {
                return global::LightSwitchApplication.AddEditIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueProperty);
            }
            set
            {
                global::LightSwitchApplication.AddEditIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IssueResponses visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.IssueResponse> IssueResponses
        {
            get
            {
                return global::LightSwitchApplication.AddEditIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueResponses);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponses_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the OpenPDFReport screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenPDFReport()
        {
            this.Details.Methods.OpenPDFReport.CreateInvocation().Execute();
        }
        partial void OpenPDFReport_CanExecute(ref bool result);
        partial void OpenPDFReport_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySet, global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSet, global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.Issue;
                var initializeCommandEntry = global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSetProperties.OpenPDFReport;
                var initializeMethodEntry = global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties.OpenPDFReport;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry
                __AddEditIssueEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry(
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeSavingEvent,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeSavedEvent,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeClosingEvent,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeCreated,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeActivated,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeSaveErrorEvent);
            private static void __AddEditIssue_InvokeInitializeDataWorkspace(global::LightSwitchApplication.AddEditIssue s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.AddEditIssue_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __AddEditIssue_InvokeSavingEvent(global::LightSwitchApplication.AddEditIssue s)
            {
                bool handled = false;
                s.AddEditIssue_Saving(ref handled);
                return handled;
            }
            private static void __AddEditIssue_InvokeSavedEvent(global::LightSwitchApplication.AddEditIssue s)
            {
                s.AddEditIssue_Saved();
            }
            private static bool __AddEditIssue_InvokeClosingEvent(global::LightSwitchApplication.AddEditIssue s)
            {
                bool cancel = false;
                s.AddEditIssue_Closing(ref cancel);
                return cancel;
            }
            private static void __AddEditIssue_InvokeCreated(global::LightSwitchApplication.AddEditIssue s)
            {
                s.AddEditIssue_Created();
            }
            private static void __AddEditIssue_InvokeActivated(global::LightSwitchApplication.AddEditIssue s)
            {
                s.AddEditIssue_Activated();
            }
            private static bool __AddEditIssue_InvokeSaveErrorEvent(global::LightSwitchApplication.AddEditIssue s, global::System.Exception ex)
            {
                bool handled = false;
                s.AddEditIssue_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssueResponsesQuery()
            {
                if (this.Screen.Issue == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.IssueResponse> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.IssueResponse>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Issue.Details.Properties.IssueResponses).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issue;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>.Data _IssueId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data _IssueProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueResponse>.Data _IssueResponses;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Data _OpenPDFReportCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Data _OpenPDFReportMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue> Issue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.Issue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>> IssueId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue> IssueProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueResponse> IssueResponses
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueResponse>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueResponses);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass> OpenPDFReport
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSetProperties.OpenPDFReport);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass> OpenPDFReport
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties.OpenPDFReport);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issue",
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_Validate,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_CreateQuery,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_OnValueChanged,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_OnLoaded);
                private static void _Issue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._Issue, sf);
                }
                private static void _Issue_Validate(global::LightSwitchApplication.AddEditIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issue_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issue_CreateQuery(global::LightSwitchApplication.AddEditIssue.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Issue_OnValueChanged(global::LightSwitchApplication.AddEditIssue s)
                {
                    s.Issue_Changed();
                }

                private static void _Issue_OnLoaded(global::LightSwitchApplication.AddEditIssue s, bool succeeded)
                {
                    s.Issue_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>.Entry
                    IssueId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IssueId",
                        false,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueId_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueId_Validate,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueId_OnValueChanged);
                private static void _IssueId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueId, sf);
                }
                private static void _IssueId_Validate(global::LightSwitchApplication.AddEditIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueId_Validate(r);
                }
                private static void _IssueId_OnValueChanged(global::LightSwitchApplication.AddEditIssue s)
                {
                    s.IssueId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    IssueProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "IssueProperty",
                        false,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueProperty_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueProperty_Validate,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueProperty_OnValueChanged);
                private static void _IssueProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueProperty, sf);
                }
                private static void _IssueProperty_Validate(global::LightSwitchApplication.AddEditIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueProperty_Validate(r);
                }
                private static void _IssueProperty_OnValueChanged(global::LightSwitchApplication.AddEditIssue s)
                {
                    s.IssueProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueResponse>.Entry
                    IssueResponses = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueResponse>.Entry(
                        "IssueResponses",
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueResponses_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueResponses_Validate,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueResponses_CreateQuery,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueResponses_SelectionChanged,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueResponses_OnCollectionChanged,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueResponses_OnLoaded);
                private static void _IssueResponses_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueResponse>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueResponses, sf);
                }
                private static void _IssueResponses_Validate(global::LightSwitchApplication.AddEditIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueResponses_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IssueResponses_CreateQuery(global::LightSwitchApplication.AddEditIssue.DetailsClass d, object[] args)
                {
                    return d.IssueResponsesQuery();
                }
                private static void _IssueResponses_SelectionChanged(global::LightSwitchApplication.AddEditIssue s)
                {
                    s.IssueResponses_SelectionChanged();
                }
                private static void _IssueResponses_OnCollectionChanged(global::LightSwitchApplication.AddEditIssue s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IssueResponses_Changed(e);
                }
                private static void _IssueResponses_OnLoaded(global::LightSwitchApplication.AddEditIssue s, bool succeeded)
                {
                    s.IssueResponses_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry
                    OpenPDFReport = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry(
                        "OpenPDFReport",
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSetProperties._OpenPDFReport_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSetProperties._OpenPDFReport_CreateExecutableObject);
                private static void _OpenPDFReport_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenPDFReportCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenPDFReport_CreateExecutableObject(global::LightSwitchApplication.AddEditIssue.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.AddEditIssue.DetailsClass)d).Methods.OpenPDFReport.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry
                    OpenPDFReport = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry(
                        "OpenPDFReport",
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties._OpenPDFReport_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties._OpenPDFReport_CanInvoke,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties._OpenPDFReport_InvokeMethod);
                private static void _OpenPDFReport_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenPDFReportMethod, sf);
                }
                private static global::System.Exception _OpenPDFReport_CanInvoke(global::LightSwitchApplication.AddEditIssue.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenPDFReport_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenPDFReport_InvokeMethod(global::LightSwitchApplication.AddEditIssue.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenPDFReport_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Info
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private Info() : base("LightSwitchApplication:Info")
        {
            global::LightSwitchApplication.Info.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static Info CreateInstance()
        {
            return new global::LightSwitchApplication.Info(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass, global::LightSwitchApplication.Info.DetailsClass.PropertySet, global::LightSwitchApplication.Info.DetailsClass.CommandSet, global::LightSwitchApplication.Info.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass>.Entry
                __InfoEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass>.Entry(
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeSavingEvent,
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeSavedEvent,
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeClosingEvent,
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeCreated,
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeActivated,
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeSaveErrorEvent);
            private static void __Info_InvokeInitializeDataWorkspace(global::LightSwitchApplication.Info s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.Info_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __Info_InvokeSavingEvent(global::LightSwitchApplication.Info s)
            {
                bool handled = false;
                s.Info_Saving(ref handled);
                return handled;
            }
            private static void __Info_InvokeSavedEvent(global::LightSwitchApplication.Info s)
            {
                s.Info_Saved();
            }
            private static bool __Info_InvokeClosingEvent(global::LightSwitchApplication.Info s)
            {
                bool cancel = false;
                s.Info_Closing(ref cancel);
                return cancel;
            }
            private static void __Info_InvokeCreated(global::LightSwitchApplication.Info s)
            {
                s.Info_Created();
            }
            private static void __Info_InvokeActivated(global::LightSwitchApplication.Info s)
            {
                s.Info_Activated();
            }
            private static bool __Info_InvokeSaveErrorEvent(global::LightSwitchApplication.Info s, global::System.Exception ex)
            {
                bool handled = false;
                s.Info_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.Info.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.Info.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.Info.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Startup
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.Startup, global::LightSwitchApplication.Startup.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private Startup() : base("LightSwitchApplication:Startup")
        {
            global::LightSwitchApplication.Startup.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static Startup CreateInstance()
        {
            return new global::LightSwitchApplication.Startup(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Startup_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Startup_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Startup_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Startup_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Startup_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Startup_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Startup_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Startup, global::LightSwitchApplication.Startup.DetailsClass, global::LightSwitchApplication.Startup.DetailsClass.PropertySet, global::LightSwitchApplication.Startup.DetailsClass.CommandSet, global::LightSwitchApplication.Startup.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Startup, global::LightSwitchApplication.Startup.DetailsClass>.Entry
                __StartupEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Startup, global::LightSwitchApplication.Startup.DetailsClass>.Entry(
                    global::LightSwitchApplication.Startup.DetailsClass.__Startup_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.Startup.DetailsClass.__Startup_InvokeSavingEvent,
                    global::LightSwitchApplication.Startup.DetailsClass.__Startup_InvokeSavedEvent,
                    global::LightSwitchApplication.Startup.DetailsClass.__Startup_InvokeClosingEvent,
                    global::LightSwitchApplication.Startup.DetailsClass.__Startup_InvokeCreated,
                    global::LightSwitchApplication.Startup.DetailsClass.__Startup_InvokeActivated,
                    global::LightSwitchApplication.Startup.DetailsClass.__Startup_InvokeSaveErrorEvent);
            private static void __Startup_InvokeInitializeDataWorkspace(global::LightSwitchApplication.Startup s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.Startup_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __Startup_InvokeSavingEvent(global::LightSwitchApplication.Startup s)
            {
                bool handled = false;
                s.Startup_Saving(ref handled);
                return handled;
            }
            private static void __Startup_InvokeSavedEvent(global::LightSwitchApplication.Startup s)
            {
                s.Startup_Saved();
            }
            private static bool __Startup_InvokeClosingEvent(global::LightSwitchApplication.Startup s)
            {
                bool cancel = false;
                s.Startup_Closing(ref cancel);
                return cancel;
            }
            private static void __Startup_InvokeCreated(global::LightSwitchApplication.Startup s)
            {
                s.Startup_Created();
            }
            private static void __Startup_InvokeActivated(global::LightSwitchApplication.Startup s)
            {
                s.Startup_Activated();
            }
            private static bool __Startup_InvokeSaveErrorEvent(global::LightSwitchApplication.Startup s, global::System.Exception ex)
            {
                bool handled = false;
                s.Startup_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.Startup.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.Startup.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.Startup.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.Startup, global::LightSwitchApplication.Startup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.Startup, global::LightSwitchApplication.Startup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.Startup, global::LightSwitchApplication.Startup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EditableEngineersGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditableEngineersGrid() : base("LightSwitchApplication:EditableEngineersGrid")
        {
            global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditableEngineersGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditableEngineersGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEngineersGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEngineersGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEngineersGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEngineersGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEngineersGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEngineersGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableEngineersGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineers_SelectionChanged();

        partial void Engineers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Engineers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Engineer> Engineers
        {
            get
            {
                return global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySetProperties.Engineers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySetProperties.Engineers;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass>.Entry
                __EditableEngineersGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.__EditableEngineersGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.__EditableEngineersGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.__EditableEngineersGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.__EditableEngineersGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.__EditableEngineersGrid_InvokeCreated,
                    global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.__EditableEngineersGrid_InvokeActivated,
                    global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.__EditableEngineersGrid_InvokeSaveErrorEvent);
            private static void __EditableEngineersGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditableEngineersGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditableEngineersGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditableEngineersGrid_InvokeSavingEvent(global::LightSwitchApplication.EditableEngineersGrid s)
            {
                bool handled = false;
                s.EditableEngineersGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditableEngineersGrid_InvokeSavedEvent(global::LightSwitchApplication.EditableEngineersGrid s)
            {
                s.EditableEngineersGrid_Saved();
            }
            private static bool __EditableEngineersGrid_InvokeClosingEvent(global::LightSwitchApplication.EditableEngineersGrid s)
            {
                bool cancel = false;
                s.EditableEngineersGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditableEngineersGrid_InvokeCreated(global::LightSwitchApplication.EditableEngineersGrid s)
            {
                s.EditableEngineersGrid_Created();
            }
            private static void __EditableEngineersGrid_InvokeActivated(global::LightSwitchApplication.EditableEngineersGrid s)
            {
                s.EditableEngineersGrid_Activated();
            }
            private static bool __EditableEngineersGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditableEngineersGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditableEngineersGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EngineersQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Engineers;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineers;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass, global::LightSwitchApplication.Engineer> Engineers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySetProperties.Engineers);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineers",
                        global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySetProperties._Engineers_Stub,
                        global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySetProperties._Engineers_Validate,
                        global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySetProperties._Engineers_CreateQuery,
                        global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySetProperties._Engineers_SelectionChanged,
                        global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySetProperties._Engineers_OnCollectionChanged,
                        global::LightSwitchApplication.EditableEngineersGrid.DetailsClass.PropertySetProperties._Engineers_OnLoaded);
                private static void _Engineers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableEngineersGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableEngineersGrid, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EditableEngineersGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineers, sf);
                }
                private static void _Engineers_Validate(global::LightSwitchApplication.EditableEngineersGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineers_CreateQuery(global::LightSwitchApplication.EditableEngineersGrid.DetailsClass d, object[] args)
                {
                    return d.EngineersQuery();
                }
                private static void _Engineers_SelectionChanged(global::LightSwitchApplication.EditableEngineersGrid s)
                {
                    s.Engineers_SelectionChanged();
                }
                private static void _Engineers_OnCollectionChanged(global::LightSwitchApplication.EditableEngineersGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Engineers_Changed(e);
                }
                private static void _Engineers_OnLoaded(global::LightSwitchApplication.EditableEngineersGrid s, bool succeeded)
                {
                    s.Engineers_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EditableIssuesWithHighestFeedbackGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid, global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditableIssuesWithHighestFeedbackGrid() : base("LightSwitchApplication:EditableIssuesWithHighestFeedbackGrid")
        {
            global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditableIssuesWithHighestFeedbackGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesWithHighestFeedbackGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesWithHighestFeedbackGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesWithHighestFeedbackGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesWithHighestFeedbackGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesWithHighestFeedbackGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesWithHighestFeedbackGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesWithHighestFeedbackGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void IssuesWithHighestFeedback_SelectionChanged();

        partial void IssuesWithHighestFeedback_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesWithHighestFeedback_Loaded(bool succeeded);

        /// <summary>
        /// Gets the IssuesWithHighestFeedback visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> IssuesWithHighestFeedback
        {
            get
            {
                return global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.PropertySetProperties.IssuesWithHighestFeedback);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesWithHighestFeedback_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid, global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass, global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.PropertySetProperties.IssuesWithHighestFeedback;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid, global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass>.Entry
                __EditableIssuesWithHighestFeedbackGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid, global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.__EditableIssuesWithHighestFeedbackGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.__EditableIssuesWithHighestFeedbackGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.__EditableIssuesWithHighestFeedbackGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.__EditableIssuesWithHighestFeedbackGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.__EditableIssuesWithHighestFeedbackGrid_InvokeCreated,
                    global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.__EditableIssuesWithHighestFeedbackGrid_InvokeActivated,
                    global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.__EditableIssuesWithHighestFeedbackGrid_InvokeSaveErrorEvent);
            private static void __EditableIssuesWithHighestFeedbackGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditableIssuesWithHighestFeedbackGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditableIssuesWithHighestFeedbackGrid_InvokeSavingEvent(global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid s)
            {
                bool handled = false;
                s.EditableIssuesWithHighestFeedbackGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditableIssuesWithHighestFeedbackGrid_InvokeSavedEvent(global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid s)
            {
                s.EditableIssuesWithHighestFeedbackGrid_Saved();
            }
            private static bool __EditableIssuesWithHighestFeedbackGrid_InvokeClosingEvent(global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid s)
            {
                bool cancel = false;
                s.EditableIssuesWithHighestFeedbackGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditableIssuesWithHighestFeedbackGrid_InvokeCreated(global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid s)
            {
                s.EditableIssuesWithHighestFeedbackGrid_Created();
            }
            private static void __EditableIssuesWithHighestFeedbackGrid_InvokeActivated(global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid s)
            {
                s.EditableIssuesWithHighestFeedbackGrid_Activated();
            }
            private static bool __EditableIssuesWithHighestFeedbackGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditableIssuesWithHighestFeedbackGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssuesWithHighestFeedbackQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                    this.Screen.DataWorkspace.ApplicationData.IssuesWithHighestFeedback(),
                                    "IssueStatus"),
                                "AssignedTo"),
                            "ClosedByEngineer"),
                        "Priority"),
                    "User");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid, global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass, global::LightSwitchApplication.Issue>.Data _IssuesWithHighestFeedback;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid, global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid, global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass, global::LightSwitchApplication.Issue> IssuesWithHighestFeedback
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid, global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.PropertySetProperties.IssuesWithHighestFeedback);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid, global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid, global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid, global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    IssuesWithHighestFeedback = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid, global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "IssuesWithHighestFeedback",
                        global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.PropertySetProperties._IssuesWithHighestFeedback_Stub,
                        global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.PropertySetProperties._IssuesWithHighestFeedback_Validate,
                        global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.PropertySetProperties._IssuesWithHighestFeedback_CreateQuery,
                        global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.PropertySetProperties._IssuesWithHighestFeedback_SelectionChanged,
                        global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.PropertySetProperties._IssuesWithHighestFeedback_OnCollectionChanged,
                        global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass.PropertySetProperties._IssuesWithHighestFeedback_OnLoaded);
                private static void _IssuesWithHighestFeedback_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid, global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._IssuesWithHighestFeedback, sf);
                }
                private static void _IssuesWithHighestFeedback_Validate(global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssuesWithHighestFeedback_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IssuesWithHighestFeedback_CreateQuery(global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid.DetailsClass d, object[] args)
                {
                    return d.IssuesWithHighestFeedbackQuery();
                }
                private static void _IssuesWithHighestFeedback_SelectionChanged(global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid s)
                {
                    s.IssuesWithHighestFeedback_SelectionChanged();
                }
                private static void _IssuesWithHighestFeedback_OnCollectionChanged(global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IssuesWithHighestFeedback_Changed(e);
                }
                private static void _IssuesWithHighestFeedback_OnLoaded(global::LightSwitchApplication.EditableIssuesWithHighestFeedbackGrid s, bool succeeded)
                {
                    s.IssuesWithHighestFeedback_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
}

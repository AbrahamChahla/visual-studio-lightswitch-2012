

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Issue : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Issue entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Issue()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Issue(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Issue> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Issue.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProblemDescription
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProblemDescription);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProblemDescription, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProblemDescription_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProblemDescription_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProblemDescription_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime CreateDateTime
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.CreateDateTime);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.CreateDateTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateDateTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateDateTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateDateTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime TargetEndDateTime
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.TargetEndDateTime);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.TargetEndDateTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetEndDateTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetEndDateTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetEndDateTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ClosedDateTime
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ClosedDateTime);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ClosedDateTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClosedDateTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClosedDateTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClosedDateTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] Icon
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Icon);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Icon_Compute(ref byte[] result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Icon_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Subject
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Subject);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Subject, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subject_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subject_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subject_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.IssueStatus IssueStatus
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueStatus);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueStatus, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatus_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatus_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatus_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer AssignedTo
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.AssignedTo);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.AssignedTo, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer ClosedByEngineer
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ClosedByEngineer);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ClosedByEngineer, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClosedByEngineer_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClosedByEngineer_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClosedByEngineer_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.TimeTracking> TimeTrackings
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.TimeTrackings);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTracking> TimeTrackingsQuery
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetQuery(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.TimeTrackings);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Priority Priority
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Priority);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Priority, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.User User
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.User);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.User, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void User_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void User_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void User_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.IssueResponse> IssueResponses
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueResponses);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.IssueResponse> IssueResponsesQuery
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetQuery(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueResponses);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.IssueDocument> IssueDocuments
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueDocuments);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.IssueDocument> IssueDocumentsQuery
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetQuery(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueDocuments);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.IssueFeedback> IssueFeedbacks
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueFeedbacks);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.IssueFeedback> IssueFeedbacksQuery
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetQuery(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueFeedbacks);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Issue,
                global::LightSwitchApplication.Issue.DetailsClass,
                global::LightSwitchApplication.Issue.DetailsClass.IImplementation,
                global::LightSwitchApplication.Issue.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>.Entry
                __IssueEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>.Entry(
                    global::LightSwitchApplication.Issue.DetailsClass.__Issue_CreateNew,
                    global::LightSwitchApplication.Issue.DetailsClass.__Issue_Created,
                    global::LightSwitchApplication.Issue.DetailsClass.__Issue_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Issue __Issue_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Issue> es)
            {
                return new global::LightSwitchApplication.Issue(es);
            }
            private static void __Issue_Created(global::LightSwitchApplication.Issue e)
            {
                e.Issue_Created();
            }
            private static bool __Issue_AllowSaveWithErrors(global::LightSwitchApplication.Issue e)
            {
                bool result = false;
                e.Issue_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Issue.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string> ProblemDescription
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProblemDescription) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime> CreateDateTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.CreateDateTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime> TargetEndDateTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.TargetEndDateTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>> ClosedDateTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ClosedDateTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]> Icon
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Icon) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string> Subject
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Subject) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueStatus> IssueStatus
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueStatus) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueStatus>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Engineer> AssignedTo
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.AssignedTo) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Engineer>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Engineer> ClosedByEngineer
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ClosedByEngineer) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Engineer>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.TimeTracking> TimeTrackings
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.TimeTrackings) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.TimeTracking>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Priority> Priority
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Priority) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Priority>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.User> User
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.User) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.User>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueResponse> IssueResponses
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueResponses) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueResponse>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueDocument> IssueDocuments
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueDocuments) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueDocument>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueFeedback> IssueFeedbacks
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueFeedbacks) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueFeedback>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string ProblemDescription { get; set; }
                new global::System.DateTime CreateDateTime { get; set; }
                new global::System.DateTime TargetEndDateTime { get; set; }
                new global::System.Nullable<global::System.DateTime> ClosedDateTime { get; set; }
                new string Subject { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation IssueStatus { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation AssignedTo { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ClosedByEngineer { get; set; }
                new global::System.Collections.IEnumerable TimeTrackings { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Priority { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation User { get; set; }
                new global::System.Collections.IEnumerable IssueResponses { get; }
                new global::System.Collections.IEnumerable IssueDocuments { get; }
                new global::System.Collections.IEnumerable IssueFeedbacks { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, int>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry
                    ProblemDescription = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry(
                        "ProblemDescription",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProblemDescription_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProblemDescription_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProblemDescription_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProblemDescription_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProblemDescription_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProblemDescription_OnValueChanged);
                private static void _ProblemDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._ProblemDescription, sf);
                }
                private static bool _ProblemDescription_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.ProblemDescription_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProblemDescription_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProblemDescription_Validate(r);
                }
                private static string _ProblemDescription_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.ProblemDescription;
                }
                private static void _ProblemDescription_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProblemDescription = v;
                }
                private static void _ProblemDescription_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.ProblemDescription_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Entry
                    CreateDateTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Entry(
                        "CreateDateTime",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CreateDateTime_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CreateDateTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CreateDateTime_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CreateDateTime_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CreateDateTime_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CreateDateTime_OnValueChanged);
                private static void _CreateDateTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateDateTime, sf);
                }
                private static bool _CreateDateTime_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.CreateDateTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreateDateTime_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreateDateTime_Validate(r);
                }
                private static global::System.DateTime _CreateDateTime_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.CreateDateTime;
                }
                private static void _CreateDateTime_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.CreateDateTime = global::LightSwitchApplication.Issue.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _CreateDateTime_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.CreateDateTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Entry
                    TargetEndDateTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Entry(
                        "TargetEndDateTime",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._TargetEndDateTime_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._TargetEndDateTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._TargetEndDateTime_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._TargetEndDateTime_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._TargetEndDateTime_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._TargetEndDateTime_OnValueChanged);
                private static void _TargetEndDateTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._TargetEndDateTime, sf);
                }
                private static bool _TargetEndDateTime_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.TargetEndDateTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _TargetEndDateTime_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TargetEndDateTime_Validate(r);
                }
                private static global::System.DateTime _TargetEndDateTime_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.TargetEndDateTime;
                }
                private static void _TargetEndDateTime_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.TargetEndDateTime = global::LightSwitchApplication.Issue.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _TargetEndDateTime_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.TargetEndDateTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ClosedDateTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ClosedDateTime",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ClosedDateTime_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ClosedDateTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ClosedDateTime_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ClosedDateTime_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ClosedDateTime_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ClosedDateTime_OnValueChanged);
                private static void _ClosedDateTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._ClosedDateTime, sf);
                }
                private static bool _ClosedDateTime_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.ClosedDateTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _ClosedDateTime_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ClosedDateTime_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ClosedDateTime_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.ClosedDateTime;
                }
                private static void _ClosedDateTime_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ClosedDateTime = global::LightSwitchApplication.Issue.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ClosedDateTime_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.ClosedDateTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>.Entry
                    Icon = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>.Entry(
                        "Icon",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Icon_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Icon_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Icon_ComputeValue);
                private static void _Icon_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._Icon, sf);
                }
                private static void _Icon_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Icon_Validate(r);
                }
                private static byte[] _Icon_ComputeValue(global::LightSwitchApplication.Issue e)
                {
                    byte[] value = default(byte[]);
                    e.Icon_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry
                    Subject = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry(
                        "Subject",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Subject_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Subject_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Subject_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Subject_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Subject_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Subject_OnValueChanged);
                private static void _Subject_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._Subject, sf);
                }
                private static bool _Subject_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.Subject_IsReadOnly(ref result);
                    return result;
                }
                private static void _Subject_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Subject_Validate(r);
                }
                private static string _Subject_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.Subject;
                }
                private static void _Subject_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Subject = v;
                }
                private static void _Subject_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.Subject_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueStatus>.Entry
                    IssueStatus = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueStatus>.Entry(
                        "IssueStatus",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueStatus_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueStatus_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueStatus_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueStatus_GetCoreImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueStatus_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueStatus_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueStatus_Refresh,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueStatus_OnValueChanged);
                private static void _IssueStatus_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueStatus>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueStatus, sf);
                }
                private static bool _IssueStatus_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.IssueStatus_IsReadOnly(ref result);
                    return result;
                }
                private static void _IssueStatus_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IssueStatus_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _IssueStatus_GetCoreImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.IssueStatus;
                }
                private static global::LightSwitchApplication.IssueStatus _IssueStatus_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.IssueStatus, global::LightSwitchApplication.IssueStatus.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueStatus, ref d._IssueStatus);
                }
                private static void _IssueStatus_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::LightSwitchApplication.IssueStatus v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueStatus, ref d._IssueStatus, (i, ev) => i.IssueStatus = ev, v);
                }
                private static void _IssueStatus_Refresh(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueStatus, ref d._IssueStatus);
                }
                private static void _IssueStatus_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.IssueStatus_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    AssignedTo = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "AssignedTo",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_GetCoreImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_Refresh,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_OnValueChanged);
                private static void _AssignedTo_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._AssignedTo, sf);
                }
                private static bool _AssignedTo_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.AssignedTo_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssignedTo_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssignedTo_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _AssignedTo_GetCoreImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.AssignedTo;
                }
                private static global::LightSwitchApplication.Engineer _AssignedTo_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Engineer, global::LightSwitchApplication.Engineer.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo);
                }
                private static void _AssignedTo_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::LightSwitchApplication.Engineer v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo, (i, ev) => i.AssignedTo = ev, v);
                }
                private static void _AssignedTo_Refresh(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo);
                }
                private static void _AssignedTo_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.AssignedTo_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    ClosedByEngineer = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "ClosedByEngineer",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ClosedByEngineer_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ClosedByEngineer_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ClosedByEngineer_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ClosedByEngineer_GetCoreImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ClosedByEngineer_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ClosedByEngineer_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ClosedByEngineer_Refresh,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ClosedByEngineer_OnValueChanged);
                private static void _ClosedByEngineer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._ClosedByEngineer, sf);
                }
                private static bool _ClosedByEngineer_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.ClosedByEngineer_IsReadOnly(ref result);
                    return result;
                }
                private static void _ClosedByEngineer_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ClosedByEngineer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ClosedByEngineer_GetCoreImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.ClosedByEngineer;
                }
                private static global::LightSwitchApplication.Engineer _ClosedByEngineer_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Engineer, global::LightSwitchApplication.Engineer.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ClosedByEngineer, ref d._ClosedByEngineer);
                }
                private static void _ClosedByEngineer_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::LightSwitchApplication.Engineer v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ClosedByEngineer, ref d._ClosedByEngineer, (i, ev) => i.ClosedByEngineer = ev, v);
                }
                private static void _ClosedByEngineer_Refresh(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ClosedByEngineer, ref d._ClosedByEngineer);
                }
                private static void _ClosedByEngineer_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.ClosedByEngineer_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.TimeTracking>.Entry
                    TimeTrackings = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.TimeTracking>.Entry(
                        "TimeTrackings",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._TimeTrackings_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._TimeTrackings_GetReferencedEntities,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._TimeTrackings_GetEntityCollection);
                private static void _TimeTrackings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.TimeTracking>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeTrackings, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TimeTracking> _TimeTrackings_GetReferencedEntities(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.TimeTrackings, ref d._TimeTrackings);
                }
                private static global::System.Collections.IEnumerable _TimeTrackings_GetEntityCollection(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.TimeTrackings;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Priority>.Entry
                    Priority = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Priority>.Entry(
                        "Priority",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_GetCoreImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_Refresh,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_OnValueChanged);
                private static void _Priority_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Priority>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._Priority, sf);
                }
                private static bool _Priority_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.Priority_IsReadOnly(ref result);
                    return result;
                }
                private static void _Priority_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Priority_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Priority_GetCoreImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.Priority;
                }
                private static global::LightSwitchApplication.Priority _Priority_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Priority, global::LightSwitchApplication.Priority.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Priority, ref d._Priority);
                }
                private static void _Priority_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::LightSwitchApplication.Priority v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Priority, ref d._Priority, (i, ev) => i.Priority = ev, v);
                }
                private static void _Priority_Refresh(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Priority, ref d._Priority);
                }
                private static void _Priority_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.Priority_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.User>.Entry
                    User = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.User>.Entry(
                        "User",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._User_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._User_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._User_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._User_GetCoreImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._User_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._User_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._User_Refresh,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._User_OnValueChanged);
                private static void _User_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.User>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._User, sf);
                }
                private static bool _User_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.User_IsReadOnly(ref result);
                    return result;
                }
                private static void _User_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.User_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _User_GetCoreImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.User;
                }
                private static global::LightSwitchApplication.User _User_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.User, global::LightSwitchApplication.User.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.User, ref d._User);
                }
                private static void _User_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::LightSwitchApplication.User v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.User, ref d._User, (i, ev) => i.User = ev, v);
                }
                private static void _User_Refresh(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.User, ref d._User);
                }
                private static void _User_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.User_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueResponse>.Entry
                    IssueResponses = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueResponse>.Entry(
                        "IssueResponses",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueResponses_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueResponses_GetReferencedEntities,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueResponses_GetEntityCollection);
                private static void _IssueResponses_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueResponse>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueResponses, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.IssueResponse> _IssueResponses_GetReferencedEntities(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.IssueResponse, global::LightSwitchApplication.IssueResponse.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueResponses, ref d._IssueResponses);
                }
                private static global::System.Collections.IEnumerable _IssueResponses_GetEntityCollection(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.IssueResponses;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueDocument>.Entry
                    IssueDocuments = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueDocument>.Entry(
                        "IssueDocuments",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueDocuments_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueDocuments_GetReferencedEntities,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueDocuments_GetEntityCollection);
                private static void _IssueDocuments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueDocument>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueDocuments, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.IssueDocument> _IssueDocuments_GetReferencedEntities(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.IssueDocument, global::LightSwitchApplication.IssueDocument.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueDocuments, ref d._IssueDocuments);
                }
                private static global::System.Collections.IEnumerable _IssueDocuments_GetEntityCollection(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.IssueDocuments;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueFeedback>.Entry
                    IssueFeedbacks = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueFeedback>.Entry(
                        "IssueFeedbacks",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueFeedbacks_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueFeedbacks_GetReferencedEntities,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueFeedbacks_GetEntityCollection);
                private static void _IssueFeedbacks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueFeedback>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueFeedbacks, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.IssueFeedback> _IssueFeedbacks_GetReferencedEntities(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.IssueFeedback, global::LightSwitchApplication.IssueFeedback.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueFeedbacks, ref d._IssueFeedbacks);
                }
                private static global::System.Collections.IEnumerable _IssueFeedbacks_GetEntityCollection(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.IssueFeedbacks;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data _ProblemDescription;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Data _CreateDateTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Data _TargetEndDateTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ClosedDateTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>.Data _Icon;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data _Subject;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueStatus>.Data _IssueStatus;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Engineer>.Data _AssignedTo;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Engineer>.Data _ClosedByEngineer;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.TimeTracking>.Data _TimeTrackings;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Priority>.Data _Priority;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.User>.Data _User;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueResponse>.Data _IssueResponses;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueDocument>.Data _IssueDocuments;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueFeedback>.Data _IssueFeedbacks;
            
        }
    
        #endregion
    }
    
    #endregion
}

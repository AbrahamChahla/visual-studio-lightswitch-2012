//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Inserting(global::LightSwitchApplication.Engineer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Inserted(global::LightSwitchApplication.Engineer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Updating(global::LightSwitchApplication.Engineer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Updated(global::LightSwitchApplication.Engineer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Deleting(global::LightSwitchApplication.Engineer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Deleted(global::LightSwitchApplication.Engineer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Validate(global::LightSwitchApplication.Engineer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Engineer, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Inserting(global::LightSwitchApplication.Issue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Inserted(global::LightSwitchApplication.Issue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Updating(global::LightSwitchApplication.Issue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Updated(global::LightSwitchApplication.Issue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Deleting(global::LightSwitchApplication.Issue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Deleted(global::LightSwitchApplication.Issue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Validate(global::LightSwitchApplication.Issue entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Issue, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_Inserting(global::LightSwitchApplication.IssueStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_Inserted(global::LightSwitchApplication.IssueStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_Updating(global::LightSwitchApplication.IssueStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_Updated(global::LightSwitchApplication.IssueStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_Deleting(global::LightSwitchApplication.IssueStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_Deleted(global::LightSwitchApplication.IssueStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_Validate(global::LightSwitchApplication.IssueStatus entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IssueStatus, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Inserting(global::LightSwitchApplication.Skill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Inserted(global::LightSwitchApplication.Skill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Updating(global::LightSwitchApplication.Skill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Updated(global::LightSwitchApplication.Skill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Deleting(global::LightSwitchApplication.Skill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Deleted(global::LightSwitchApplication.Skill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Validate(global::LightSwitchApplication.Skill entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Skill, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_Inserting(global::LightSwitchApplication.EngineerSkill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_Inserted(global::LightSwitchApplication.EngineerSkill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_Updating(global::LightSwitchApplication.EngineerSkill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_Updated(global::LightSwitchApplication.EngineerSkill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_Deleting(global::LightSwitchApplication.EngineerSkill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_Deleted(global::LightSwitchApplication.EngineerSkill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_Validate(global::LightSwitchApplication.EngineerSkill entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EngineerSkill, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_Inserting(global::LightSwitchApplication.TimeTracking entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_Inserted(global::LightSwitchApplication.TimeTracking entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_Updating(global::LightSwitchApplication.TimeTracking entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_Updated(global::LightSwitchApplication.TimeTracking entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_Deleting(global::LightSwitchApplication.TimeTracking entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_Deleted(global::LightSwitchApplication.TimeTracking entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_Validate(global::LightSwitchApplication.TimeTracking entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TimeTracking, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priorities_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priorities_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priorities_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priorities_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priorities_Inserting(global::LightSwitchApplication.Priority entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priorities_Inserted(global::LightSwitchApplication.Priority entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priorities_Updating(global::LightSwitchApplication.Priority entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priorities_Updated(global::LightSwitchApplication.Priority entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priorities_Deleting(global::LightSwitchApplication.Priority entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priorities_Deleted(global::LightSwitchApplication.Priority entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priorities_Validate(global::LightSwitchApplication.Priority entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priorities_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Priority, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Inserting(global::LightSwitchApplication.Department entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Inserted(global::LightSwitchApplication.Department entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Updating(global::LightSwitchApplication.Department entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Updated(global::LightSwitchApplication.Department entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Deleting(global::LightSwitchApplication.Department entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Deleted(global::LightSwitchApplication.Department entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Validate(global::LightSwitchApplication.Department entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Department, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Inserting(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Inserted(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Updating(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Updated(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Deleting(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Deleted(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Validate(global::LightSwitchApplication.User entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.User, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponses_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponses_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponses_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponses_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponses_Inserting(global::LightSwitchApplication.IssueResponse entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponses_Inserted(global::LightSwitchApplication.IssueResponse entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponses_Updating(global::LightSwitchApplication.IssueResponse entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponses_Updated(global::LightSwitchApplication.IssueResponse entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponses_Deleting(global::LightSwitchApplication.IssueResponse entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponses_Deleted(global::LightSwitchApplication.IssueResponse entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponses_Validate(global::LightSwitchApplication.IssueResponse entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponses_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IssueResponse, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocuments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocuments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocuments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocuments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocuments_Inserting(global::LightSwitchApplication.IssueDocument entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocuments_Inserted(global::LightSwitchApplication.IssueDocument entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocuments_Updating(global::LightSwitchApplication.IssueDocument entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocuments_Updated(global::LightSwitchApplication.IssueDocument entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocuments_Deleting(global::LightSwitchApplication.IssueDocument entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocuments_Deleted(global::LightSwitchApplication.IssueDocument entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocuments_Validate(global::LightSwitchApplication.IssueDocument entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocuments_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IssueDocument, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueFeedbacks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueFeedbacks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueFeedbacks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueFeedbacks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueFeedbacks_Inserting(global::LightSwitchApplication.IssueFeedback entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueFeedbacks_Inserted(global::LightSwitchApplication.IssueFeedback entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueFeedbacks_Updating(global::LightSwitchApplication.IssueFeedback entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueFeedbacks_Updated(global::LightSwitchApplication.IssueFeedback entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueFeedbacks_Deleting(global::LightSwitchApplication.IssueFeedback entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueFeedbacks_Deleted(global::LightSwitchApplication.IssueFeedback entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueFeedbacks_Validate(global::LightSwitchApplication.IssueFeedback entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueFeedbacks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IssueFeedback, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptions_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptions_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptions_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptions_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptions_Inserting(global::LightSwitchApplication.AppOption entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptions_Inserted(global::LightSwitchApplication.AppOption entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptions_Updating(global::LightSwitchApplication.AppOption entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptions_Updated(global::LightSwitchApplication.AppOption entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptions_Deleting(global::LightSwitchApplication.AppOption entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptions_Deleted(global::LightSwitchApplication.AppOption entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptions_Validate(global::LightSwitchApplication.AppOption entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptions_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AppOption, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailOperations_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailOperations_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailOperations_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailOperations_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailOperations_Inserting(global::LightSwitchApplication.EmailOperation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailOperations_Inserted(global::LightSwitchApplication.EmailOperation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailOperations_Updating(global::LightSwitchApplication.EmailOperation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailOperations_Updated(global::LightSwitchApplication.EmailOperation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailOperations_Deleting(global::LightSwitchApplication.EmailOperation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailOperations_Deleted(global::LightSwitchApplication.EmailOperation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailOperations_Validate(global::LightSwitchApplication.EmailOperation entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmailOperations_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmailOperation, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersWithOutstandingIssues_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void EngineersWithOutstandingIssues_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersWithOutstandingIssues_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Engineer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void EngineersWithOutstandingIssues_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Engineer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void EngineersWithOutstandingIssues_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesWithAttachments_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssuesWithAttachments_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesWithAttachments_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Issue> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssuesWithAttachments_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Issue> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssuesWithAttachments_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesWithNoResponse_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssuesWithNoResponse_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesWithNoResponse_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Issue> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssuesWithNoResponse_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Issue> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssuesWithNoResponse_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesByMonthAndYear_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssuesByMonthAndYear_Executing(global::System.Nullable<int> IssueMonth, global::System.Nullable<int> IssueYear);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesByMonthAndYear_PreprocessQuery(global::System.Nullable<int> IssueMonth, global::System.Nullable<int> IssueYear, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Issue> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssuesByMonthAndYear_Executed(global::System.Nullable<int> IssueMonth, global::System.Nullable<int> IssueYear, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Issue> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssuesByMonthAndYear_ExecuteFailed(global::System.Nullable<int> IssueMonth, global::System.Nullable<int> IssueYear, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesWithHighestFeedback_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssuesWithHighestFeedback_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesWithHighestFeedback_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Issue> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssuesWithHighestFeedback_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Issue> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssuesWithHighestFeedback_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesDue7DaysAgo_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssuesDue7DaysAgo_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesDue7DaysAgo_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Issue> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssuesDue7DaysAgo_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Issue> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssuesDue7DaysAgo_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueSearchAll_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssueSearchAll_Executing(global::System.Nullable<int> EngineerId, string ProblemDescription, global::System.Nullable<global::System.DateTime> CreateDateTimeStart, global::System.Nullable<global::System.DateTime> CreateDateTimeEnd, global::System.Nullable<int> StatusId, global::System.Nullable<int> PriorityId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueSearchAll_PreprocessQuery(global::System.Nullable<int> EngineerId, string ProblemDescription, global::System.Nullable<global::System.DateTime> CreateDateTimeStart, global::System.Nullable<global::System.DateTime> CreateDateTimeEnd, global::System.Nullable<int> StatusId, global::System.Nullable<int> PriorityId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Issue> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssueSearchAll_Executed(global::System.Nullable<int> EngineerId, string ProblemDescription, global::System.Nullable<global::System.DateTime> CreateDateTimeStart, global::System.Nullable<global::System.DateTime> CreateDateTimeEnd, global::System.Nullable<int> StatusId, global::System.Nullable<int> PriorityId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Issue> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssueSearchAll_ExecuteFailed(global::System.Nullable<int> EngineerId, string ProblemDescription, global::System.Nullable<global::System.DateTime> CreateDateTimeStart, global::System.Nullable<global::System.DateTime> CreateDateTimeEnd, global::System.Nullable<int> StatusId, global::System.Nullable<int> PriorityId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesByUser_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssuesByUser_Executing(global::System.Nullable<int> UserId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesByUser_PreprocessQuery(global::System.Nullable<int> UserId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Issue> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssuesByUser_Executed(global::System.Nullable<int> UserId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Issue> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssuesByUser_ExecuteFailed(global::System.Nullable<int> UserId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UsersByDepartment_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void UsersByDepartment_Executing(global::System.Nullable<int> DepartmentId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UsersByDepartment_PreprocessQuery(global::System.Nullable<int> DepartmentId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.User> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void UsersByDepartment_Executed(global::System.Nullable<int> DepartmentId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void UsersByDepartment_ExecuteFailed(global::System.Nullable<int> DepartmentId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Engineer>
                __EngineersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Engineer>(
                    "Engineers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_Filter);
            private static bool __Engineers_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Engineers_CanInsert(ref result);
                return result;
            }
            private static bool __Engineers_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Engineers_CanUpdate(ref result);
                return result;
            }
            private static bool __Engineers_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Engineers_CanDelete(ref result);
                return result;
            }
            private static bool __Engineers_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Engineers_CanRead(ref result);
                return result;
            }
            private static void __Engineers_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Engineer e)
            {
                d.Engineers_Inserting(e);
            }
            private static void __Engineers_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Engineer e)
            {
                d.Engineers_Inserted(e);
            }
            private static void __Engineers_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Engineer e)
            {
                d.Engineers_Updating(e);
            }
            private static void __Engineers_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Engineer e)
            {
                d.Engineers_Updated(e);
            }
            private static void __Engineers_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Engineer e)
            {
                d.Engineers_Deleting(e);
            }
            private static void __Engineers_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Engineer e)
            {
                d.Engineers_Deleted(e);
            }
            private static void __Engineers_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Engineer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Engineers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Engineer, bool>> __Engineers_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Engineer, bool>> filter = null;
                d.Engineers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>
                __IssuesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>(
                    "Issues",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Filter);
            private static bool __Issues_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Issues_CanInsert(ref result);
                return result;
            }
            private static bool __Issues_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Issues_CanUpdate(ref result);
                return result;
            }
            private static bool __Issues_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Issues_CanDelete(ref result);
                return result;
            }
            private static bool __Issues_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Issues_CanRead(ref result);
                return result;
            }
            private static void __Issues_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e)
            {
                d.Issues_Inserting(e);
            }
            private static void __Issues_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e)
            {
                d.Issues_Inserted(e);
            }
            private static void __Issues_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e)
            {
                d.Issues_Updating(e);
            }
            private static void __Issues_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e)
            {
                d.Issues_Updated(e);
            }
            private static void __Issues_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e)
            {
                d.Issues_Deleting(e);
            }
            private static void __Issues_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e)
            {
                d.Issues_Deleted(e);
            }
            private static void __Issues_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Issues_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Issue, bool>> __Issues_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Issue, bool>> filter = null;
                d.Issues_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IssueStatus>
                __IssueStatusSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IssueStatus>(
                    "IssueStatusSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_Filter);
            private static bool __IssueStatusSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueStatusSet_CanInsert(ref result);
                return result;
            }
            private static bool __IssueStatusSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueStatusSet_CanUpdate(ref result);
                return result;
            }
            private static bool __IssueStatusSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueStatusSet_CanDelete(ref result);
                return result;
            }
            private static bool __IssueStatusSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueStatusSet_CanRead(ref result);
                return result;
            }
            private static void __IssueStatusSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueStatus e)
            {
                d.IssueStatusSet_Inserting(e);
            }
            private static void __IssueStatusSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueStatus e)
            {
                d.IssueStatusSet_Inserted(e);
            }
            private static void __IssueStatusSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueStatus e)
            {
                d.IssueStatusSet_Updating(e);
            }
            private static void __IssueStatusSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueStatus e)
            {
                d.IssueStatusSet_Updated(e);
            }
            private static void __IssueStatusSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueStatus e)
            {
                d.IssueStatusSet_Deleting(e);
            }
            private static void __IssueStatusSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueStatus e)
            {
                d.IssueStatusSet_Deleted(e);
            }
            private static void __IssueStatusSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueStatus e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.IssueStatusSet_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IssueStatus, bool>> __IssueStatusSet_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IssueStatus, bool>> filter = null;
                d.IssueStatusSet_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Skill>
                __SkillsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Skill>(
                    "Skills",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Filter);
            private static bool __Skills_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Skills_CanInsert(ref result);
                return result;
            }
            private static bool __Skills_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Skills_CanUpdate(ref result);
                return result;
            }
            private static bool __Skills_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Skills_CanDelete(ref result);
                return result;
            }
            private static bool __Skills_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Skills_CanRead(ref result);
                return result;
            }
            private static void __Skills_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e)
            {
                d.Skills_Inserting(e);
            }
            private static void __Skills_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e)
            {
                d.Skills_Inserted(e);
            }
            private static void __Skills_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e)
            {
                d.Skills_Updating(e);
            }
            private static void __Skills_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e)
            {
                d.Skills_Updated(e);
            }
            private static void __Skills_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e)
            {
                d.Skills_Deleting(e);
            }
            private static void __Skills_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e)
            {
                d.Skills_Deleted(e);
            }
            private static void __Skills_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Skills_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Skill, bool>> __Skills_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Skill, bool>> filter = null;
                d.Skills_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EngineerSkill>
                __EngineerSkillsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EngineerSkill>(
                    "EngineerSkills",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_Filter);
            private static bool __EngineerSkills_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EngineerSkills_CanInsert(ref result);
                return result;
            }
            private static bool __EngineerSkills_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EngineerSkills_CanUpdate(ref result);
                return result;
            }
            private static bool __EngineerSkills_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EngineerSkills_CanDelete(ref result);
                return result;
            }
            private static bool __EngineerSkills_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EngineerSkills_CanRead(ref result);
                return result;
            }
            private static void __EngineerSkills_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EngineerSkill e)
            {
                d.EngineerSkills_Inserting(e);
            }
            private static void __EngineerSkills_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EngineerSkill e)
            {
                d.EngineerSkills_Inserted(e);
            }
            private static void __EngineerSkills_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EngineerSkill e)
            {
                d.EngineerSkills_Updating(e);
            }
            private static void __EngineerSkills_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EngineerSkill e)
            {
                d.EngineerSkills_Updated(e);
            }
            private static void __EngineerSkills_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EngineerSkill e)
            {
                d.EngineerSkills_Deleting(e);
            }
            private static void __EngineerSkills_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EngineerSkill e)
            {
                d.EngineerSkills_Deleted(e);
            }
            private static void __EngineerSkills_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EngineerSkill e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.EngineerSkills_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EngineerSkill, bool>> __EngineerSkills_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EngineerSkill, bool>> filter = null;
                d.EngineerSkills_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeTracking>
                __TimeTrackingsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeTracking>(
                    "TimeTrackings",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_Filter);
            private static bool __TimeTrackings_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeTrackings_CanInsert(ref result);
                return result;
            }
            private static bool __TimeTrackings_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeTrackings_CanUpdate(ref result);
                return result;
            }
            private static bool __TimeTrackings_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeTrackings_CanDelete(ref result);
                return result;
            }
            private static bool __TimeTrackings_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeTrackings_CanRead(ref result);
                return result;
            }
            private static void __TimeTrackings_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTracking e)
            {
                d.TimeTrackings_Inserting(e);
            }
            private static void __TimeTrackings_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTracking e)
            {
                d.TimeTrackings_Inserted(e);
            }
            private static void __TimeTrackings_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTracking e)
            {
                d.TimeTrackings_Updating(e);
            }
            private static void __TimeTrackings_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTracking e)
            {
                d.TimeTrackings_Updated(e);
            }
            private static void __TimeTrackings_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTracking e)
            {
                d.TimeTrackings_Deleting(e);
            }
            private static void __TimeTrackings_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTracking e)
            {
                d.TimeTrackings_Deleted(e);
            }
            private static void __TimeTrackings_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTracking e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.TimeTrackings_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TimeTracking, bool>> __TimeTrackings_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TimeTracking, bool>> filter = null;
                d.TimeTrackings_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Priority>
                __PrioritiesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Priority>(
                    "Priorities",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Priorities_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Priorities_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Priorities_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Priorities_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Priorities_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Priorities_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Priorities_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Priorities_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Priorities_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Priorities_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Priorities_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Priorities_Filter);
            private static bool __Priorities_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Priorities_CanInsert(ref result);
                return result;
            }
            private static bool __Priorities_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Priorities_CanUpdate(ref result);
                return result;
            }
            private static bool __Priorities_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Priorities_CanDelete(ref result);
                return result;
            }
            private static bool __Priorities_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Priorities_CanRead(ref result);
                return result;
            }
            private static void __Priorities_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Priority e)
            {
                d.Priorities_Inserting(e);
            }
            private static void __Priorities_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Priority e)
            {
                d.Priorities_Inserted(e);
            }
            private static void __Priorities_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Priority e)
            {
                d.Priorities_Updating(e);
            }
            private static void __Priorities_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Priority e)
            {
                d.Priorities_Updated(e);
            }
            private static void __Priorities_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Priority e)
            {
                d.Priorities_Deleting(e);
            }
            private static void __Priorities_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Priority e)
            {
                d.Priorities_Deleted(e);
            }
            private static void __Priorities_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Priority e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Priorities_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Priority, bool>> __Priorities_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Priority, bool>> filter = null;
                d.Priorities_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Department>
                __DepartmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Department>(
                    "Departments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_Filter);
            private static bool __Departments_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Departments_CanInsert(ref result);
                return result;
            }
            private static bool __Departments_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Departments_CanUpdate(ref result);
                return result;
            }
            private static bool __Departments_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Departments_CanDelete(ref result);
                return result;
            }
            private static bool __Departments_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Departments_CanRead(ref result);
                return result;
            }
            private static void __Departments_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Department e)
            {
                d.Departments_Inserting(e);
            }
            private static void __Departments_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Department e)
            {
                d.Departments_Inserted(e);
            }
            private static void __Departments_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Department e)
            {
                d.Departments_Updating(e);
            }
            private static void __Departments_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Department e)
            {
                d.Departments_Updated(e);
            }
            private static void __Departments_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Department e)
            {
                d.Departments_Deleting(e);
            }
            private static void __Departments_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Department e)
            {
                d.Departments_Deleted(e);
            }
            private static void __Departments_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Department e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Departments_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Department, bool>> __Departments_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Department, bool>> filter = null;
                d.Departments_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.User>
                __UsersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.User>(
                    "Users",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Filter);
            private static bool __Users_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanInsert(ref result);
                return result;
            }
            private static bool __Users_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanUpdate(ref result);
                return result;
            }
            private static bool __Users_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanDelete(ref result);
                return result;
            }
            private static bool __Users_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanRead(ref result);
                return result;
            }
            private static void __Users_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Inserting(e);
            }
            private static void __Users_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Inserted(e);
            }
            private static void __Users_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Updating(e);
            }
            private static void __Users_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Updated(e);
            }
            private static void __Users_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Deleting(e);
            }
            private static void __Users_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Deleted(e);
            }
            private static void __Users_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Users_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.User, bool>> __Users_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.User, bool>> filter = null;
                d.Users_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IssueResponse>
                __IssueResponsesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IssueResponse>(
                    "IssueResponses",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueResponses_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueResponses_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueResponses_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueResponses_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueResponses_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueResponses_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueResponses_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueResponses_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueResponses_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueResponses_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueResponses_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueResponses_Filter);
            private static bool __IssueResponses_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueResponses_CanInsert(ref result);
                return result;
            }
            private static bool __IssueResponses_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueResponses_CanUpdate(ref result);
                return result;
            }
            private static bool __IssueResponses_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueResponses_CanDelete(ref result);
                return result;
            }
            private static bool __IssueResponses_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueResponses_CanRead(ref result);
                return result;
            }
            private static void __IssueResponses_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueResponse e)
            {
                d.IssueResponses_Inserting(e);
            }
            private static void __IssueResponses_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueResponse e)
            {
                d.IssueResponses_Inserted(e);
            }
            private static void __IssueResponses_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueResponse e)
            {
                d.IssueResponses_Updating(e);
            }
            private static void __IssueResponses_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueResponse e)
            {
                d.IssueResponses_Updated(e);
            }
            private static void __IssueResponses_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueResponse e)
            {
                d.IssueResponses_Deleting(e);
            }
            private static void __IssueResponses_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueResponse e)
            {
                d.IssueResponses_Deleted(e);
            }
            private static void __IssueResponses_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueResponse e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.IssueResponses_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IssueResponse, bool>> __IssueResponses_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IssueResponse, bool>> filter = null;
                d.IssueResponses_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IssueDocument>
                __IssueDocumentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IssueDocument>(
                    "IssueDocuments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueDocuments_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueDocuments_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueDocuments_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueDocuments_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueDocuments_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueDocuments_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueDocuments_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueDocuments_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueDocuments_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueDocuments_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueDocuments_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueDocuments_Filter);
            private static bool __IssueDocuments_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueDocuments_CanInsert(ref result);
                return result;
            }
            private static bool __IssueDocuments_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueDocuments_CanUpdate(ref result);
                return result;
            }
            private static bool __IssueDocuments_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueDocuments_CanDelete(ref result);
                return result;
            }
            private static bool __IssueDocuments_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueDocuments_CanRead(ref result);
                return result;
            }
            private static void __IssueDocuments_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueDocument e)
            {
                d.IssueDocuments_Inserting(e);
            }
            private static void __IssueDocuments_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueDocument e)
            {
                d.IssueDocuments_Inserted(e);
            }
            private static void __IssueDocuments_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueDocument e)
            {
                d.IssueDocuments_Updating(e);
            }
            private static void __IssueDocuments_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueDocument e)
            {
                d.IssueDocuments_Updated(e);
            }
            private static void __IssueDocuments_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueDocument e)
            {
                d.IssueDocuments_Deleting(e);
            }
            private static void __IssueDocuments_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueDocument e)
            {
                d.IssueDocuments_Deleted(e);
            }
            private static void __IssueDocuments_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueDocument e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.IssueDocuments_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IssueDocument, bool>> __IssueDocuments_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IssueDocument, bool>> filter = null;
                d.IssueDocuments_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IssueFeedback>
                __IssueFeedbacksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IssueFeedback>(
                    "IssueFeedbacks",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueFeedbacks_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueFeedbacks_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueFeedbacks_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueFeedbacks_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueFeedbacks_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueFeedbacks_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueFeedbacks_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueFeedbacks_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueFeedbacks_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueFeedbacks_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueFeedbacks_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueFeedbacks_Filter);
            private static bool __IssueFeedbacks_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueFeedbacks_CanInsert(ref result);
                return result;
            }
            private static bool __IssueFeedbacks_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueFeedbacks_CanUpdate(ref result);
                return result;
            }
            private static bool __IssueFeedbacks_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueFeedbacks_CanDelete(ref result);
                return result;
            }
            private static bool __IssueFeedbacks_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueFeedbacks_CanRead(ref result);
                return result;
            }
            private static void __IssueFeedbacks_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueFeedback e)
            {
                d.IssueFeedbacks_Inserting(e);
            }
            private static void __IssueFeedbacks_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueFeedback e)
            {
                d.IssueFeedbacks_Inserted(e);
            }
            private static void __IssueFeedbacks_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueFeedback e)
            {
                d.IssueFeedbacks_Updating(e);
            }
            private static void __IssueFeedbacks_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueFeedback e)
            {
                d.IssueFeedbacks_Updated(e);
            }
            private static void __IssueFeedbacks_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueFeedback e)
            {
                d.IssueFeedbacks_Deleting(e);
            }
            private static void __IssueFeedbacks_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueFeedback e)
            {
                d.IssueFeedbacks_Deleted(e);
            }
            private static void __IssueFeedbacks_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueFeedback e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.IssueFeedbacks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IssueFeedback, bool>> __IssueFeedbacks_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IssueFeedback, bool>> filter = null;
                d.IssueFeedbacks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AppOption>
                __AppOptionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AppOption>(
                    "AppOptions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppOptions_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppOptions_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppOptions_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppOptions_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppOptions_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppOptions_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppOptions_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppOptions_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppOptions_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppOptions_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppOptions_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppOptions_Filter);
            private static bool __AppOptions_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AppOptions_CanInsert(ref result);
                return result;
            }
            private static bool __AppOptions_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AppOptions_CanUpdate(ref result);
                return result;
            }
            private static bool __AppOptions_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AppOptions_CanDelete(ref result);
                return result;
            }
            private static bool __AppOptions_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AppOptions_CanRead(ref result);
                return result;
            }
            private static void __AppOptions_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AppOption e)
            {
                d.AppOptions_Inserting(e);
            }
            private static void __AppOptions_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AppOption e)
            {
                d.AppOptions_Inserted(e);
            }
            private static void __AppOptions_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AppOption e)
            {
                d.AppOptions_Updating(e);
            }
            private static void __AppOptions_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AppOption e)
            {
                d.AppOptions_Updated(e);
            }
            private static void __AppOptions_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AppOption e)
            {
                d.AppOptions_Deleting(e);
            }
            private static void __AppOptions_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AppOption e)
            {
                d.AppOptions_Deleted(e);
            }
            private static void __AppOptions_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AppOption e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AppOptions_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AppOption, bool>> __AppOptions_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AppOption, bool>> filter = null;
                d.AppOptions_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmailOperation>
                __EmailOperationsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmailOperation>(
                    "EmailOperations",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailOperations_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailOperations_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailOperations_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailOperations_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailOperations_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailOperations_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailOperations_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailOperations_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailOperations_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailOperations_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailOperations_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmailOperations_Filter);
            private static bool __EmailOperations_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmailOperations_CanInsert(ref result);
                return result;
            }
            private static bool __EmailOperations_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmailOperations_CanUpdate(ref result);
                return result;
            }
            private static bool __EmailOperations_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmailOperations_CanDelete(ref result);
                return result;
            }
            private static bool __EmailOperations_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmailOperations_CanRead(ref result);
                return result;
            }
            private static void __EmailOperations_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmailOperation e)
            {
                d.EmailOperations_Inserting(e);
            }
            private static void __EmailOperations_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmailOperation e)
            {
                d.EmailOperations_Inserted(e);
            }
            private static void __EmailOperations_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmailOperation e)
            {
                d.EmailOperations_Updating(e);
            }
            private static void __EmailOperations_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmailOperation e)
            {
                d.EmailOperations_Updated(e);
            }
            private static void __EmailOperations_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmailOperation e)
            {
                d.EmailOperations_Deleting(e);
            }
            private static void __EmailOperations_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmailOperation e)
            {
                d.EmailOperations_Deleted(e);
            }
            private static void __EmailOperations_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmailOperation e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.EmailOperations_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmailOperation, bool>> __EmailOperations_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmailOperation, bool>> filter = null;
                d.EmailOperations_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Engineer>
                __EngineersWithOutstandingIssuesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Engineer>(
                    "EngineersWithOutstandingIssues",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineersWithOutstandingIssues_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineersWithOutstandingIssues_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineersWithOutstandingIssues_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineersWithOutstandingIssues_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineersWithOutstandingIssues_PreprocessQuery);
            private static bool __EngineersWithOutstandingIssues_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.EngineersWithOutstandingIssues_CanExecute(ref r);
                return r;
            }
            private static void __EngineersWithOutstandingIssues_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.EngineersWithOutstandingIssues_Executing();
            }
            private static void __EngineersWithOutstandingIssues_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.EngineersWithOutstandingIssues_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Engineer>)args[0]);
            }
            private static void __EngineersWithOutstandingIssues_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.EngineersWithOutstandingIssues_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __EngineersWithOutstandingIssues_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Engineer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Engineer>)args[0];
                d.EngineersWithOutstandingIssues_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>
                __IssuesWithAttachmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>(
                    "IssuesWithAttachments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesWithAttachments_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesWithAttachments_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesWithAttachments_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesWithAttachments_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesWithAttachments_PreprocessQuery);
            private static bool __IssuesWithAttachments_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.IssuesWithAttachments_CanExecute(ref r);
                return r;
            }
            private static void __IssuesWithAttachments_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IssuesWithAttachments_Executing();
            }
            private static void __IssuesWithAttachments_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IssuesWithAttachments_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Issue>)args[0]);
            }
            private static void __IssuesWithAttachments_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.IssuesWithAttachments_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __IssuesWithAttachments_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Issue> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Issue>)args[0];
                d.IssuesWithAttachments_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>
                __IssuesWithNoResponseEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>(
                    "IssuesWithNoResponse",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesWithNoResponse_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesWithNoResponse_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesWithNoResponse_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesWithNoResponse_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesWithNoResponse_PreprocessQuery);
            private static bool __IssuesWithNoResponse_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.IssuesWithNoResponse_CanExecute(ref r);
                return r;
            }
            private static void __IssuesWithNoResponse_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IssuesWithNoResponse_Executing();
            }
            private static void __IssuesWithNoResponse_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IssuesWithNoResponse_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Issue>)args[0]);
            }
            private static void __IssuesWithNoResponse_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.IssuesWithNoResponse_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __IssuesWithNoResponse_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Issue> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Issue>)args[0];
                d.IssuesWithNoResponse_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>
                __IssuesByMonthAndYearEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>(
                    "IssuesByMonthAndYear",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesByMonthAndYear_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesByMonthAndYear_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesByMonthAndYear_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesByMonthAndYear_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesByMonthAndYear_PreprocessQuery);
            private static bool __IssuesByMonthAndYear_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.IssuesByMonthAndYear_CanExecute(ref r);
                return r;
            }
            private static void __IssuesByMonthAndYear_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IssuesByMonthAndYear_Executing((global::System.Nullable<int>)args[0], (global::System.Nullable<int>)args[1]);
            }
            private static void __IssuesByMonthAndYear_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IssuesByMonthAndYear_Executed((global::System.Nullable<int>)args[0], (global::System.Nullable<int>)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Issue>)args[2]);
            }
            private static void __IssuesByMonthAndYear_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.IssuesByMonthAndYear_ExecuteFailed((global::System.Nullable<int>)args[0], (global::System.Nullable<int>)args[1], ex);
            }
            private static global::System.Linq.IQueryable __IssuesByMonthAndYear_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Issue> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Issue>)args[2];
                d.IssuesByMonthAndYear_PreprocessQuery((global::System.Nullable<int>)args[0], (global::System.Nullable<int>)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>
                __IssuesWithHighestFeedbackEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>(
                    "IssuesWithHighestFeedback",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesWithHighestFeedback_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesWithHighestFeedback_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesWithHighestFeedback_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesWithHighestFeedback_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesWithHighestFeedback_PreprocessQuery);
            private static bool __IssuesWithHighestFeedback_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.IssuesWithHighestFeedback_CanExecute(ref r);
                return r;
            }
            private static void __IssuesWithHighestFeedback_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IssuesWithHighestFeedback_Executing();
            }
            private static void __IssuesWithHighestFeedback_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IssuesWithHighestFeedback_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Issue>)args[0]);
            }
            private static void __IssuesWithHighestFeedback_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.IssuesWithHighestFeedback_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __IssuesWithHighestFeedback_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Issue> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Issue>)args[0];
                d.IssuesWithHighestFeedback_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>
                __IssuesDue7DaysAgoEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>(
                    "IssuesDue7DaysAgo",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesDue7DaysAgo_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesDue7DaysAgo_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesDue7DaysAgo_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesDue7DaysAgo_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesDue7DaysAgo_PreprocessQuery);
            private static bool __IssuesDue7DaysAgo_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.IssuesDue7DaysAgo_CanExecute(ref r);
                return r;
            }
            private static void __IssuesDue7DaysAgo_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IssuesDue7DaysAgo_Executing();
            }
            private static void __IssuesDue7DaysAgo_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IssuesDue7DaysAgo_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Issue>)args[0]);
            }
            private static void __IssuesDue7DaysAgo_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.IssuesDue7DaysAgo_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __IssuesDue7DaysAgo_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Issue> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Issue>)args[0];
                d.IssuesDue7DaysAgo_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>
                __IssueSearchAllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>(
                    "IssueSearchAll",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueSearchAll_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueSearchAll_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueSearchAll_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueSearchAll_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueSearchAll_PreprocessQuery);
            private static bool __IssueSearchAll_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.IssueSearchAll_CanExecute(ref r);
                return r;
            }
            private static void __IssueSearchAll_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IssueSearchAll_Executing((global::System.Nullable<int>)args[0], (string)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Nullable<global::System.DateTime>)args[3], (global::System.Nullable<int>)args[4], (global::System.Nullable<int>)args[5]);
            }
            private static void __IssueSearchAll_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IssueSearchAll_Executed((global::System.Nullable<int>)args[0], (string)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Nullable<global::System.DateTime>)args[3], (global::System.Nullable<int>)args[4], (global::System.Nullable<int>)args[5], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Issue>)args[6]);
            }
            private static void __IssueSearchAll_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.IssueSearchAll_ExecuteFailed((global::System.Nullable<int>)args[0], (string)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Nullable<global::System.DateTime>)args[3], (global::System.Nullable<int>)args[4], (global::System.Nullable<int>)args[5], ex);
            }
            private static global::System.Linq.IQueryable __IssueSearchAll_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Issue> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Issue>)args[6];
                d.IssueSearchAll_PreprocessQuery((global::System.Nullable<int>)args[0], (string)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Nullable<global::System.DateTime>)args[3], (global::System.Nullable<int>)args[4], (global::System.Nullable<int>)args[5], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>
                __IssuesByUserEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>(
                    "IssuesByUser",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesByUser_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesByUser_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesByUser_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesByUser_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssuesByUser_PreprocessQuery);
            private static bool __IssuesByUser_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.IssuesByUser_CanExecute(ref r);
                return r;
            }
            private static void __IssuesByUser_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IssuesByUser_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __IssuesByUser_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IssuesByUser_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Issue>)args[1]);
            }
            private static void __IssuesByUser_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.IssuesByUser_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __IssuesByUser_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Issue> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Issue>)args[1];
                d.IssuesByUser_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.User>
                __UsersByDepartmentEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.User>(
                    "UsersByDepartment",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UsersByDepartment_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UsersByDepartment_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UsersByDepartment_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UsersByDepartment_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UsersByDepartment_PreprocessQuery);
            private static bool __UsersByDepartment_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.UsersByDepartment_CanExecute(ref r);
                return r;
            }
            private static void __UsersByDepartment_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.UsersByDepartment_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __UsersByDepartment_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.UsersByDepartment_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User>)args[1]);
            }
            private static void __UsersByDepartment_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.UsersByDepartment_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UsersByDepartment_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.User> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.User>)args[1];
                d.UsersByDepartment_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}

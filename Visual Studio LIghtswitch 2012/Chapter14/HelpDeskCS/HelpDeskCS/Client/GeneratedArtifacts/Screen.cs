//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EditableIssuesGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditableIssuesGrid() : base("LightSwitchApplication:EditableIssuesGrid")
        {
            global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditableIssuesGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditableIssuesGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableIssuesGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issues_SelectionChanged();

        partial void Issues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Issues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> Issues
        {
            get
            {
                return global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties.Issues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties.Issues;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry
                __EditableIssuesGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeCreated,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeActivated,
                    global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.__EditableIssuesGrid_InvokeSaveErrorEvent);
            private static void __EditableIssuesGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditableIssuesGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditableIssuesGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditableIssuesGrid_InvokeSavingEvent(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                bool handled = false;
                s.EditableIssuesGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditableIssuesGrid_InvokeSavedEvent(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                s.EditableIssuesGrid_Saved();
            }
            private static bool __EditableIssuesGrid_InvokeClosingEvent(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                bool cancel = false;
                s.EditableIssuesGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditableIssuesGrid_InvokeCreated(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                s.EditableIssuesGrid_Created();
            }
            private static void __EditableIssuesGrid_InvokeActivated(global::LightSwitchApplication.EditableIssuesGrid s)
            {
                s.EditableIssuesGrid_Activated();
            }
            private static bool __EditableIssuesGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditableIssuesGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditableIssuesGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssuesQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            this.Screen.DataWorkspace.ApplicationData.Issues,
                            "IssueStatus"),
                        "AssignedTo"),
                    "ClosedByEngineer");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issues;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue> Issues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties.Issues);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issues",
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_Stub,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_Validate,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_CreateQuery,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_SelectionChanged,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_OnCollectionChanged,
                        global::LightSwitchApplication.EditableIssuesGrid.DetailsClass.PropertySetProperties._Issues_OnLoaded);
                private static void _Issues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableIssuesGrid, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Issues, sf);
                }
                private static void _Issues_Validate(global::LightSwitchApplication.EditableIssuesGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issues_CreateQuery(global::LightSwitchApplication.EditableIssuesGrid.DetailsClass d, object[] args)
                {
                    return d.IssuesQuery();
                }
                private static void _Issues_SelectionChanged(global::LightSwitchApplication.EditableIssuesGrid s)
                {
                    s.Issues_SelectionChanged();
                }
                private static void _Issues_OnCollectionChanged(global::LightSwitchApplication.EditableIssuesGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Issues_Changed(e);
                }
                private static void _Issues_OnLoaded(global::LightSwitchApplication.EditableIssuesGrid s, bool succeeded)
                {
                    s.Issues_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class SearchEngineers
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private SearchEngineers() : base("LightSwitchApplication:SearchEngineers")
        {
            global::LightSwitchApplication.SearchEngineers.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static SearchEngineers CreateInstance()
        {
            return new global::LightSwitchApplication.SearchEngineers(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchEngineers_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchEngineers_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchEngineers_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchEngineers_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchEngineers_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchEngineers_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchEngineers_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineers_SelectionChanged();

        partial void Engineers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Engineers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Engineer> Engineers
        {
            get
            {
                return global::LightSwitchApplication.SearchEngineers.DetailsClass.GetValue(this, global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySetProperties.Engineers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass, global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySet, global::LightSwitchApplication.SearchEngineers.DetailsClass.CommandSet, global::LightSwitchApplication.SearchEngineers.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySetProperties.Engineers;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass>.Entry
                __SearchEngineersEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass>.Entry(
                    global::LightSwitchApplication.SearchEngineers.DetailsClass.__SearchEngineers_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.SearchEngineers.DetailsClass.__SearchEngineers_InvokeSavingEvent,
                    global::LightSwitchApplication.SearchEngineers.DetailsClass.__SearchEngineers_InvokeSavedEvent,
                    global::LightSwitchApplication.SearchEngineers.DetailsClass.__SearchEngineers_InvokeClosingEvent,
                    global::LightSwitchApplication.SearchEngineers.DetailsClass.__SearchEngineers_InvokeCreated,
                    global::LightSwitchApplication.SearchEngineers.DetailsClass.__SearchEngineers_InvokeActivated,
                    global::LightSwitchApplication.SearchEngineers.DetailsClass.__SearchEngineers_InvokeSaveErrorEvent);
            private static void __SearchEngineers_InvokeInitializeDataWorkspace(global::LightSwitchApplication.SearchEngineers s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.SearchEngineers_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __SearchEngineers_InvokeSavingEvent(global::LightSwitchApplication.SearchEngineers s)
            {
                bool handled = false;
                s.SearchEngineers_Saving(ref handled);
                return handled;
            }
            private static void __SearchEngineers_InvokeSavedEvent(global::LightSwitchApplication.SearchEngineers s)
            {
                s.SearchEngineers_Saved();
            }
            private static bool __SearchEngineers_InvokeClosingEvent(global::LightSwitchApplication.SearchEngineers s)
            {
                bool cancel = false;
                s.SearchEngineers_Closing(ref cancel);
                return cancel;
            }
            private static void __SearchEngineers_InvokeCreated(global::LightSwitchApplication.SearchEngineers s)
            {
                s.SearchEngineers_Created();
            }
            private static void __SearchEngineers_InvokeActivated(global::LightSwitchApplication.SearchEngineers s)
            {
                s.SearchEngineers_Activated();
            }
            private static bool __SearchEngineers_InvokeSaveErrorEvent(global::LightSwitchApplication.SearchEngineers s, global::System.Exception ex)
            {
                bool handled = false;
                s.SearchEngineers_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.SearchEngineers.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.SearchEngineers.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EngineersQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ApplicationData.Engineers,
                    "Manager");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineers;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass, global::LightSwitchApplication.Engineer> Engineers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySetProperties.Engineers);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineers",
                        global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySetProperties._Engineers_Stub,
                        global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySetProperties._Engineers_Validate,
                        global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySetProperties._Engineers_CreateQuery,
                        global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySetProperties._Engineers_SelectionChanged,
                        global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySetProperties._Engineers_OnCollectionChanged,
                        global::LightSwitchApplication.SearchEngineers.DetailsClass.PropertySetProperties._Engineers_OnLoaded);
                private static void _Engineers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SearchEngineers.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchEngineers, global::LightSwitchApplication.SearchEngineers.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.SearchEngineers.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineers, sf);
                }
                private static void _Engineers_Validate(global::LightSwitchApplication.SearchEngineers s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineers_CreateQuery(global::LightSwitchApplication.SearchEngineers.DetailsClass d, object[] args)
                {
                    return d.EngineersQuery();
                }
                private static void _Engineers_SelectionChanged(global::LightSwitchApplication.SearchEngineers s)
                {
                    s.Engineers_SelectionChanged();
                }
                private static void _Engineers_OnCollectionChanged(global::LightSwitchApplication.SearchEngineers s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Engineers_Changed(e);
                }
                private static void _Engineers_OnLoaded(global::LightSwitchApplication.SearchEngineers s, bool succeeded)
                {
                    s.Engineers_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EngineerIssues
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EngineerIssues(int EngineerId) : base("LightSwitchApplication:EngineerIssues")
        {
                this.EngineerId = EngineerId;
            global::LightSwitchApplication.EngineerIssues.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EngineerIssues CreateInstance(int EngineerId)
        {
            return new global::LightSwitchApplication.EngineerIssues(
                        EngineerId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssues_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineer_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Loaded(bool succeeded);

        partial void EngineerId_Changed();

        partial void Issues_SelectionChanged();

        partial void Issues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer Engineer
        {
            get
            {
                return global::LightSwitchApplication.EngineerIssues.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.Engineer);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EngineerId
        {
            get 
            {
                return global::LightSwitchApplication.EngineerIssues.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.EngineerId);
            }
            set
            {
                global::LightSwitchApplication.EngineerIssues.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.EngineerId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Issues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> Issues
        {
            get
            {
                return global::LightSwitchApplication.EngineerIssues.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.Issues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySet, global::LightSwitchApplication.EngineerIssues.DetailsClass.CommandSet, global::LightSwitchApplication.EngineerIssues.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.Engineer;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass>.Entry
                __EngineerIssuesEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass>.Entry(
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeSavingEvent,
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeSavedEvent,
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeClosingEvent,
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeCreated,
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeActivated,
                    global::LightSwitchApplication.EngineerIssues.DetailsClass.__EngineerIssues_InvokeSaveErrorEvent);
            private static void __EngineerIssues_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EngineerIssues s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EngineerIssues_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EngineerIssues_InvokeSavingEvent(global::LightSwitchApplication.EngineerIssues s)
            {
                bool handled = false;
                s.EngineerIssues_Saving(ref handled);
                return handled;
            }
            private static void __EngineerIssues_InvokeSavedEvent(global::LightSwitchApplication.EngineerIssues s)
            {
                s.EngineerIssues_Saved();
            }
            private static bool __EngineerIssues_InvokeClosingEvent(global::LightSwitchApplication.EngineerIssues s)
            {
                bool cancel = false;
                s.EngineerIssues_Closing(ref cancel);
                return cancel;
            }
            private static void __EngineerIssues_InvokeCreated(global::LightSwitchApplication.EngineerIssues s)
            {
                s.EngineerIssues_Created();
            }
            private static void __EngineerIssues_InvokeActivated(global::LightSwitchApplication.EngineerIssues s)
            {
                s.EngineerIssues_Activated();
            }
            private static bool __EngineerIssues_InvokeSaveErrorEvent(global::LightSwitchApplication.EngineerIssues s, global::System.Exception ex)
            {
                bool handled = false;
                s.EngineerIssues_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EngineerIssues.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EngineerIssues.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssuesQuery()
            {
                if (this.Screen.Engineer == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Engineer.Details.Properties.Issues).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        loader,
                        "IssueStatus"),
                    "ClosedByEngineer");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineer;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, int>.Data _EngineerId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issues;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Engineer> Engineer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.Engineer);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, int> EngineerId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.EngineerId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Issue> Issues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties.Issues);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineer",
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Engineer_Stub,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Engineer_Validate,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Engineer_CreateQuery,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Engineer_OnValueChanged,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Engineer_OnLoaded);
                private static void _Engineer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerIssues.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineerIssues.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineer, sf);
                }
                private static void _Engineer_Validate(global::LightSwitchApplication.EngineerIssues s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineer_CreateQuery(global::LightSwitchApplication.EngineerIssues.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Engineer_OnValueChanged(global::LightSwitchApplication.EngineerIssues s)
                {
                    s.Engineer_Changed();
                }

                private static void _Engineer_OnLoaded(global::LightSwitchApplication.EngineerIssues s, bool succeeded)
                {
                    s.Engineer_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, int>.Entry
                    EngineerId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, int>.Entry(
                        "EngineerId",
                        false,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._EngineerId_Stub,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._EngineerId_Validate,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._EngineerId_OnValueChanged);
                private static void _EngineerId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerIssues.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, int>.Data> c, global::LightSwitchApplication.EngineerIssues.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerId, sf);
                }
                private static void _EngineerId_Validate(global::LightSwitchApplication.EngineerIssues s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerId_Validate(r);
                }
                private static void _EngineerId_OnValueChanged(global::LightSwitchApplication.EngineerIssues s)
                {
                    s.EngineerId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issues",
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Issues_Stub,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Issues_Validate,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Issues_CreateQuery,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Issues_SelectionChanged,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Issues_OnCollectionChanged,
                        global::LightSwitchApplication.EngineerIssues.DetailsClass.PropertySetProperties._Issues_OnLoaded);
                private static void _Issues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerIssues.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineerIssues, global::LightSwitchApplication.EngineerIssues.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.EngineerIssues.DetailsClass d, object sf)
                {
                    c(d, ref d._Issues, sf);
                }
                private static void _Issues_Validate(global::LightSwitchApplication.EngineerIssues s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issues_CreateQuery(global::LightSwitchApplication.EngineerIssues.DetailsClass d, object[] args)
                {
                    return d.IssuesQuery();
                }
                private static void _Issues_SelectionChanged(global::LightSwitchApplication.EngineerIssues s)
                {
                    s.Issues_SelectionChanged();
                }
                private static void _Issues_OnCollectionChanged(global::LightSwitchApplication.EngineerIssues s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Issues_Changed(e);
                }
                private static void _Issues_OnLoaded(global::LightSwitchApplication.EngineerIssues s, bool succeeded)
                {
                    s.Issues_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class IssueDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private IssueDetail(int IssueId) : base("LightSwitchApplication:IssueDetail")
        {
                this.IssueId = IssueId;
            global::LightSwitchApplication.IssueDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static IssueDetail CreateInstance(int IssueId)
        {
            return new global::LightSwitchApplication.IssueDetail(
                        IssueId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issue_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Loaded(bool succeeded);

        partial void IssueId_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue Issue
        {
            get
            {
                return global::LightSwitchApplication.IssueDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.Issue);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int IssueId
        {
            get 
            {
                return global::LightSwitchApplication.IssueDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.IssueId);
            }
            set
            {
                global::LightSwitchApplication.IssueDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.IssueId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the DiscardIssueRespChanges screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DiscardIssueRespChanges()
        {
            this.Details.Methods.DiscardIssueRespChanges.CreateInvocation().Execute();
        }
        partial void DiscardIssueRespChanges_CanExecute(ref bool result);
        partial void DiscardIssueRespChanges_Execute();

        /// <summary>
        /// Calls the DeleteIssue screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DeleteIssue()
        {
            this.Details.Methods.DeleteIssue.CreateInvocation().Execute();
        }
        partial void DeleteIssue_CanExecute(ref bool result);
        partial void DeleteIssue_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySet, global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSet, global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.Issue;
                var initializeCommandEntry = global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties.DiscardIssueRespChanges;
                var initializeMethodEntry = global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties.DiscardIssueRespChanges;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry
                __IssueDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeCreated,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeActivated,
                    global::LightSwitchApplication.IssueDetail.DetailsClass.__IssueDetail_InvokeSaveErrorEvent);
            private static void __IssueDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.IssueDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.IssueDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __IssueDetail_InvokeSavingEvent(global::LightSwitchApplication.IssueDetail s)
            {
                bool handled = false;
                s.IssueDetail_Saving(ref handled);
                return handled;
            }
            private static void __IssueDetail_InvokeSavedEvent(global::LightSwitchApplication.IssueDetail s)
            {
                s.IssueDetail_Saved();
            }
            private static bool __IssueDetail_InvokeClosingEvent(global::LightSwitchApplication.IssueDetail s)
            {
                bool cancel = false;
                s.IssueDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __IssueDetail_InvokeCreated(global::LightSwitchApplication.IssueDetail s)
            {
                s.IssueDetail_Created();
            }
            private static void __IssueDetail_InvokeActivated(global::LightSwitchApplication.IssueDetail s)
            {
                s.IssueDetail_Activated();
            }
            private static bool __IssueDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.IssueDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.IssueDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issue;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>.Data _IssueId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data _DiscardIssueRespChangesCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data _DeleteIssueCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data _DiscardIssueRespChangesMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data _DeleteIssueMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue> Issue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.Issue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int> IssueId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties.IssueId);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass> DiscardIssueRespChanges
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties.DiscardIssueRespChanges);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass> DeleteIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties.DeleteIssue);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass> DiscardIssueRespChanges
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties.DiscardIssueRespChanges);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass> DeleteIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties.DeleteIssue);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issue",
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_Validate,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_CreateQuery,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_OnValueChanged,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._Issue_OnLoaded);
                private static void _Issue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Issue, sf);
                }
                private static void _Issue_Validate(global::LightSwitchApplication.IssueDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issue_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issue_CreateQuery(global::LightSwitchApplication.IssueDetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Issue_OnValueChanged(global::LightSwitchApplication.IssueDetail s)
                {
                    s.Issue_Changed();
                }

                private static void _Issue_OnLoaded(global::LightSwitchApplication.IssueDetail s, bool succeeded)
                {
                    s.Issue_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>.Entry
                    IssueId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>.Entry(
                        "IssueId",
                        false,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._IssueId_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._IssueId_Validate,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.PropertySetProperties._IssueId_OnValueChanged);
                private static void _IssueId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueId, sf);
                }
                private static void _IssueId_Validate(global::LightSwitchApplication.IssueDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueId_Validate(r);
                }
                private static void _IssueId_OnValueChanged(global::LightSwitchApplication.IssueDetail s)
                {
                    s.IssueId_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry
                    DiscardIssueRespChanges = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry(
                        "DiscardIssueRespChanges",
                        global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties._DiscardIssueRespChanges_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties._DiscardIssueRespChanges_CreateExecutableObject);
                private static void _DiscardIssueRespChanges_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._DiscardIssueRespChangesCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DiscardIssueRespChanges_CreateExecutableObject(global::LightSwitchApplication.IssueDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueDetail.DetailsClass)d).Methods.DiscardIssueRespChanges.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry
                    DeleteIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry(
                        "DeleteIssue",
                        global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties._DeleteIssue_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.CommandSetProperties._DeleteIssue_CreateExecutableObject);
                private static void _DeleteIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._DeleteIssueCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DeleteIssue_CreateExecutableObject(global::LightSwitchApplication.IssueDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueDetail.DetailsClass)d).Methods.DeleteIssue.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry
                    DiscardIssueRespChanges = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry(
                        "DiscardIssueRespChanges",
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._DiscardIssueRespChanges_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._DiscardIssueRespChanges_CanInvoke,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._DiscardIssueRespChanges_InvokeMethod);
                private static void _DiscardIssueRespChanges_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._DiscardIssueRespChangesMethod, sf);
                }
                private static global::System.Exception _DiscardIssueRespChanges_CanInvoke(global::LightSwitchApplication.IssueDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DiscardIssueRespChanges_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DiscardIssueRespChanges_InvokeMethod(global::LightSwitchApplication.IssueDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DiscardIssueRespChanges_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry
                    DeleteIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Entry(
                        "DeleteIssue",
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._DeleteIssue_Stub,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._DeleteIssue_CanInvoke,
                        global::LightSwitchApplication.IssueDetail.DetailsClass.MethodSetProperties._DeleteIssue_InvokeMethod);
                private static void _DeleteIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDetail, global::LightSwitchApplication.IssueDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._DeleteIssueMethod, sf);
                }
                private static global::System.Exception _DeleteIssue_CanInvoke(global::LightSwitchApplication.IssueDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DeleteIssue_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DeleteIssue_InvokeMethod(global::LightSwitchApplication.IssueDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DeleteIssue_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class IssueDetailManager
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private IssueDetailManager(int IssueId) : base("LightSwitchApplication:IssueDetailManager")
        {
                this.IssueId = IssueId;
            global::LightSwitchApplication.IssueDetailManager.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static IssueDetailManager CreateInstance(int IssueId)
        {
            return new global::LightSwitchApplication.IssueDetailManager(
                        IssueId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetailManager_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetailManager_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetailManager_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetailManager_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetailManager_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetailManager_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDetailManager_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issue_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Loaded(bool succeeded);

        partial void IssueId_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue Issue
        {
            get
            {
                return global::LightSwitchApplication.IssueDetailManager.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties.Issue);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int IssueId
        {
            get 
            {
                return global::LightSwitchApplication.IssueDetailManager.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties.IssueId);
            }
            set
            {
                global::LightSwitchApplication.IssueDetailManager.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties.IssueId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySet, global::LightSwitchApplication.IssueDetailManager.DetailsClass.CommandSet, global::LightSwitchApplication.IssueDetailManager.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties.Issue;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass>.Entry
                __IssueDetailManagerEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass>.Entry(
                    global::LightSwitchApplication.IssueDetailManager.DetailsClass.__IssueDetailManager_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.IssueDetailManager.DetailsClass.__IssueDetailManager_InvokeSavingEvent,
                    global::LightSwitchApplication.IssueDetailManager.DetailsClass.__IssueDetailManager_InvokeSavedEvent,
                    global::LightSwitchApplication.IssueDetailManager.DetailsClass.__IssueDetailManager_InvokeClosingEvent,
                    global::LightSwitchApplication.IssueDetailManager.DetailsClass.__IssueDetailManager_InvokeCreated,
                    global::LightSwitchApplication.IssueDetailManager.DetailsClass.__IssueDetailManager_InvokeActivated,
                    global::LightSwitchApplication.IssueDetailManager.DetailsClass.__IssueDetailManager_InvokeSaveErrorEvent);
            private static void __IssueDetailManager_InvokeInitializeDataWorkspace(global::LightSwitchApplication.IssueDetailManager s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.IssueDetailManager_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __IssueDetailManager_InvokeSavingEvent(global::LightSwitchApplication.IssueDetailManager s)
            {
                bool handled = false;
                s.IssueDetailManager_Saving(ref handled);
                return handled;
            }
            private static void __IssueDetailManager_InvokeSavedEvent(global::LightSwitchApplication.IssueDetailManager s)
            {
                s.IssueDetailManager_Saved();
            }
            private static bool __IssueDetailManager_InvokeClosingEvent(global::LightSwitchApplication.IssueDetailManager s)
            {
                bool cancel = false;
                s.IssueDetailManager_Closing(ref cancel);
                return cancel;
            }
            private static void __IssueDetailManager_InvokeCreated(global::LightSwitchApplication.IssueDetailManager s)
            {
                s.IssueDetailManager_Created();
            }
            private static void __IssueDetailManager_InvokeActivated(global::LightSwitchApplication.IssueDetailManager s)
            {
                s.IssueDetailManager_Activated();
            }
            private static bool __IssueDetailManager_InvokeSaveErrorEvent(global::LightSwitchApplication.IssueDetailManager s, global::System.Exception ex)
            {
                bool handled = false;
                s.IssueDetailManager_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.IssueDetailManager.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.IssueDetailManager.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issue;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, int>.Data _IssueId;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, global::LightSwitchApplication.Issue> Issue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties.Issue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, int> IssueId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties.IssueId);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issue",
                        global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties._Issue_Stub,
                        global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties._Issue_Validate,
                        global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties._Issue_CreateQuery,
                        global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties._Issue_OnValueChanged,
                        global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties._Issue_OnLoaded);
                private static void _Issue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetailManager.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.IssueDetailManager.DetailsClass d, object sf)
                {
                    c(d, ref d._Issue, sf);
                }
                private static void _Issue_Validate(global::LightSwitchApplication.IssueDetailManager s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issue_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issue_CreateQuery(global::LightSwitchApplication.IssueDetailManager.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Issue_OnValueChanged(global::LightSwitchApplication.IssueDetailManager s)
                {
                    s.Issue_Changed();
                }

                private static void _Issue_OnLoaded(global::LightSwitchApplication.IssueDetailManager s, bool succeeded)
                {
                    s.Issue_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, int>.Entry
                    IssueId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, int>.Entry(
                        "IssueId",
                        false,
                        global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties._IssueId_Stub,
                        global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties._IssueId_Validate,
                        global::LightSwitchApplication.IssueDetailManager.DetailsClass.PropertySetProperties._IssueId_OnValueChanged);
                private static void _IssueId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDetailManager.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDetailManager, global::LightSwitchApplication.IssueDetailManager.DetailsClass, int>.Data> c, global::LightSwitchApplication.IssueDetailManager.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueId, sf);
                }
                private static void _IssueId_Validate(global::LightSwitchApplication.IssueDetailManager s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueId_Validate(r);
                }
                private static void _IssueId_OnValueChanged(global::LightSwitchApplication.IssueDetailManager s)
                {
                    s.IssueId_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EngineerDashboard
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EngineerDashboard(int EngineerId) : base("LightSwitchApplication:EngineerDashboard")
        {
                this.EngineerId = EngineerId;
            global::LightSwitchApplication.EngineerDashboard.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EngineerDashboard CreateInstance(int EngineerId)
        {
            return new global::LightSwitchApplication.EngineerDashboard(
                        EngineerId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerDashboard_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineer_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Loaded(bool succeeded);

        partial void EngineerId_Changed();

        partial void IssuesOverdueLabel_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Engineer Engineer
        {
            get
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Engineer);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineer_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EngineerId
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.EngineerId);
            }
            set
            {
                global::LightSwitchApplication.EngineerDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.EngineerId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IssuesOverdueLabel
        {
            get 
            {
                return global::LightSwitchApplication.EngineerDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.IssuesOverdueLabel);
            }
            set
            {
                global::LightSwitchApplication.EngineerDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.IssuesOverdueLabel, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesOverdueLabel_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the RefreshAllScreens screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RefreshAllScreens()
        {
            this.Details.Methods.RefreshAllScreens.CreateInvocation().Execute();
        }
        partial void RefreshAllScreens_CanExecute(ref bool result);
        partial void RefreshAllScreens_Execute();

        /// <summary>
        /// Calls the OpenIssueSearchScreen screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenIssueSearchScreen()
        {
            this.Details.Methods.OpenIssueSearchScreen.CreateInvocation().Execute();
        }
        partial void OpenIssueSearchScreen_CanExecute(ref bool result);
        partial void OpenIssueSearchScreen_Execute();

        /// <summary>
        /// Calls the OpenNewIssueScreen screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenNewIssueScreen()
        {
            this.Details.Methods.OpenNewIssueScreen.CreateInvocation().Execute();
        }
        partial void OpenNewIssueScreen_CanExecute(ref bool result);
        partial void OpenNewIssueScreen_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySet, global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSet, global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Engineer;
                var initializeCommandEntry = global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.RefreshAllScreens;
                var initializeMethodEntry = global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.RefreshAllScreens;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                __EngineerDashboardEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeSavingEvent,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeSavedEvent,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeClosingEvent,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeCreated,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeActivated,
                    global::LightSwitchApplication.EngineerDashboard.DetailsClass.__EngineerDashboard_InvokeSaveErrorEvent);
            private static void __EngineerDashboard_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EngineerDashboard s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EngineerDashboard_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EngineerDashboard_InvokeSavingEvent(global::LightSwitchApplication.EngineerDashboard s)
            {
                bool handled = false;
                s.EngineerDashboard_Saving(ref handled);
                return handled;
            }
            private static void __EngineerDashboard_InvokeSavedEvent(global::LightSwitchApplication.EngineerDashboard s)
            {
                s.EngineerDashboard_Saved();
            }
            private static bool __EngineerDashboard_InvokeClosingEvent(global::LightSwitchApplication.EngineerDashboard s)
            {
                bool cancel = false;
                s.EngineerDashboard_Closing(ref cancel);
                return cancel;
            }
            private static void __EngineerDashboard_InvokeCreated(global::LightSwitchApplication.EngineerDashboard s)
            {
                s.EngineerDashboard_Created();
            }
            private static void __EngineerDashboard_InvokeActivated(global::LightSwitchApplication.EngineerDashboard s)
            {
                s.EngineerDashboard_Activated();
            }
            private static bool __EngineerDashboard_InvokeSaveErrorEvent(global::LightSwitchApplication.EngineerDashboard s, global::System.Exception ex)
            {
                bool handled = false;
                s.EngineerDashboard_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineer;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>.Data _EngineerId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data _IssuesOverdueLabel;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _RefreshAllScreensCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _OpenIssueSearchScreenCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _OpenNewIssueScreenCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _RefreshAllScreensMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _OpenIssueSearchScreenMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data _OpenNewIssueScreenMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer> Engineer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.Engineer);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int> EngineerId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.EngineerId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string> IssuesOverdueLabel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties.IssuesOverdueLabel);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> RefreshAllScreens
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.RefreshAllScreens);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> OpenIssueSearchScreen
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.OpenIssueSearchScreen);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> OpenNewIssueScreen
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties.OpenNewIssueScreen);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> RefreshAllScreens
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.RefreshAllScreens);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> OpenIssueSearchScreen
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.OpenIssueSearchScreen);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass> OpenNewIssueScreen
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties.OpenNewIssueScreen);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineer",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_CreateQuery,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_OnValueChanged,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._Engineer_OnLoaded);
                private static void _Engineer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineer, sf);
                }
                private static void _Engineer_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineer_CreateQuery(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Engineer_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.Engineer_Changed();
                }

                private static void _Engineer_OnLoaded(global::LightSwitchApplication.EngineerDashboard s, bool succeeded)
                {
                    s.Engineer_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>.Entry
                    EngineerId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>.Entry(
                        "EngineerId",
                        false,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._EngineerId_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._EngineerId_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._EngineerId_OnValueChanged);
                private static void _EngineerId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, int>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerId, sf);
                }
                private static void _EngineerId_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerId_Validate(r);
                }
                private static void _EngineerId_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.EngineerId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry
                    IssuesOverdueLabel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Entry(
                        "IssuesOverdueLabel",
                        false,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._IssuesOverdueLabel_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._IssuesOverdueLabel_Validate,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.PropertySetProperties._IssuesOverdueLabel_OnValueChanged);
                private static void _IssuesOverdueLabel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._IssuesOverdueLabel, sf);
                }
                private static void _IssuesOverdueLabel_Validate(global::LightSwitchApplication.EngineerDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssuesOverdueLabel_Validate(r);
                }
                private static void _IssuesOverdueLabel_OnValueChanged(global::LightSwitchApplication.EngineerDashboard s)
                {
                    s.IssuesOverdueLabel_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    RefreshAllScreens = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "RefreshAllScreens",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._RefreshAllScreens_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._RefreshAllScreens_CreateExecutableObject);
                private static void _RefreshAllScreens_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._RefreshAllScreensCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _RefreshAllScreens_CreateExecutableObject(global::LightSwitchApplication.EngineerDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDashboard.DetailsClass)d).Methods.RefreshAllScreens.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    OpenIssueSearchScreen = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "OpenIssueSearchScreen",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._OpenIssueSearchScreen_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._OpenIssueSearchScreen_CreateExecutableObject);
                private static void _OpenIssueSearchScreen_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIssueSearchScreenCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenIssueSearchScreen_CreateExecutableObject(global::LightSwitchApplication.EngineerDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDashboard.DetailsClass)d).Methods.OpenIssueSearchScreen.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    OpenNewIssueScreen = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "OpenNewIssueScreen",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._OpenNewIssueScreen_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.CommandSetProperties._OpenNewIssueScreen_CreateExecutableObject);
                private static void _OpenNewIssueScreen_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenNewIssueScreenCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenNewIssueScreen_CreateExecutableObject(global::LightSwitchApplication.EngineerDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineerDashboard.DetailsClass)d).Methods.OpenNewIssueScreen.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    RefreshAllScreens = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "RefreshAllScreens",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._RefreshAllScreens_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._RefreshAllScreens_CanInvoke,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._RefreshAllScreens_InvokeMethod);
                private static void _RefreshAllScreens_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._RefreshAllScreensMethod, sf);
                }
                private static global::System.Exception _RefreshAllScreens_CanInvoke(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.RefreshAllScreens_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _RefreshAllScreens_InvokeMethod(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.RefreshAllScreens_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    OpenIssueSearchScreen = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "OpenIssueSearchScreen",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenIssueSearchScreen_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenIssueSearchScreen_CanInvoke,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenIssueSearchScreen_InvokeMethod);
                private static void _OpenIssueSearchScreen_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIssueSearchScreenMethod, sf);
                }
                private static global::System.Exception _OpenIssueSearchScreen_CanInvoke(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenIssueSearchScreen_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenIssueSearchScreen_InvokeMethod(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenIssueSearchScreen_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry
                    OpenNewIssueScreen = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Entry(
                        "OpenNewIssueScreen",
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenNewIssueScreen_Stub,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenNewIssueScreen_CanInvoke,
                        global::LightSwitchApplication.EngineerDashboard.DetailsClass.MethodSetProperties._OpenNewIssueScreen_InvokeMethod);
                private static void _OpenNewIssueScreen_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineerDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineerDashboard, global::LightSwitchApplication.EngineerDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.EngineerDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenNewIssueScreenMethod, sf);
                }
                private static global::System.Exception _OpenNewIssueScreen_CanInvoke(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenNewIssueScreen_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenNewIssueScreen_InvokeMethod(global::LightSwitchApplication.EngineerDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenNewIssueScreen_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EngineersManagerGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EngineersManagerGrid() : base("LightSwitchApplication:EngineersManagerGrid")
        {
            global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EngineersManagerGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EngineersManagerGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersManagerGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineers_SelectionChanged();

        partial void Engineers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Loaded(bool succeeded);

        partial void EngineerIssueReportURL_Changed();

        /// <summary>
        /// Gets the Engineers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Engineer> Engineers
        {
            get
            {
                return global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties.Engineers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EngineerIssueReportURL
        {
            get 
            {
                return global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties.EngineerIssueReportURL);
            }
            set
            {
                global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.SetValue(this, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties.EngineerIssueReportURL, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerIssueReportURL_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the ViewDashboard screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ViewDashboard()
        {
            this.Details.Methods.ViewDashboard.CreateInvocation().Execute();
        }
        partial void ViewDashboard_CanExecute(ref bool result);
        partial void ViewDashboard_Execute();

        /// <summary>
        /// Calls the OpenEngineerIssueReport screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenEngineerIssueReport()
        {
            this.Details.Methods.OpenEngineerIssueReport.CreateInvocation().Execute();
        }
        partial void OpenEngineerIssueReport_CanExecute(ref bool result);
        partial void OpenEngineerIssueReport_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties.Engineers;
                var initializeCommandEntry = global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSetProperties.ViewDashboard;
                var initializeMethodEntry = global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties.ViewDashboard;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry
                __EngineersManagerGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeCreated,
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeActivated,
                    global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.__EngineersManagerGrid_InvokeSaveErrorEvent);
            private static void __EngineersManagerGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EngineersManagerGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EngineersManagerGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EngineersManagerGrid_InvokeSavingEvent(global::LightSwitchApplication.EngineersManagerGrid s)
            {
                bool handled = false;
                s.EngineersManagerGrid_Saving(ref handled);
                return handled;
            }
            private static void __EngineersManagerGrid_InvokeSavedEvent(global::LightSwitchApplication.EngineersManagerGrid s)
            {
                s.EngineersManagerGrid_Saved();
            }
            private static bool __EngineersManagerGrid_InvokeClosingEvent(global::LightSwitchApplication.EngineersManagerGrid s)
            {
                bool cancel = false;
                s.EngineersManagerGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EngineersManagerGrid_InvokeCreated(global::LightSwitchApplication.EngineersManagerGrid s)
            {
                s.EngineersManagerGrid_Created();
            }
            private static void __EngineersManagerGrid_InvokeActivated(global::LightSwitchApplication.EngineersManagerGrid s)
            {
                s.EngineersManagerGrid_Activated();
            }
            private static bool __EngineersManagerGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EngineersManagerGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EngineersManagerGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EngineersQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Engineers;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineers;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, string>.Data _EngineerIssueReportURL;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data _ViewDashboardCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data _OpenEngineerIssueReportCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data _ViewDashboardMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data _OpenEngineerIssueReportMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer> Engineers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties.Engineers);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, string> EngineerIssueReportURL
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties.EngineerIssueReportURL);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass> ViewDashboard
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSetProperties.ViewDashboard);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass> OpenEngineerIssueReport
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSetProperties.OpenEngineerIssueReport);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass> ViewDashboard
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties.ViewDashboard);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass> OpenEngineerIssueReport
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties.OpenEngineerIssueReport);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineers",
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._Engineers_Stub,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._Engineers_Validate,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._Engineers_CreateQuery,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._Engineers_SelectionChanged,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._Engineers_OnCollectionChanged,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._Engineers_OnLoaded);
                private static void _Engineers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineers, sf);
                }
                private static void _Engineers_Validate(global::LightSwitchApplication.EngineersManagerGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineers_CreateQuery(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, object[] args)
                {
                    return d.EngineersQuery();
                }
                private static void _Engineers_SelectionChanged(global::LightSwitchApplication.EngineersManagerGrid s)
                {
                    s.Engineers_SelectionChanged();
                }
                private static void _Engineers_OnCollectionChanged(global::LightSwitchApplication.EngineersManagerGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Engineers_Changed(e);
                }
                private static void _Engineers_OnLoaded(global::LightSwitchApplication.EngineersManagerGrid s, bool succeeded)
                {
                    s.Engineers_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, string>.Entry
                    EngineerIssueReportURL = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, string>.Entry(
                        "EngineerIssueReportURL",
                        false,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._EngineerIssueReportURL_Stub,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._EngineerIssueReportURL_Validate,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.PropertySetProperties._EngineerIssueReportURL_OnValueChanged);
                private static void _EngineerIssueReportURL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, string>.Data> c, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._EngineerIssueReportURL, sf);
                }
                private static void _EngineerIssueReportURL_Validate(global::LightSwitchApplication.EngineersManagerGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EngineerIssueReportURL_Validate(r);
                }
                private static void _EngineerIssueReportURL_OnValueChanged(global::LightSwitchApplication.EngineersManagerGrid s)
                {
                    s.EngineerIssueReportURL_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry
                    ViewDashboard = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry(
                        "ViewDashboard",
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSetProperties._ViewDashboard_Stub,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSetProperties._ViewDashboard_CreateExecutableObject);
                private static void _ViewDashboard_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewDashboardCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ViewDashboard_CreateExecutableObject(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineersManagerGrid.DetailsClass)d).Methods.ViewDashboard.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry
                    OpenEngineerIssueReport = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry(
                        "OpenEngineerIssueReport",
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSetProperties._OpenEngineerIssueReport_Stub,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.CommandSetProperties._OpenEngineerIssueReport_CreateExecutableObject);
                private static void _OpenEngineerIssueReport_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenEngineerIssueReportCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenEngineerIssueReport_CreateExecutableObject(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EngineersManagerGrid.DetailsClass)d).Methods.OpenEngineerIssueReport.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry
                    ViewDashboard = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry(
                        "ViewDashboard",
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties._ViewDashboard_Stub,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties._ViewDashboard_CanInvoke,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties._ViewDashboard_InvokeMethod);
                private static void _ViewDashboard_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewDashboardMethod, sf);
                }
                private static global::System.Exception _ViewDashboard_CanInvoke(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ViewDashboard_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ViewDashboard_InvokeMethod(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ViewDashboard_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry
                    OpenEngineerIssueReport = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Entry(
                        "OpenEngineerIssueReport",
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties._OpenEngineerIssueReport_Stub,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties._OpenEngineerIssueReport_CanInvoke,
                        global::LightSwitchApplication.EngineersManagerGrid.DetailsClass.MethodSetProperties._OpenEngineerIssueReport_InvokeMethod);
                private static void _OpenEngineerIssueReport_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineersManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EngineersManagerGrid, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass>.Data> c, global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenEngineerIssueReportMethod, sf);
                }
                private static global::System.Exception _OpenEngineerIssueReport_CanInvoke(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenEngineerIssueReport_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenEngineerIssueReport_InvokeMethod(global::LightSwitchApplication.EngineersManagerGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenEngineerIssueReport_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class CreateNewIssueResponse
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private CreateNewIssueResponse() : base("LightSwitchApplication:CreateNewIssueResponse")
        {
            global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static CreateNewIssueResponse CreateInstance()
        {
            return new global::LightSwitchApplication.CreateNewIssueResponse(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueResponse_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void IssueResponseProperty_Changed();

        partial void ResponseTextCount_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.IssueResponse IssueResponseProperty
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.IssueResponseProperty);
            }
            set
            {
                global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.IssueResponseProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponseProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ResponseTextCount
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.ResponseTextCount);
            }
            set
            {
                global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.ResponseTextCount, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ResponseTextCount_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySet, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.CommandSet, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.IssueResponseProperty;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass>.Entry
                __CreateNewIssueResponseEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass>.Entry(
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeSavingEvent,
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeSavedEvent,
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeClosingEvent,
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeCreated,
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeActivated,
                    global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.__CreateNewIssueResponse_InvokeSaveErrorEvent);
            private static void __CreateNewIssueResponse_InvokeInitializeDataWorkspace(global::LightSwitchApplication.CreateNewIssueResponse s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.CreateNewIssueResponse_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __CreateNewIssueResponse_InvokeSavingEvent(global::LightSwitchApplication.CreateNewIssueResponse s)
            {
                bool handled = false;
                s.CreateNewIssueResponse_Saving(ref handled);
                return handled;
            }
            private static void __CreateNewIssueResponse_InvokeSavedEvent(global::LightSwitchApplication.CreateNewIssueResponse s)
            {
                s.CreateNewIssueResponse_Saved();
            }
            private static bool __CreateNewIssueResponse_InvokeClosingEvent(global::LightSwitchApplication.CreateNewIssueResponse s)
            {
                bool cancel = false;
                s.CreateNewIssueResponse_Closing(ref cancel);
                return cancel;
            }
            private static void __CreateNewIssueResponse_InvokeCreated(global::LightSwitchApplication.CreateNewIssueResponse s)
            {
                s.CreateNewIssueResponse_Created();
            }
            private static void __CreateNewIssueResponse_InvokeActivated(global::LightSwitchApplication.CreateNewIssueResponse s)
            {
                s.CreateNewIssueResponse_Activated();
            }
            private static bool __CreateNewIssueResponse_InvokeSaveErrorEvent(global::LightSwitchApplication.CreateNewIssueResponse s, global::System.Exception ex)
            {
                bool handled = false;
                s.CreateNewIssueResponse_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.IssueResponse>.Data _IssueResponseProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>.Data _ResponseTextCount;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.IssueResponse> IssueResponseProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.IssueResponse>)base.GetItem(global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.IssueResponseProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>> ResponseTextCount
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>)base.GetItem(global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties.ResponseTextCount);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.IssueResponse>.Entry
                    IssueResponseProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.IssueResponse>.Entry(
                        "IssueResponseProperty",
                        false,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._IssueResponseProperty_Stub,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._IssueResponseProperty_Validate,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._IssueResponseProperty_OnValueChanged);
                private static void _IssueResponseProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::LightSwitchApplication.IssueResponse>.Data> c, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueResponseProperty, sf);
                }
                private static void _IssueResponseProperty_Validate(global::LightSwitchApplication.CreateNewIssueResponse s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueResponseProperty_Validate(r);
                }
                private static void _IssueResponseProperty_OnValueChanged(global::LightSwitchApplication.CreateNewIssueResponse s)
                {
                    s.IssueResponseProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>.Entry
                    ResponseTextCount = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ResponseTextCount",
                        false,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._ResponseTextCount_Stub,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._ResponseTextCount_Validate,
                        global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass.PropertySetProperties._ResponseTextCount_OnValueChanged);
                private static void _ResponseTextCount_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueResponse, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.CreateNewIssueResponse.DetailsClass d, object sf)
                {
                    c(d, ref d._ResponseTextCount, sf);
                }
                private static void _ResponseTextCount_Validate(global::LightSwitchApplication.CreateNewIssueResponse s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ResponseTextCount_Validate(r);
                }
                private static void _ResponseTextCount_OnValueChanged(global::LightSwitchApplication.CreateNewIssueResponse s)
                {
                    s.ResponseTextCount_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class AddEditIssue
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private AddEditIssue(global::System.Nullable<int> IssueId) : base("LightSwitchApplication:AddEditIssue")
        {
                this.IssueId = IssueId;
            global::LightSwitchApplication.AddEditIssue.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static AddEditIssue CreateInstance(global::System.Nullable<int> IssueId)
        {
            return new global::LightSwitchApplication.AddEditIssue(
                        IssueId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddEditIssue_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issue_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Loaded(bool succeeded);

        partial void IssueId_Changed();

        partial void IssueProperty_Changed();

        partial void IssueResponses_SelectionChanged();

        partial void IssueResponses_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponses_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue Issue
        {
            get
            {
                return global::LightSwitchApplication.AddEditIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.Issue);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IssueId
        {
            get 
            {
                return global::LightSwitchApplication.AddEditIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueId);
            }
            set
            {
                global::LightSwitchApplication.AddEditIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue IssueProperty
        {
            get 
            {
                return global::LightSwitchApplication.AddEditIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueProperty);
            }
            set
            {
                global::LightSwitchApplication.AddEditIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IssueResponses visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.IssueResponse> IssueResponses
        {
            get
            {
                return global::LightSwitchApplication.AddEditIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueResponses);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueResponses_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the OpenPDFReport screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenPDFReport()
        {
            this.Details.Methods.OpenPDFReport.CreateInvocation().Execute();
        }
        partial void OpenPDFReport_CanExecute(ref bool result);
        partial void OpenPDFReport_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySet, global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSet, global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.Issue;
                var initializeCommandEntry = global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSetProperties.OpenPDFReport;
                var initializeMethodEntry = global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties.OpenPDFReport;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry
                __AddEditIssueEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry(
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeSavingEvent,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeSavedEvent,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeClosingEvent,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeCreated,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeActivated,
                    global::LightSwitchApplication.AddEditIssue.DetailsClass.__AddEditIssue_InvokeSaveErrorEvent);
            private static void __AddEditIssue_InvokeInitializeDataWorkspace(global::LightSwitchApplication.AddEditIssue s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.AddEditIssue_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __AddEditIssue_InvokeSavingEvent(global::LightSwitchApplication.AddEditIssue s)
            {
                bool handled = false;
                s.AddEditIssue_Saving(ref handled);
                return handled;
            }
            private static void __AddEditIssue_InvokeSavedEvent(global::LightSwitchApplication.AddEditIssue s)
            {
                s.AddEditIssue_Saved();
            }
            private static bool __AddEditIssue_InvokeClosingEvent(global::LightSwitchApplication.AddEditIssue s)
            {
                bool cancel = false;
                s.AddEditIssue_Closing(ref cancel);
                return cancel;
            }
            private static void __AddEditIssue_InvokeCreated(global::LightSwitchApplication.AddEditIssue s)
            {
                s.AddEditIssue_Created();
            }
            private static void __AddEditIssue_InvokeActivated(global::LightSwitchApplication.AddEditIssue s)
            {
                s.AddEditIssue_Activated();
            }
            private static bool __AddEditIssue_InvokeSaveErrorEvent(global::LightSwitchApplication.AddEditIssue s, global::System.Exception ex)
            {
                bool handled = false;
                s.AddEditIssue_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssueResponsesQuery()
            {
                if (this.Screen.Issue == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.IssueResponse> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.IssueResponse>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Issue.Details.Properties.IssueResponses).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Issue");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issue;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>.Data _IssueId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data _IssueProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueResponse>.Data _IssueResponses;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Data _OpenPDFReportCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Data _OpenPDFReportMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue> Issue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.Issue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>> IssueId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue> IssueProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueResponse> IssueResponses
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueResponse>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties.IssueResponses);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass> OpenPDFReport
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSetProperties.OpenPDFReport);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass> OpenPDFReport
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>)base.GetItem(global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties.OpenPDFReport);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issue",
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_Validate,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_CreateQuery,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_OnValueChanged,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._Issue_OnLoaded);
                private static void _Issue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._Issue, sf);
                }
                private static void _Issue_Validate(global::LightSwitchApplication.AddEditIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issue_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issue_CreateQuery(global::LightSwitchApplication.AddEditIssue.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Issue_OnValueChanged(global::LightSwitchApplication.AddEditIssue s)
                {
                    s.Issue_Changed();
                }

                private static void _Issue_OnLoaded(global::LightSwitchApplication.AddEditIssue s, bool succeeded)
                {
                    s.Issue_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>.Entry
                    IssueId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IssueId",
                        false,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueId_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueId_Validate,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueId_OnValueChanged);
                private static void _IssueId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueId, sf);
                }
                private static void _IssueId_Validate(global::LightSwitchApplication.AddEditIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueId_Validate(r);
                }
                private static void _IssueId_OnValueChanged(global::LightSwitchApplication.AddEditIssue s)
                {
                    s.IssueId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    IssueProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "IssueProperty",
                        false,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueProperty_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueProperty_Validate,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueProperty_OnValueChanged);
                private static void _IssueProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueProperty, sf);
                }
                private static void _IssueProperty_Validate(global::LightSwitchApplication.AddEditIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueProperty_Validate(r);
                }
                private static void _IssueProperty_OnValueChanged(global::LightSwitchApplication.AddEditIssue s)
                {
                    s.IssueProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueResponse>.Entry
                    IssueResponses = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueResponse>.Entry(
                        "IssueResponses",
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueResponses_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueResponses_Validate,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueResponses_CreateQuery,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueResponses_SelectionChanged,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueResponses_OnCollectionChanged,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.PropertySetProperties._IssueResponses_OnLoaded);
                private static void _IssueResponses_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass, global::LightSwitchApplication.IssueResponse>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueResponses, sf);
                }
                private static void _IssueResponses_Validate(global::LightSwitchApplication.AddEditIssue s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueResponses_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IssueResponses_CreateQuery(global::LightSwitchApplication.AddEditIssue.DetailsClass d, object[] args)
                {
                    return d.IssueResponsesQuery();
                }
                private static void _IssueResponses_SelectionChanged(global::LightSwitchApplication.AddEditIssue s)
                {
                    s.IssueResponses_SelectionChanged();
                }
                private static void _IssueResponses_OnCollectionChanged(global::LightSwitchApplication.AddEditIssue s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IssueResponses_Changed(e);
                }
                private static void _IssueResponses_OnLoaded(global::LightSwitchApplication.AddEditIssue s, bool succeeded)
                {
                    s.IssueResponses_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry
                    OpenPDFReport = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry(
                        "OpenPDFReport",
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSetProperties._OpenPDFReport_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.CommandSetProperties._OpenPDFReport_CreateExecutableObject);
                private static void _OpenPDFReport_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenPDFReportCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenPDFReport_CreateExecutableObject(global::LightSwitchApplication.AddEditIssue.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.AddEditIssue.DetailsClass)d).Methods.OpenPDFReport.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry
                    OpenPDFReport = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Entry(
                        "OpenPDFReport",
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties._OpenPDFReport_Stub,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties._OpenPDFReport_CanInvoke,
                        global::LightSwitchApplication.AddEditIssue.DetailsClass.MethodSetProperties._OpenPDFReport_InvokeMethod);
                private static void _OpenPDFReport_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddEditIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddEditIssue, global::LightSwitchApplication.AddEditIssue.DetailsClass>.Data> c, global::LightSwitchApplication.AddEditIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenPDFReportMethod, sf);
                }
                private static global::System.Exception _OpenPDFReport_CanInvoke(global::LightSwitchApplication.AddEditIssue.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenPDFReport_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenPDFReport_InvokeMethod(global::LightSwitchApplication.AddEditIssue.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenPDFReport_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class IssuesManagerGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private IssuesManagerGrid() : base("LightSwitchApplication:IssuesManagerGrid")
        {
            global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static IssuesManagerGrid CreateInstance()
        {
            return new global::LightSwitchApplication.IssuesManagerGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesManagerGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesManagerGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesManagerGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesManagerGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesManagerGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesManagerGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesManagerGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Issues_SelectionChanged();

        partial void Issues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Loaded(bool succeeded);

        partial void ReportProperty_Changed();

        partial void ChartReportURL_Changed();

        partial void ReportProperty2_Changed();

        partial void ChartReportURL2_Changed();

        /// <summary>
        /// Gets the Issues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> Issues
        {
            get
            {
                return global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties.Issues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ReportProperty
        {
            get 
            {
                return global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties.ReportProperty);
            }
            set
            {
                global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.SetValue(this, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties.ReportProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ChartReportURL
        {
            get 
            {
                return global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties.ChartReportURL);
            }
            set
            {
                global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.SetValue(this, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties.ChartReportURL, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChartReportURL_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ReportProperty2
        {
            get 
            {
                return global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties.ReportProperty2);
            }
            set
            {
                global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.SetValue(this, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties.ReportProperty2, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportProperty2_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ChartReportURL2
        {
            get 
            {
                return global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties.ChartReportURL2);
            }
            set
            {
                global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.SetValue(this, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties.ChartReportURL2, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChartReportURL2_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the CancelSelectedIssues screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelSelectedIssues()
        {
            this.Details.Methods.CancelSelectedIssues.CreateInvocation().Execute();
        }
        partial void CancelSelectedIssues_CanExecute(ref bool result);
        partial void CancelSelectedIssues_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySet, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.CommandSet, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties.Issues;
                var initializeCommandEntry = global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.CommandSetProperties.CancelSelectedIssues;
                var initializeMethodEntry = global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.MethodSetProperties.CancelSelectedIssues;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Entry
                __IssuesManagerGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.__IssuesManagerGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.__IssuesManagerGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.__IssuesManagerGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.__IssuesManagerGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.__IssuesManagerGrid_InvokeCreated,
                    global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.__IssuesManagerGrid_InvokeActivated,
                    global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.__IssuesManagerGrid_InvokeSaveErrorEvent);
            private static void __IssuesManagerGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.IssuesManagerGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.IssuesManagerGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __IssuesManagerGrid_InvokeSavingEvent(global::LightSwitchApplication.IssuesManagerGrid s)
            {
                bool handled = false;
                s.IssuesManagerGrid_Saving(ref handled);
                return handled;
            }
            private static void __IssuesManagerGrid_InvokeSavedEvent(global::LightSwitchApplication.IssuesManagerGrid s)
            {
                s.IssuesManagerGrid_Saved();
            }
            private static bool __IssuesManagerGrid_InvokeClosingEvent(global::LightSwitchApplication.IssuesManagerGrid s)
            {
                bool cancel = false;
                s.IssuesManagerGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __IssuesManagerGrid_InvokeCreated(global::LightSwitchApplication.IssuesManagerGrid s)
            {
                s.IssuesManagerGrid_Created();
            }
            private static void __IssuesManagerGrid_InvokeActivated(global::LightSwitchApplication.IssuesManagerGrid s)
            {
                s.IssuesManagerGrid_Activated();
            }
            private static bool __IssuesManagerGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.IssuesManagerGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.IssuesManagerGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IssuesQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                    this.Screen.DataWorkspace.ApplicationData.Issues,
                                    "IssueStatus"),
                                "AssignedTo"),
                            "ClosedByEngineer"),
                        "Priority"),
                    "User");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issues;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>.Data _ReportProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>.Data _ChartReportURL;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>.Data _ReportProperty2;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>.Data _ChartReportURL2;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Data _CancelSelectedIssuesCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Data _CancelSelectedIssuesMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::LightSwitchApplication.Issue> Issues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties.Issues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string> ReportProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties.ReportProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string> ChartReportURL
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties.ChartReportURL);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string> ReportProperty2
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties.ReportProperty2);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string> ChartReportURL2
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties.ChartReportURL2);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass> CancelSelectedIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.CommandSetProperties.CancelSelectedIssues);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass> CancelSelectedIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.MethodSetProperties.CancelSelectedIssues);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issues",
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._Issues_Stub,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._Issues_Validate,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._Issues_CreateQuery,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._Issues_SelectionChanged,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._Issues_OnCollectionChanged,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._Issues_OnLoaded);
                private static void _Issues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Issues, sf);
                }
                private static void _Issues_Validate(global::LightSwitchApplication.IssuesManagerGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Issues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Issues_CreateQuery(global::LightSwitchApplication.IssuesManagerGrid.DetailsClass d, object[] args)
                {
                    return d.IssuesQuery();
                }
                private static void _Issues_SelectionChanged(global::LightSwitchApplication.IssuesManagerGrid s)
                {
                    s.Issues_SelectionChanged();
                }
                private static void _Issues_OnCollectionChanged(global::LightSwitchApplication.IssuesManagerGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Issues_Changed(e);
                }
                private static void _Issues_OnLoaded(global::LightSwitchApplication.IssuesManagerGrid s, bool succeeded)
                {
                    s.Issues_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>.Entry
                    ReportProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>.Entry(
                        "ReportProperty",
                        false,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._ReportProperty_Stub,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._ReportProperty_Validate,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._ReportProperty_OnValueChanged);
                private static void _ReportProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>.Data> c, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._ReportProperty, sf);
                }
                private static void _ReportProperty_Validate(global::LightSwitchApplication.IssuesManagerGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ReportProperty_Validate(r);
                }
                private static void _ReportProperty_OnValueChanged(global::LightSwitchApplication.IssuesManagerGrid s)
                {
                    s.ReportProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>.Entry
                    ChartReportURL = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>.Entry(
                        "ChartReportURL",
                        false,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._ChartReportURL_Stub,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._ChartReportURL_Validate,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._ChartReportURL_OnValueChanged);
                private static void _ChartReportURL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>.Data> c, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._ChartReportURL, sf);
                }
                private static void _ChartReportURL_Validate(global::LightSwitchApplication.IssuesManagerGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ChartReportURL_Validate(r);
                }
                private static void _ChartReportURL_OnValueChanged(global::LightSwitchApplication.IssuesManagerGrid s)
                {
                    s.ChartReportURL_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>.Entry
                    ReportProperty2 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>.Entry(
                        "ReportProperty2",
                        false,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._ReportProperty2_Stub,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._ReportProperty2_Validate,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._ReportProperty2_OnValueChanged);
                private static void _ReportProperty2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>.Data> c, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._ReportProperty2, sf);
                }
                private static void _ReportProperty2_Validate(global::LightSwitchApplication.IssuesManagerGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ReportProperty2_Validate(r);
                }
                private static void _ReportProperty2_OnValueChanged(global::LightSwitchApplication.IssuesManagerGrid s)
                {
                    s.ReportProperty2_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>.Entry
                    ChartReportURL2 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>.Entry(
                        "ChartReportURL2",
                        false,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._ChartReportURL2_Stub,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._ChartReportURL2_Validate,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.PropertySetProperties._ChartReportURL2_OnValueChanged);
                private static void _ChartReportURL2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, string>.Data> c, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._ChartReportURL2, sf);
                }
                private static void _ChartReportURL2_Validate(global::LightSwitchApplication.IssuesManagerGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ChartReportURL2_Validate(r);
                }
                private static void _ChartReportURL2_OnValueChanged(global::LightSwitchApplication.IssuesManagerGrid s)
                {
                    s.ChartReportURL2_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Entry
                    CancelSelectedIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Entry(
                        "CancelSelectedIssues",
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.CommandSetProperties._CancelSelectedIssues_Stub,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.CommandSetProperties._CancelSelectedIssues_CreateExecutableObject);
                private static void _CancelSelectedIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Data> c, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelSelectedIssuesCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelSelectedIssues_CreateExecutableObject(global::LightSwitchApplication.IssuesManagerGrid.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssuesManagerGrid.DetailsClass)d).Methods.CancelSelectedIssues.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Entry
                    CancelSelectedIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Entry(
                        "CancelSelectedIssues",
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.MethodSetProperties._CancelSelectedIssues_Stub,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.MethodSetProperties._CancelSelectedIssues_CanInvoke,
                        global::LightSwitchApplication.IssuesManagerGrid.DetailsClass.MethodSetProperties._CancelSelectedIssues_InvokeMethod);
                private static void _CancelSelectedIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssuesManagerGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssuesManagerGrid, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass>.Data> c, global::LightSwitchApplication.IssuesManagerGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelSelectedIssuesMethod, sf);
                }
                private static global::System.Exception _CancelSelectedIssues_CanInvoke(global::LightSwitchApplication.IssuesManagerGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelSelectedIssues_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelSelectedIssues_InvokeMethod(global::LightSwitchApplication.IssuesManagerGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelSelectedIssues_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class AppOptionsEdit
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private AppOptionsEdit() : base("LightSwitchApplication:AppOptionsEdit")
        {
            global::LightSwitchApplication.AppOptionsEdit.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static AppOptionsEdit CreateInstance()
        {
            return new global::LightSwitchApplication.AppOptionsEdit(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptionsEdit_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptionsEdit_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptionsEdit_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptionsEdit_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptionsEdit_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptionsEdit_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptionsEdit_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void AppOptionProperty_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.AppOption AppOptionProperty
        {
            get 
            {
                return global::LightSwitchApplication.AppOptionsEdit.DetailsClass.GetValue(this, global::LightSwitchApplication.AppOptionsEdit.DetailsClass.PropertySetProperties.AppOptionProperty);
            }
            set
            {
                global::LightSwitchApplication.AppOptionsEdit.DetailsClass.SetValue(this, global::LightSwitchApplication.AppOptionsEdit.DetailsClass.PropertySetProperties.AppOptionProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOptionProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass, global::LightSwitchApplication.AppOptionsEdit.DetailsClass.PropertySet, global::LightSwitchApplication.AppOptionsEdit.DetailsClass.CommandSet, global::LightSwitchApplication.AppOptionsEdit.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.AppOptionsEdit.DetailsClass.PropertySetProperties.AppOptionProperty;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass>.Entry
                __AppOptionsEditEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass>.Entry(
                    global::LightSwitchApplication.AppOptionsEdit.DetailsClass.__AppOptionsEdit_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.AppOptionsEdit.DetailsClass.__AppOptionsEdit_InvokeSavingEvent,
                    global::LightSwitchApplication.AppOptionsEdit.DetailsClass.__AppOptionsEdit_InvokeSavedEvent,
                    global::LightSwitchApplication.AppOptionsEdit.DetailsClass.__AppOptionsEdit_InvokeClosingEvent,
                    global::LightSwitchApplication.AppOptionsEdit.DetailsClass.__AppOptionsEdit_InvokeCreated,
                    global::LightSwitchApplication.AppOptionsEdit.DetailsClass.__AppOptionsEdit_InvokeActivated,
                    global::LightSwitchApplication.AppOptionsEdit.DetailsClass.__AppOptionsEdit_InvokeSaveErrorEvent);
            private static void __AppOptionsEdit_InvokeInitializeDataWorkspace(global::LightSwitchApplication.AppOptionsEdit s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.AppOptionsEdit_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __AppOptionsEdit_InvokeSavingEvent(global::LightSwitchApplication.AppOptionsEdit s)
            {
                bool handled = false;
                s.AppOptionsEdit_Saving(ref handled);
                return handled;
            }
            private static void __AppOptionsEdit_InvokeSavedEvent(global::LightSwitchApplication.AppOptionsEdit s)
            {
                s.AppOptionsEdit_Saved();
            }
            private static bool __AppOptionsEdit_InvokeClosingEvent(global::LightSwitchApplication.AppOptionsEdit s)
            {
                bool cancel = false;
                s.AppOptionsEdit_Closing(ref cancel);
                return cancel;
            }
            private static void __AppOptionsEdit_InvokeCreated(global::LightSwitchApplication.AppOptionsEdit s)
            {
                s.AppOptionsEdit_Created();
            }
            private static void __AppOptionsEdit_InvokeActivated(global::LightSwitchApplication.AppOptionsEdit s)
            {
                s.AppOptionsEdit_Activated();
            }
            private static bool __AppOptionsEdit_InvokeSaveErrorEvent(global::LightSwitchApplication.AppOptionsEdit s, global::System.Exception ex)
            {
                bool handled = false;
                s.AppOptionsEdit_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.AppOptionsEdit.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.AppOptionsEdit.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.AppOptionsEdit.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass, global::LightSwitchApplication.AppOption>.Data _AppOptionProperty;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass, global::LightSwitchApplication.AppOption> AppOptionProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass, global::LightSwitchApplication.AppOption>)base.GetItem(global::LightSwitchApplication.AppOptionsEdit.DetailsClass.PropertySetProperties.AppOptionProperty);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass, global::LightSwitchApplication.AppOption>.Entry
                    AppOptionProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass, global::LightSwitchApplication.AppOption>.Entry(
                        "AppOptionProperty",
                        false,
                        global::LightSwitchApplication.AppOptionsEdit.DetailsClass.PropertySetProperties._AppOptionProperty_Stub,
                        global::LightSwitchApplication.AppOptionsEdit.DetailsClass.PropertySetProperties._AppOptionProperty_Validate,
                        global::LightSwitchApplication.AppOptionsEdit.DetailsClass.PropertySetProperties._AppOptionProperty_OnValueChanged);
                private static void _AppOptionProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AppOptionsEdit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AppOptionsEdit, global::LightSwitchApplication.AppOptionsEdit.DetailsClass, global::LightSwitchApplication.AppOption>.Data> c, global::LightSwitchApplication.AppOptionsEdit.DetailsClass d, object sf)
                {
                    c(d, ref d._AppOptionProperty, sf);
                }
                private static void _AppOptionProperty_Validate(global::LightSwitchApplication.AppOptionsEdit s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.AppOptionProperty_Validate(r);
                }
                private static void _AppOptionProperty_OnValueChanged(global::LightSwitchApplication.AppOptionsEdit s)
                {
                    s.AppOptionProperty_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class CreateNewIssueDocument
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private CreateNewIssueDocument() : base("LightSwitchApplication:CreateNewIssueDocument")
        {
            global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static CreateNewIssueDocument CreateInstance()
        {
            return new global::LightSwitchApplication.CreateNewIssueDocument(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueDocument_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueDocument_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueDocument_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueDocument_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueDocument_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueDocument_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewIssueDocument_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void IssueDocumentProperty_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.IssueDocument IssueDocumentProperty
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties.IssueDocumentProperty);
            }
            set
            {
                global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties.IssueDocumentProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocumentProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the UploadFileToDatabase screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void UploadFileToDatabase()
        {
            this.Details.Methods.UploadFileToDatabase.CreateInvocation().Execute();
        }
        partial void UploadFileToDatabase_CanExecute(ref bool result);
        partial void UploadFileToDatabase_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySet, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.CommandSet, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties.IssueDocumentProperty;
                var initializeCommandEntry = global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.CommandSetProperties.UploadFileToDatabase;
                var initializeMethodEntry = global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.MethodSetProperties.UploadFileToDatabase;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Entry
                __CreateNewIssueDocumentEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Entry(
                    global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.__CreateNewIssueDocument_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.__CreateNewIssueDocument_InvokeSavingEvent,
                    global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.__CreateNewIssueDocument_InvokeSavedEvent,
                    global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.__CreateNewIssueDocument_InvokeClosingEvent,
                    global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.__CreateNewIssueDocument_InvokeCreated,
                    global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.__CreateNewIssueDocument_InvokeActivated,
                    global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.__CreateNewIssueDocument_InvokeSaveErrorEvent);
            private static void __CreateNewIssueDocument_InvokeInitializeDataWorkspace(global::LightSwitchApplication.CreateNewIssueDocument s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.CreateNewIssueDocument_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __CreateNewIssueDocument_InvokeSavingEvent(global::LightSwitchApplication.CreateNewIssueDocument s)
            {
                bool handled = false;
                s.CreateNewIssueDocument_Saving(ref handled);
                return handled;
            }
            private static void __CreateNewIssueDocument_InvokeSavedEvent(global::LightSwitchApplication.CreateNewIssueDocument s)
            {
                s.CreateNewIssueDocument_Saved();
            }
            private static bool __CreateNewIssueDocument_InvokeClosingEvent(global::LightSwitchApplication.CreateNewIssueDocument s)
            {
                bool cancel = false;
                s.CreateNewIssueDocument_Closing(ref cancel);
                return cancel;
            }
            private static void __CreateNewIssueDocument_InvokeCreated(global::LightSwitchApplication.CreateNewIssueDocument s)
            {
                s.CreateNewIssueDocument_Created();
            }
            private static void __CreateNewIssueDocument_InvokeActivated(global::LightSwitchApplication.CreateNewIssueDocument s)
            {
                s.CreateNewIssueDocument_Activated();
            }
            private static bool __CreateNewIssueDocument_InvokeSaveErrorEvent(global::LightSwitchApplication.CreateNewIssueDocument s, global::System.Exception ex)
            {
                bool handled = false;
                s.CreateNewIssueDocument_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::LightSwitchApplication.IssueDocument>.Data _IssueDocumentProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Data _UploadFileToDatabaseCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Data _UploadFileToDatabaseMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::LightSwitchApplication.IssueDocument> IssueDocumentProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::LightSwitchApplication.IssueDocument>)base.GetItem(global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties.IssueDocumentProperty);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass> UploadFileToDatabase
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>)base.GetItem(global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.CommandSetProperties.UploadFileToDatabase);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass> UploadFileToDatabase
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>)base.GetItem(global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.MethodSetProperties.UploadFileToDatabase);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::LightSwitchApplication.IssueDocument>.Entry
                    IssueDocumentProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::LightSwitchApplication.IssueDocument>.Entry(
                        "IssueDocumentProperty",
                        false,
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties._IssueDocumentProperty_Stub,
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties._IssueDocumentProperty_Validate,
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.PropertySetProperties._IssueDocumentProperty_OnValueChanged);
                private static void _IssueDocumentProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::LightSwitchApplication.IssueDocument>.Data> c, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueDocumentProperty, sf);
                }
                private static void _IssueDocumentProperty_Validate(global::LightSwitchApplication.CreateNewIssueDocument s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueDocumentProperty_Validate(r);
                }
                private static void _IssueDocumentProperty_OnValueChanged(global::LightSwitchApplication.CreateNewIssueDocument s)
                {
                    s.IssueDocumentProperty_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Entry
                    UploadFileToDatabase = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Entry(
                        "UploadFileToDatabase",
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.CommandSetProperties._UploadFileToDatabase_Stub,
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.CommandSetProperties._UploadFileToDatabase_CreateExecutableObject);
                private static void _UploadFileToDatabase_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Data> c, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass d, object sf)
                {
                    c(d, ref d._UploadFileToDatabaseCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _UploadFileToDatabase_CreateExecutableObject(global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass)d).Methods.UploadFileToDatabase.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Entry
                    UploadFileToDatabase = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Entry(
                        "UploadFileToDatabase",
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.MethodSetProperties._UploadFileToDatabase_Stub,
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.MethodSetProperties._UploadFileToDatabase_CanInvoke,
                        global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass.MethodSetProperties._UploadFileToDatabase_InvokeMethod);
                private static void _UploadFileToDatabase_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CreateNewIssueDocument, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass>.Data> c, global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass d, object sf)
                {
                    c(d, ref d._UploadFileToDatabaseMethod, sf);
                }
                private static global::System.Exception _UploadFileToDatabase_CanInvoke(global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.UploadFileToDatabase_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _UploadFileToDatabase_InvokeMethod(global::LightSwitchApplication.CreateNewIssueDocument.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.UploadFileToDatabase_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class IssueDocumentDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private IssueDocumentDetail(int IssueDocumentId) : base("LightSwitchApplication:IssueDocumentDetail")
        {
                this.IssueDocumentId = IssueDocumentId;
            global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static IssueDocumentDetail CreateInstance(int IssueDocumentId)
        {
            return new global::LightSwitchApplication.IssueDocumentDetail(
                        IssueDocumentId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocumentDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocumentDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocumentDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocumentDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocumentDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocumentDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocumentDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void IssueDocument_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocument_Loaded(bool succeeded);

        partial void IssueDocumentId_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.IssueDocument IssueDocument
        {
            get
            {
                return global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties.IssueDocument);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocument_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int IssueDocumentId
        {
            get 
            {
                return global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties.IssueDocumentId);
            }
            set
            {
                global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties.IssueDocumentId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDocumentId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the SaveFileFromDatabase screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveFileFromDatabase()
        {
            this.Details.Methods.SaveFileFromDatabase.CreateInvocation().Execute();
        }
        partial void SaveFileFromDatabase_CanExecute(ref bool result);
        partial void SaveFileFromDatabase_Execute();

        /// <summary>
        /// Calls the OpenFileFromDatabase screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenFileFromDatabase()
        {
            this.Details.Methods.OpenFileFromDatabase.CreateInvocation().Execute();
        }
        partial void OpenFileFromDatabase_CanExecute(ref bool result);
        partial void OpenFileFromDatabase_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySet, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.CommandSet, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties.IssueDocument;
                var initializeCommandEntry = global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.CommandSetProperties.SaveFileFromDatabase;
                var initializeMethodEntry = global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSetProperties.SaveFileFromDatabase;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry
                __IssueDocumentDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.__IssueDocumentDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.__IssueDocumentDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.__IssueDocumentDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.__IssueDocumentDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.__IssueDocumentDetail_InvokeCreated,
                    global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.__IssueDocumentDetail_InvokeActivated,
                    global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.__IssueDocumentDetail_InvokeSaveErrorEvent);
            private static void __IssueDocumentDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.IssueDocumentDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.IssueDocumentDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __IssueDocumentDetail_InvokeSavingEvent(global::LightSwitchApplication.IssueDocumentDetail s)
            {
                bool handled = false;
                s.IssueDocumentDetail_Saving(ref handled);
                return handled;
            }
            private static void __IssueDocumentDetail_InvokeSavedEvent(global::LightSwitchApplication.IssueDocumentDetail s)
            {
                s.IssueDocumentDetail_Saved();
            }
            private static bool __IssueDocumentDetail_InvokeClosingEvent(global::LightSwitchApplication.IssueDocumentDetail s)
            {
                bool cancel = false;
                s.IssueDocumentDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __IssueDocumentDetail_InvokeCreated(global::LightSwitchApplication.IssueDocumentDetail s)
            {
                s.IssueDocumentDetail_Created();
            }
            private static void __IssueDocumentDetail_InvokeActivated(global::LightSwitchApplication.IssueDocumentDetail s)
            {
                s.IssueDocumentDetail_Activated();
            }
            private static bool __IssueDocumentDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.IssueDocumentDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.IssueDocumentDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::LightSwitchApplication.IssueDocument>.Data _IssueDocument;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, int>.Data _IssueDocumentId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Data _SaveFileFromDatabaseCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Data _OpenFileFromDatabaseCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Data _SaveFileFromDatabaseMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Data _OpenFileFromDatabaseMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::LightSwitchApplication.IssueDocument> IssueDocument
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::LightSwitchApplication.IssueDocument>)base.GetItem(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties.IssueDocument);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, int> IssueDocumentId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties.IssueDocumentId);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass> SaveFileFromDatabase
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.CommandSetProperties.SaveFileFromDatabase);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass> OpenFileFromDatabase
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.CommandSetProperties.OpenFileFromDatabase);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass> SaveFileFromDatabase
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSetProperties.SaveFileFromDatabase);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass> OpenFileFromDatabase
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSetProperties.OpenFileFromDatabase);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::LightSwitchApplication.IssueDocument>.Entry
                    IssueDocument = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::LightSwitchApplication.IssueDocument>.Entry(
                        "IssueDocument",
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties._IssueDocument_Stub,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties._IssueDocument_Validate,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties._IssueDocument_CreateQuery,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties._IssueDocument_OnValueChanged,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties._IssueDocument_OnLoaded);
                private static void _IssueDocument_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::LightSwitchApplication.IssueDocument>.Data> c, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueDocument, sf);
                }
                private static void _IssueDocument_Validate(global::LightSwitchApplication.IssueDocumentDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueDocument_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IssueDocument_CreateQuery(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _IssueDocument_OnValueChanged(global::LightSwitchApplication.IssueDocumentDetail s)
                {
                    s.IssueDocument_Changed();
                }

                private static void _IssueDocument_OnLoaded(global::LightSwitchApplication.IssueDocumentDetail s, bool succeeded)
                {
                    s.IssueDocument_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, int>.Entry
                    IssueDocumentId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, int>.Entry(
                        "IssueDocumentId",
                        false,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties._IssueDocumentId_Stub,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties._IssueDocumentId_Validate,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.PropertySetProperties._IssueDocumentId_OnValueChanged);
                private static void _IssueDocumentId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueDocumentId, sf);
                }
                private static void _IssueDocumentId_Validate(global::LightSwitchApplication.IssueDocumentDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IssueDocumentId_Validate(r);
                }
                private static void _IssueDocumentId_OnValueChanged(global::LightSwitchApplication.IssueDocumentDetail s)
                {
                    s.IssueDocumentId_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry
                    SaveFileFromDatabase = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry(
                        "SaveFileFromDatabase",
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.CommandSetProperties._SaveFileFromDatabase_Stub,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.CommandSetProperties._SaveFileFromDatabase_CreateExecutableObject);
                private static void _SaveFileFromDatabase_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveFileFromDatabaseCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveFileFromDatabase_CreateExecutableObject(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueDocumentDetail.DetailsClass)d).Methods.SaveFileFromDatabase.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry
                    OpenFileFromDatabase = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry(
                        "OpenFileFromDatabase",
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.CommandSetProperties._OpenFileFromDatabase_Stub,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.CommandSetProperties._OpenFileFromDatabase_CreateExecutableObject);
                private static void _OpenFileFromDatabase_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFileFromDatabaseCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenFileFromDatabase_CreateExecutableObject(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.IssueDocumentDetail.DetailsClass)d).Methods.OpenFileFromDatabase.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry
                    SaveFileFromDatabase = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry(
                        "SaveFileFromDatabase",
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSetProperties._SaveFileFromDatabase_Stub,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSetProperties._SaveFileFromDatabase_CanInvoke,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSetProperties._SaveFileFromDatabase_InvokeMethod);
                private static void _SaveFileFromDatabase_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveFileFromDatabaseMethod, sf);
                }
                private static global::System.Exception _SaveFileFromDatabase_CanInvoke(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveFileFromDatabase_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveFileFromDatabase_InvokeMethod(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveFileFromDatabase_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry
                    OpenFileFromDatabase = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Entry(
                        "OpenFileFromDatabase",
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSetProperties._OpenFileFromDatabase_Stub,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSetProperties._OpenFileFromDatabase_CanInvoke,
                        global::LightSwitchApplication.IssueDocumentDetail.DetailsClass.MethodSetProperties._OpenFileFromDatabase_InvokeMethod);
                private static void _OpenFileFromDatabase_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.IssueDocumentDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.IssueDocumentDetail, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass>.Data> c, global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFileFromDatabaseMethod, sf);
                }
                private static global::System.Exception _OpenFileFromDatabase_CanInvoke(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenFileFromDatabase_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenFileFromDatabase_InvokeMethod(global::LightSwitchApplication.IssueDocumentDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenFileFromDatabase_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Info
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private Info() : base("LightSwitchApplication:Info")
        {
            global::LightSwitchApplication.Info.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static Info CreateInstance()
        {
            return new global::LightSwitchApplication.Info(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Info_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass, global::LightSwitchApplication.Info.DetailsClass.PropertySet, global::LightSwitchApplication.Info.DetailsClass.CommandSet, global::LightSwitchApplication.Info.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass>.Entry
                __InfoEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass>.Entry(
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeSavingEvent,
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeSavedEvent,
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeClosingEvent,
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeCreated,
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeActivated,
                    global::LightSwitchApplication.Info.DetailsClass.__Info_InvokeSaveErrorEvent);
            private static void __Info_InvokeInitializeDataWorkspace(global::LightSwitchApplication.Info s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.Info_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __Info_InvokeSavingEvent(global::LightSwitchApplication.Info s)
            {
                bool handled = false;
                s.Info_Saving(ref handled);
                return handled;
            }
            private static void __Info_InvokeSavedEvent(global::LightSwitchApplication.Info s)
            {
                s.Info_Saved();
            }
            private static bool __Info_InvokeClosingEvent(global::LightSwitchApplication.Info s)
            {
                bool cancel = false;
                s.Info_Closing(ref cancel);
                return cancel;
            }
            private static void __Info_InvokeCreated(global::LightSwitchApplication.Info s)
            {
                s.Info_Created();
            }
            private static void __Info_InvokeActivated(global::LightSwitchApplication.Info s)
            {
                s.Info_Activated();
            }
            private static bool __Info_InvokeSaveErrorEvent(global::LightSwitchApplication.Info s, global::System.Exception ex)
            {
                bool handled = false;
                s.Info_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.Info.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.Info.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.Info.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.Info, global::LightSwitchApplication.Info.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class SearchDepartments
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.SearchDepartments, global::LightSwitchApplication.SearchDepartments.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private SearchDepartments() : base("LightSwitchApplication:SearchDepartments")
        {
            global::LightSwitchApplication.SearchDepartments.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static SearchDepartments CreateInstance()
        {
            return new global::LightSwitchApplication.SearchDepartments(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchDepartments_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchDepartments_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchDepartments_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchDepartments_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchDepartments_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchDepartments_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchDepartments_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Departments_SelectionChanged();

        partial void Departments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Departments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Department> Departments
        {
            get
            {
                return global::LightSwitchApplication.SearchDepartments.DetailsClass.GetValue(this, global::LightSwitchApplication.SearchDepartments.DetailsClass.PropertySetProperties.Departments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SearchDepartments, global::LightSwitchApplication.SearchDepartments.DetailsClass, global::LightSwitchApplication.SearchDepartments.DetailsClass.PropertySet, global::LightSwitchApplication.SearchDepartments.DetailsClass.CommandSet, global::LightSwitchApplication.SearchDepartments.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.SearchDepartments.DetailsClass.PropertySetProperties.Departments;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SearchDepartments, global::LightSwitchApplication.SearchDepartments.DetailsClass>.Entry
                __SearchDepartmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SearchDepartments, global::LightSwitchApplication.SearchDepartments.DetailsClass>.Entry(
                    global::LightSwitchApplication.SearchDepartments.DetailsClass.__SearchDepartments_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.SearchDepartments.DetailsClass.__SearchDepartments_InvokeSavingEvent,
                    global::LightSwitchApplication.SearchDepartments.DetailsClass.__SearchDepartments_InvokeSavedEvent,
                    global::LightSwitchApplication.SearchDepartments.DetailsClass.__SearchDepartments_InvokeClosingEvent,
                    global::LightSwitchApplication.SearchDepartments.DetailsClass.__SearchDepartments_InvokeCreated,
                    global::LightSwitchApplication.SearchDepartments.DetailsClass.__SearchDepartments_InvokeActivated,
                    global::LightSwitchApplication.SearchDepartments.DetailsClass.__SearchDepartments_InvokeSaveErrorEvent);
            private static void __SearchDepartments_InvokeInitializeDataWorkspace(global::LightSwitchApplication.SearchDepartments s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.SearchDepartments_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __SearchDepartments_InvokeSavingEvent(global::LightSwitchApplication.SearchDepartments s)
            {
                bool handled = false;
                s.SearchDepartments_Saving(ref handled);
                return handled;
            }
            private static void __SearchDepartments_InvokeSavedEvent(global::LightSwitchApplication.SearchDepartments s)
            {
                s.SearchDepartments_Saved();
            }
            private static bool __SearchDepartments_InvokeClosingEvent(global::LightSwitchApplication.SearchDepartments s)
            {
                bool cancel = false;
                s.SearchDepartments_Closing(ref cancel);
                return cancel;
            }
            private static void __SearchDepartments_InvokeCreated(global::LightSwitchApplication.SearchDepartments s)
            {
                s.SearchDepartments_Created();
            }
            private static void __SearchDepartments_InvokeActivated(global::LightSwitchApplication.SearchDepartments s)
            {
                s.SearchDepartments_Activated();
            }
            private static bool __SearchDepartments_InvokeSaveErrorEvent(global::LightSwitchApplication.SearchDepartments s, global::System.Exception ex)
            {
                bool handled = false;
                s.SearchDepartments_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.SearchDepartments.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.SearchDepartments.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.SearchDepartments.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable DepartmentsQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Departments;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchDepartments, global::LightSwitchApplication.SearchDepartments.DetailsClass, global::LightSwitchApplication.Department>.Data _Departments;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.SearchDepartments, global::LightSwitchApplication.SearchDepartments.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchDepartments, global::LightSwitchApplication.SearchDepartments.DetailsClass, global::LightSwitchApplication.Department> Departments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchDepartments, global::LightSwitchApplication.SearchDepartments.DetailsClass, global::LightSwitchApplication.Department>)base.GetItem(global::LightSwitchApplication.SearchDepartments.DetailsClass.PropertySetProperties.Departments);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.SearchDepartments, global::LightSwitchApplication.SearchDepartments.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.SearchDepartments, global::LightSwitchApplication.SearchDepartments.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchDepartments, global::LightSwitchApplication.SearchDepartments.DetailsClass, global::LightSwitchApplication.Department>.Entry
                    Departments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchDepartments, global::LightSwitchApplication.SearchDepartments.DetailsClass, global::LightSwitchApplication.Department>.Entry(
                        "Departments",
                        global::LightSwitchApplication.SearchDepartments.DetailsClass.PropertySetProperties._Departments_Stub,
                        global::LightSwitchApplication.SearchDepartments.DetailsClass.PropertySetProperties._Departments_Validate,
                        global::LightSwitchApplication.SearchDepartments.DetailsClass.PropertySetProperties._Departments_CreateQuery,
                        global::LightSwitchApplication.SearchDepartments.DetailsClass.PropertySetProperties._Departments_SelectionChanged,
                        global::LightSwitchApplication.SearchDepartments.DetailsClass.PropertySetProperties._Departments_OnCollectionChanged,
                        global::LightSwitchApplication.SearchDepartments.DetailsClass.PropertySetProperties._Departments_OnLoaded);
                private static void _Departments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SearchDepartments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchDepartments, global::LightSwitchApplication.SearchDepartments.DetailsClass, global::LightSwitchApplication.Department>.Data> c, global::LightSwitchApplication.SearchDepartments.DetailsClass d, object sf)
                {
                    c(d, ref d._Departments, sf);
                }
                private static void _Departments_Validate(global::LightSwitchApplication.SearchDepartments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Departments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Departments_CreateQuery(global::LightSwitchApplication.SearchDepartments.DetailsClass d, object[] args)
                {
                    return d.DepartmentsQuery();
                }
                private static void _Departments_SelectionChanged(global::LightSwitchApplication.SearchDepartments s)
                {
                    s.Departments_SelectionChanged();
                }
                private static void _Departments_OnCollectionChanged(global::LightSwitchApplication.SearchDepartments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Departments_Changed(e);
                }
                private static void _Departments_OnLoaded(global::LightSwitchApplication.SearchDepartments s, bool succeeded)
                {
                    s.Departments_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EngineersListReport
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EngineersListReport, global::LightSwitchApplication.EngineersListReport.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EngineersListReport() : base("LightSwitchApplication:EngineersListReport")
        {
            global::LightSwitchApplication.EngineersListReport.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EngineersListReport CreateInstance()
        {
            return new global::LightSwitchApplication.EngineersListReport(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersListReport_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersListReport_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersListReport_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersListReport_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersListReport_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersListReport_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineersListReport_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Engineers_SelectionChanged();

        partial void Engineers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Engineers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Engineer> Engineers
        {
            get
            {
                return global::LightSwitchApplication.EngineersListReport.DetailsClass.GetValue(this, global::LightSwitchApplication.EngineersListReport.DetailsClass.PropertySetProperties.Engineers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineersListReport, global::LightSwitchApplication.EngineersListReport.DetailsClass, global::LightSwitchApplication.EngineersListReport.DetailsClass.PropertySet, global::LightSwitchApplication.EngineersListReport.DetailsClass.CommandSet, global::LightSwitchApplication.EngineersListReport.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EngineersListReport.DetailsClass.PropertySetProperties.Engineers;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineersListReport, global::LightSwitchApplication.EngineersListReport.DetailsClass>.Entry
                __EngineersListReportEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EngineersListReport, global::LightSwitchApplication.EngineersListReport.DetailsClass>.Entry(
                    global::LightSwitchApplication.EngineersListReport.DetailsClass.__EngineersListReport_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EngineersListReport.DetailsClass.__EngineersListReport_InvokeSavingEvent,
                    global::LightSwitchApplication.EngineersListReport.DetailsClass.__EngineersListReport_InvokeSavedEvent,
                    global::LightSwitchApplication.EngineersListReport.DetailsClass.__EngineersListReport_InvokeClosingEvent,
                    global::LightSwitchApplication.EngineersListReport.DetailsClass.__EngineersListReport_InvokeCreated,
                    global::LightSwitchApplication.EngineersListReport.DetailsClass.__EngineersListReport_InvokeActivated,
                    global::LightSwitchApplication.EngineersListReport.DetailsClass.__EngineersListReport_InvokeSaveErrorEvent);
            private static void __EngineersListReport_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EngineersListReport s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EngineersListReport_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EngineersListReport_InvokeSavingEvent(global::LightSwitchApplication.EngineersListReport s)
            {
                bool handled = false;
                s.EngineersListReport_Saving(ref handled);
                return handled;
            }
            private static void __EngineersListReport_InvokeSavedEvent(global::LightSwitchApplication.EngineersListReport s)
            {
                s.EngineersListReport_Saved();
            }
            private static bool __EngineersListReport_InvokeClosingEvent(global::LightSwitchApplication.EngineersListReport s)
            {
                bool cancel = false;
                s.EngineersListReport_Closing(ref cancel);
                return cancel;
            }
            private static void __EngineersListReport_InvokeCreated(global::LightSwitchApplication.EngineersListReport s)
            {
                s.EngineersListReport_Created();
            }
            private static void __EngineersListReport_InvokeActivated(global::LightSwitchApplication.EngineersListReport s)
            {
                s.EngineersListReport_Activated();
            }
            private static bool __EngineersListReport_InvokeSaveErrorEvent(global::LightSwitchApplication.EngineersListReport s, global::System.Exception ex)
            {
                bool handled = false;
                s.EngineersListReport_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EngineersListReport.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EngineersListReport.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EngineersListReport.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EngineersQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ApplicationData.Engineers,
                    "Manager");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersListReport, global::LightSwitchApplication.EngineersListReport.DetailsClass, global::LightSwitchApplication.Engineer>.Data _Engineers;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EngineersListReport, global::LightSwitchApplication.EngineersListReport.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersListReport, global::LightSwitchApplication.EngineersListReport.DetailsClass, global::LightSwitchApplication.Engineer> Engineers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersListReport, global::LightSwitchApplication.EngineersListReport.DetailsClass, global::LightSwitchApplication.Engineer>)base.GetItem(global::LightSwitchApplication.EngineersListReport.DetailsClass.PropertySetProperties.Engineers);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EngineersListReport, global::LightSwitchApplication.EngineersListReport.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EngineersListReport, global::LightSwitchApplication.EngineersListReport.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersListReport, global::LightSwitchApplication.EngineersListReport.DetailsClass, global::LightSwitchApplication.Engineer>.Entry
                    Engineers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersListReport, global::LightSwitchApplication.EngineersListReport.DetailsClass, global::LightSwitchApplication.Engineer>.Entry(
                        "Engineers",
                        global::LightSwitchApplication.EngineersListReport.DetailsClass.PropertySetProperties._Engineers_Stub,
                        global::LightSwitchApplication.EngineersListReport.DetailsClass.PropertySetProperties._Engineers_Validate,
                        global::LightSwitchApplication.EngineersListReport.DetailsClass.PropertySetProperties._Engineers_CreateQuery,
                        global::LightSwitchApplication.EngineersListReport.DetailsClass.PropertySetProperties._Engineers_SelectionChanged,
                        global::LightSwitchApplication.EngineersListReport.DetailsClass.PropertySetProperties._Engineers_OnCollectionChanged,
                        global::LightSwitchApplication.EngineersListReport.DetailsClass.PropertySetProperties._Engineers_OnLoaded);
                private static void _Engineers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EngineersListReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EngineersListReport, global::LightSwitchApplication.EngineersListReport.DetailsClass, global::LightSwitchApplication.Engineer>.Data> c, global::LightSwitchApplication.EngineersListReport.DetailsClass d, object sf)
                {
                    c(d, ref d._Engineers, sf);
                }
                private static void _Engineers_Validate(global::LightSwitchApplication.EngineersListReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Engineers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Engineers_CreateQuery(global::LightSwitchApplication.EngineersListReport.DetailsClass d, object[] args)
                {
                    return d.EngineersQuery();
                }
                private static void _Engineers_SelectionChanged(global::LightSwitchApplication.EngineersListReport s)
                {
                    s.Engineers_SelectionChanged();
                }
                private static void _Engineers_OnCollectionChanged(global::LightSwitchApplication.EngineersListReport s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Engineers_Changed(e);
                }
                private static void _Engineers_OnLoaded(global::LightSwitchApplication.EngineersListReport s, bool succeeded)
                {
                    s.Engineers_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class DepartmentDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private DepartmentDetail(int DepartmentId) : base("LightSwitchApplication:DepartmentDetail")
        {
                this.DepartmentId = DepartmentId;
            global::LightSwitchApplication.DepartmentDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static DepartmentDetail CreateInstance(int DepartmentId)
        {
            return new global::LightSwitchApplication.DepartmentDetail(
                        DepartmentId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepartmentDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepartmentDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepartmentDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepartmentDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepartmentDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepartmentDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepartmentDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Department_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Department_Loaded(bool succeeded);

        partial void DepartmentId_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Department Department
        {
            get
            {
                return global::LightSwitchApplication.DepartmentDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.DepartmentDetail.DetailsClass.PropertySetProperties.Department);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Department_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int DepartmentId
        {
            get 
            {
                return global::LightSwitchApplication.DepartmentDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.DepartmentDetail.DetailsClass.PropertySetProperties.DepartmentId);
            }
            set
            {
                global::LightSwitchApplication.DepartmentDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.DepartmentDetail.DetailsClass.PropertySetProperties.DepartmentId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepartmentId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the CreateWordDoc screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CreateWordDoc()
        {
            this.Details.Methods.CreateWordDoc.CreateInvocation().Execute();
        }
        partial void CreateWordDoc_CanExecute(ref bool result);
        partial void CreateWordDoc_Execute();

        /// <summary>
        /// Calls the CreateWordDocPrinter screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CreateWordDocPrinter()
        {
            this.Details.Methods.CreateWordDocPrinter.CreateInvocation().Execute();
        }
        partial void CreateWordDocPrinter_CanExecute(ref bool result);
        partial void CreateWordDocPrinter_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass, global::LightSwitchApplication.DepartmentDetail.DetailsClass.PropertySet, global::LightSwitchApplication.DepartmentDetail.DetailsClass.CommandSet, global::LightSwitchApplication.DepartmentDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.DepartmentDetail.DetailsClass.PropertySetProperties.Department;
                var initializeCommandEntry = global::LightSwitchApplication.DepartmentDetail.DetailsClass.CommandSetProperties.CreateWordDoc;
                var initializeMethodEntry = global::LightSwitchApplication.DepartmentDetail.DetailsClass.MethodSetProperties.CreateWordDoc;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>.Entry
                __DepartmentDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.DepartmentDetail.DetailsClass.__DepartmentDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.DepartmentDetail.DetailsClass.__DepartmentDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.DepartmentDetail.DetailsClass.__DepartmentDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.DepartmentDetail.DetailsClass.__DepartmentDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.DepartmentDetail.DetailsClass.__DepartmentDetail_InvokeCreated,
                    global::LightSwitchApplication.DepartmentDetail.DetailsClass.__DepartmentDetail_InvokeActivated,
                    global::LightSwitchApplication.DepartmentDetail.DetailsClass.__DepartmentDetail_InvokeSaveErrorEvent);
            private static void __DepartmentDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.DepartmentDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.DepartmentDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __DepartmentDetail_InvokeSavingEvent(global::LightSwitchApplication.DepartmentDetail s)
            {
                bool handled = false;
                s.DepartmentDetail_Saving(ref handled);
                return handled;
            }
            private static void __DepartmentDetail_InvokeSavedEvent(global::LightSwitchApplication.DepartmentDetail s)
            {
                s.DepartmentDetail_Saved();
            }
            private static bool __DepartmentDetail_InvokeClosingEvent(global::LightSwitchApplication.DepartmentDetail s)
            {
                bool cancel = false;
                s.DepartmentDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __DepartmentDetail_InvokeCreated(global::LightSwitchApplication.DepartmentDetail s)
            {
                s.DepartmentDetail_Created();
            }
            private static void __DepartmentDetail_InvokeActivated(global::LightSwitchApplication.DepartmentDetail s)
            {
                s.DepartmentDetail_Activated();
            }
            private static bool __DepartmentDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.DepartmentDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.DepartmentDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.DepartmentDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.DepartmentDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.DepartmentDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass, global::LightSwitchApplication.Department>.Data _Department;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass, int>.Data _DepartmentId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>.Data _CreateWordDocCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>.Data _CreateWordDocPrinterCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>.Data _CreateWordDocMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>.Data _CreateWordDocPrinterMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass, global::LightSwitchApplication.Department> Department
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass, global::LightSwitchApplication.Department>)base.GetItem(global::LightSwitchApplication.DepartmentDetail.DetailsClass.PropertySetProperties.Department);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass, int> DepartmentId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.DepartmentDetail.DetailsClass.PropertySetProperties.DepartmentId);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass> CreateWordDoc
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.DepartmentDetail.DetailsClass.CommandSetProperties.CreateWordDoc);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass> CreateWordDocPrinter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.DepartmentDetail.DetailsClass.CommandSetProperties.CreateWordDocPrinter);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass> CreateWordDoc
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.DepartmentDetail.DetailsClass.MethodSetProperties.CreateWordDoc);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass> CreateWordDocPrinter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.DepartmentDetail.DetailsClass.MethodSetProperties.CreateWordDocPrinter);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass, global::LightSwitchApplication.Department>.Entry
                    Department = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass, global::LightSwitchApplication.Department>.Entry(
                        "Department",
                        global::LightSwitchApplication.DepartmentDetail.DetailsClass.PropertySetProperties._Department_Stub,
                        global::LightSwitchApplication.DepartmentDetail.DetailsClass.PropertySetProperties._Department_Validate,
                        global::LightSwitchApplication.DepartmentDetail.DetailsClass.PropertySetProperties._Department_CreateQuery,
                        global::LightSwitchApplication.DepartmentDetail.DetailsClass.PropertySetProperties._Department_OnValueChanged,
                        global::LightSwitchApplication.DepartmentDetail.DetailsClass.PropertySetProperties._Department_OnLoaded);
                private static void _Department_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DepartmentDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass, global::LightSwitchApplication.Department>.Data> c, global::LightSwitchApplication.DepartmentDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Department, sf);
                }
                private static void _Department_Validate(global::LightSwitchApplication.DepartmentDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Department_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Department_CreateQuery(global::LightSwitchApplication.DepartmentDetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Department_OnValueChanged(global::LightSwitchApplication.DepartmentDetail s)
                {
                    s.Department_Changed();
                }

                private static void _Department_OnLoaded(global::LightSwitchApplication.DepartmentDetail s, bool succeeded)
                {
                    s.Department_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass, int>.Entry
                    DepartmentId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass, int>.Entry(
                        "DepartmentId",
                        false,
                        global::LightSwitchApplication.DepartmentDetail.DetailsClass.PropertySetProperties._DepartmentId_Stub,
                        global::LightSwitchApplication.DepartmentDetail.DetailsClass.PropertySetProperties._DepartmentId_Validate,
                        global::LightSwitchApplication.DepartmentDetail.DetailsClass.PropertySetProperties._DepartmentId_OnValueChanged);
                private static void _DepartmentId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DepartmentDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.DepartmentDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._DepartmentId, sf);
                }
                private static void _DepartmentId_Validate(global::LightSwitchApplication.DepartmentDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.DepartmentId_Validate(r);
                }
                private static void _DepartmentId_OnValueChanged(global::LightSwitchApplication.DepartmentDetail s)
                {
                    s.DepartmentId_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>.Entry
                    CreateWordDoc = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>.Entry(
                        "CreateWordDoc",
                        global::LightSwitchApplication.DepartmentDetail.DetailsClass.CommandSetProperties._CreateWordDoc_Stub,
                        global::LightSwitchApplication.DepartmentDetail.DetailsClass.CommandSetProperties._CreateWordDoc_CreateExecutableObject);
                private static void _CreateWordDoc_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DepartmentDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>.Data> c, global::LightSwitchApplication.DepartmentDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateWordDocCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CreateWordDoc_CreateExecutableObject(global::LightSwitchApplication.DepartmentDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DepartmentDetail.DetailsClass)d).Methods.CreateWordDoc.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>.Entry
                    CreateWordDocPrinter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>.Entry(
                        "CreateWordDocPrinter",
                        global::LightSwitchApplication.DepartmentDetail.DetailsClass.CommandSetProperties._CreateWordDocPrinter_Stub,
                        global::LightSwitchApplication.DepartmentDetail.DetailsClass.CommandSetProperties._CreateWordDocPrinter_CreateExecutableObject);
                private static void _CreateWordDocPrinter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DepartmentDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>.Data> c, global::LightSwitchApplication.DepartmentDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateWordDocPrinterCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CreateWordDocPrinter_CreateExecutableObject(global::LightSwitchApplication.DepartmentDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DepartmentDetail.DetailsClass)d).Methods.CreateWordDocPrinter.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>.Entry
                    CreateWordDoc = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>.Entry(
                        "CreateWordDoc",
                        global::LightSwitchApplication.DepartmentDetail.DetailsClass.MethodSetProperties._CreateWordDoc_Stub,
                        global::LightSwitchApplication.DepartmentDetail.DetailsClass.MethodSetProperties._CreateWordDoc_CanInvoke,
                        global::LightSwitchApplication.DepartmentDetail.DetailsClass.MethodSetProperties._CreateWordDoc_InvokeMethod);
                private static void _CreateWordDoc_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DepartmentDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>.Data> c, global::LightSwitchApplication.DepartmentDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateWordDocMethod, sf);
                }
                private static global::System.Exception _CreateWordDoc_CanInvoke(global::LightSwitchApplication.DepartmentDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CreateWordDoc_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CreateWordDoc_InvokeMethod(global::LightSwitchApplication.DepartmentDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CreateWordDoc_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>.Entry
                    CreateWordDocPrinter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>.Entry(
                        "CreateWordDocPrinter",
                        global::LightSwitchApplication.DepartmentDetail.DetailsClass.MethodSetProperties._CreateWordDocPrinter_Stub,
                        global::LightSwitchApplication.DepartmentDetail.DetailsClass.MethodSetProperties._CreateWordDocPrinter_CanInvoke,
                        global::LightSwitchApplication.DepartmentDetail.DetailsClass.MethodSetProperties._CreateWordDocPrinter_InvokeMethod);
                private static void _CreateWordDocPrinter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DepartmentDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentDetail, global::LightSwitchApplication.DepartmentDetail.DetailsClass>.Data> c, global::LightSwitchApplication.DepartmentDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateWordDocPrinterMethod, sf);
                }
                private static global::System.Exception _CreateWordDocPrinter_CanInvoke(global::LightSwitchApplication.DepartmentDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CreateWordDocPrinter_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CreateWordDocPrinter_InvokeMethod(global::LightSwitchApplication.DepartmentDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CreateWordDocPrinter_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class DepartmentsWithHighIssues
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private DepartmentsWithHighIssues() : base("LightSwitchApplication:DepartmentsWithHighIssues")
        {
            global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static DepartmentsWithHighIssues CreateInstance()
        {
            return new global::LightSwitchApplication.DepartmentsWithHighIssues(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepartmentsWithHighIssues_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepartmentsWithHighIssues_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepartmentsWithHighIssues_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepartmentsWithHighIssues_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepartmentsWithHighIssues_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepartmentsWithHighIssues_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepartmentsWithHighIssues_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Departments_SelectionChanged();

        partial void Departments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Loaded(bool succeeded);

        partial void FormalityProperty_Changed();

        partial void FirstParagraphProperty_Changed();

        /// <summary>
        /// Gets the Departments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Department> Departments
        {
            get
            {
                return global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.GetValue(this, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties.Departments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> FormalityProperty
        {
            get 
            {
                return global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.GetValue(this, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties.FormalityProperty);
            }
            set
            {
                global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.SetValue(this, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties.FormalityProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FormalityProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FirstParagraphProperty
        {
            get 
            {
                return global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.GetValue(this, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties.FirstParagraphProperty);
            }
            set
            {
                global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.SetValue(this, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties.FirstParagraphProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirstParagraphProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the DoMailMerge screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DoMailMerge()
        {
            this.Details.Methods.DoMailMerge.CreateInvocation().Execute();
        }
        partial void DoMailMerge_CanExecute(ref bool result);
        partial void DoMailMerge_Execute();

        /// <summary>
        /// Calls the DoMailMergeInCode screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DoMailMergeInCode()
        {
            this.Details.Methods.DoMailMergeInCode.CreateInvocation().Execute();
        }
        partial void DoMailMergeInCode_CanExecute(ref bool result);
        partial void DoMailMergeInCode_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySet, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.CommandSet, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties.Departments;
                var initializeCommandEntry = global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.CommandSetProperties.DoMailMerge;
                var initializeMethodEntry = global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.MethodSetProperties.DoMailMerge;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>.Entry
                __DepartmentsWithHighIssuesEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>.Entry(
                    global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.__DepartmentsWithHighIssues_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.__DepartmentsWithHighIssues_InvokeSavingEvent,
                    global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.__DepartmentsWithHighIssues_InvokeSavedEvent,
                    global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.__DepartmentsWithHighIssues_InvokeClosingEvent,
                    global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.__DepartmentsWithHighIssues_InvokeCreated,
                    global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.__DepartmentsWithHighIssues_InvokeActivated,
                    global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.__DepartmentsWithHighIssues_InvokeSaveErrorEvent);
            private static void __DepartmentsWithHighIssues_InvokeInitializeDataWorkspace(global::LightSwitchApplication.DepartmentsWithHighIssues s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.DepartmentsWithHighIssues_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __DepartmentsWithHighIssues_InvokeSavingEvent(global::LightSwitchApplication.DepartmentsWithHighIssues s)
            {
                bool handled = false;
                s.DepartmentsWithHighIssues_Saving(ref handled);
                return handled;
            }
            private static void __DepartmentsWithHighIssues_InvokeSavedEvent(global::LightSwitchApplication.DepartmentsWithHighIssues s)
            {
                s.DepartmentsWithHighIssues_Saved();
            }
            private static bool __DepartmentsWithHighIssues_InvokeClosingEvent(global::LightSwitchApplication.DepartmentsWithHighIssues s)
            {
                bool cancel = false;
                s.DepartmentsWithHighIssues_Closing(ref cancel);
                return cancel;
            }
            private static void __DepartmentsWithHighIssues_InvokeCreated(global::LightSwitchApplication.DepartmentsWithHighIssues s)
            {
                s.DepartmentsWithHighIssues_Created();
            }
            private static void __DepartmentsWithHighIssues_InvokeActivated(global::LightSwitchApplication.DepartmentsWithHighIssues s)
            {
                s.DepartmentsWithHighIssues_Activated();
            }
            private static bool __DepartmentsWithHighIssues_InvokeSaveErrorEvent(global::LightSwitchApplication.DepartmentsWithHighIssues s, global::System.Exception ex)
            {
                bool handled = false;
                s.DepartmentsWithHighIssues_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable DepartmentsQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Departments;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::LightSwitchApplication.Department>.Data _Departments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::System.Nullable<bool>>.Data _FormalityProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, string>.Data _FirstParagraphProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>.Data _DoMailMergeCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>.Data _DoMailMergeInCodeCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>.Data _DoMailMergeMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>.Data _DoMailMergeInCodeMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::LightSwitchApplication.Department> Departments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::LightSwitchApplication.Department>)base.GetItem(global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties.Departments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::System.Nullable<bool>> FormalityProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::System.Nullable<bool>>)base.GetItem(global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties.FormalityProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, string> FirstParagraphProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties.FirstParagraphProperty);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass> DoMailMerge
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>)base.GetItem(global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.CommandSetProperties.DoMailMerge);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass> DoMailMergeInCode
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>)base.GetItem(global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.CommandSetProperties.DoMailMergeInCode);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass> DoMailMerge
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>)base.GetItem(global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.MethodSetProperties.DoMailMerge);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass> DoMailMergeInCode
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>)base.GetItem(global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.MethodSetProperties.DoMailMergeInCode);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::LightSwitchApplication.Department>.Entry
                    Departments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::LightSwitchApplication.Department>.Entry(
                        "Departments",
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties._Departments_Stub,
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties._Departments_Validate,
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties._Departments_CreateQuery,
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties._Departments_SelectionChanged,
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties._Departments_OnCollectionChanged,
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties._Departments_OnLoaded);
                private static void _Departments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::LightSwitchApplication.Department>.Data> c, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass d, object sf)
                {
                    c(d, ref d._Departments, sf);
                }
                private static void _Departments_Validate(global::LightSwitchApplication.DepartmentsWithHighIssues s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Departments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Departments_CreateQuery(global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass d, object[] args)
                {
                    return d.DepartmentsQuery();
                }
                private static void _Departments_SelectionChanged(global::LightSwitchApplication.DepartmentsWithHighIssues s)
                {
                    s.Departments_SelectionChanged();
                }
                private static void _Departments_OnCollectionChanged(global::LightSwitchApplication.DepartmentsWithHighIssues s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Departments_Changed(e);
                }
                private static void _Departments_OnLoaded(global::LightSwitchApplication.DepartmentsWithHighIssues s, bool succeeded)
                {
                    s.Departments_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::System.Nullable<bool>>.Entry
                    FormalityProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "FormalityProperty",
                        false,
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties._FormalityProperty_Stub,
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties._FormalityProperty_Validate,
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties._FormalityProperty_OnValueChanged);
                private static void _FormalityProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass d, object sf)
                {
                    c(d, ref d._FormalityProperty, sf);
                }
                private static void _FormalityProperty_Validate(global::LightSwitchApplication.DepartmentsWithHighIssues s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FormalityProperty_Validate(r);
                }
                private static void _FormalityProperty_OnValueChanged(global::LightSwitchApplication.DepartmentsWithHighIssues s)
                {
                    s.FormalityProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, string>.Entry
                    FirstParagraphProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, string>.Entry(
                        "FirstParagraphProperty",
                        false,
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties._FirstParagraphProperty_Stub,
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties._FirstParagraphProperty_Validate,
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.PropertySetProperties._FirstParagraphProperty_OnValueChanged);
                private static void _FirstParagraphProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, string>.Data> c, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass d, object sf)
                {
                    c(d, ref d._FirstParagraphProperty, sf);
                }
                private static void _FirstParagraphProperty_Validate(global::LightSwitchApplication.DepartmentsWithHighIssues s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FirstParagraphProperty_Validate(r);
                }
                private static void _FirstParagraphProperty_OnValueChanged(global::LightSwitchApplication.DepartmentsWithHighIssues s)
                {
                    s.FirstParagraphProperty_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>.Entry
                    DoMailMerge = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>.Entry(
                        "DoMailMerge",
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.CommandSetProperties._DoMailMerge_Stub,
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.CommandSetProperties._DoMailMerge_CreateExecutableObject);
                private static void _DoMailMerge_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>.Data> c, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass d, object sf)
                {
                    c(d, ref d._DoMailMergeCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DoMailMerge_CreateExecutableObject(global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass)d).Methods.DoMailMerge.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>.Entry
                    DoMailMergeInCode = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>.Entry(
                        "DoMailMergeInCode",
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.CommandSetProperties._DoMailMergeInCode_Stub,
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.CommandSetProperties._DoMailMergeInCode_CreateExecutableObject);
                private static void _DoMailMergeInCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>.Data> c, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass d, object sf)
                {
                    c(d, ref d._DoMailMergeInCodeCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DoMailMergeInCode_CreateExecutableObject(global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass)d).Methods.DoMailMergeInCode.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>.Entry
                    DoMailMerge = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>.Entry(
                        "DoMailMerge",
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.MethodSetProperties._DoMailMerge_Stub,
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.MethodSetProperties._DoMailMerge_CanInvoke,
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.MethodSetProperties._DoMailMerge_InvokeMethod);
                private static void _DoMailMerge_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>.Data> c, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass d, object sf)
                {
                    c(d, ref d._DoMailMergeMethod, sf);
                }
                private static global::System.Exception _DoMailMerge_CanInvoke(global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DoMailMerge_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DoMailMerge_InvokeMethod(global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DoMailMerge_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>.Entry
                    DoMailMergeInCode = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>.Entry(
                        "DoMailMergeInCode",
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.MethodSetProperties._DoMailMergeInCode_Stub,
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.MethodSetProperties._DoMailMergeInCode_CanInvoke,
                        global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass.MethodSetProperties._DoMailMergeInCode_InvokeMethod);
                private static void _DoMailMergeInCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DepartmentsWithHighIssues, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass>.Data> c, global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass d, object sf)
                {
                    c(d, ref d._DoMailMergeInCodeMethod, sf);
                }
                private static global::System.Exception _DoMailMergeInCode_CanInvoke(global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DoMailMergeInCode_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DoMailMergeInCode_InvokeMethod(global::LightSwitchApplication.DepartmentsWithHighIssues.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DoMailMergeInCode_Execute();
                }

            }
        }
    }
}

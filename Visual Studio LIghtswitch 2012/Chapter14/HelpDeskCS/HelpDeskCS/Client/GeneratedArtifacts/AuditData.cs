//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Original file name:
// Generation date: 31/05/2013 15:55:42
namespace LightSwitchApplication.Implementation
{
    
    /// <summary>
    /// There are no comments for AuditDataObjectContext in the schema.
    /// </summary>
    public partial class AuditDataObjectContext : global::Microsoft.LightSwitch.ClientGenerated.Implementation.DataServiceContext
    {
        /// <summary>
        /// Initialize a new AuditDataObjectContext object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        public AuditDataObjectContext(global::System.Uri serviceRoot) : 
                base(serviceRoot)
        {
            this.ResolveName = new global::System.Func<global::System.Type, string>(this.ResolveNameFromType);
            this.ResolveType = new global::System.Func<string, global::System.Type>(this.ResolveTypeFromName);
            this.OnContextCreated();
        }
        partial void OnContextCreated();
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        protected global::System.Type ResolveTypeFromName(string typeName)
        {
            if (typeName.StartsWith("LightSwitchApplication", global::System.StringComparison.Ordinal))
            {
                return this.GetType().Assembly.GetType(string.Concat("LightSwitchApplication.Implementation", typeName.Substring(22)), false);
            }
            return null;
        }
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        protected string ResolveNameFromType(global::System.Type clientType)
        {
            if (clientType.Namespace.Equals("LightSwitchApplication.Implementation", global::System.StringComparison.Ordinal))
            {
                return string.Concat("LightSwitchApplication.", clientType.Name);
            }
            return null;
        }
        /// <summary>
        /// There are no comments for AuditDetails in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        public global::System.Data.Services.Client.DataServiceQuery<AuditDetail> AuditDetails
        {
            get
            {
                if ((this._AuditDetails == null))
                {
                    this._AuditDetails = base.CreateQuery<AuditDetail>("AuditDetails");
                }
                return this._AuditDetails;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        private global::System.Data.Services.Client.DataServiceQuery<AuditDetail> _AuditDetails;
        /// <summary>
        /// There are no comments for AuditDetails in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        public void AddToAuditDetails(AuditDetail auditDetail)
        {
            base.AddObject("AuditDetails", auditDetail);
        }
    }
    /// <summary>
    /// There are no comments for LightSwitchApplication.AuditDetail in the schema.
    /// </summary>
    /// <KeyProperties>
    /// AuditID
    /// </KeyProperties>
    [global::System.Data.Services.Common.EntitySetAttribute("AuditDetails")]
    [global::System.Data.Services.Common.DataServiceKeyAttribute("AuditID")]
    public partial class AuditDetail : global::Microsoft.LightSwitch.ClientGenerated.Implementation.EntityBase, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new AuditDetail object.
        /// </summary>
        /// <param name="auditID">Initial value of AuditID.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        public static AuditDetail CreateAuditDetail(int auditID)
        {
            AuditDetail auditDetail = new AuditDetail();
            auditDetail.AuditID = auditID;
            return auditDetail;
        }
        /// <summary>
        /// There are no comments for Property AuditID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        public int AuditID
        {
            get
            {
                return this._AuditID;
            }
            set
            {
                this.OnAuditIDChanging(value);
                if (object.Equals(this.AuditID, value))
                {
                    return;
                }
                this._AuditID = value;
                this.OnAuditIDChanged();
                this.OnPropertyChanged("AuditID");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        private int _AuditID;
        partial void OnAuditIDChanging(int value);
        partial void OnAuditIDChanged();
        /// <summary>
        /// There are no comments for Property AuditDesc in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        public string AuditDesc
        {
            get
            {
                return this._AuditDesc;
            }
            set
            {
                this.OnAuditDescChanging(value);
                if (object.Equals(this.AuditDesc, value))
                {
                    return;
                }
                this._AuditDesc = value;
                this.OnAuditDescChanged();
                this.OnPropertyChanged("AuditDesc");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        private string _AuditDesc;
        partial void OnAuditDescChanging(string value);
        partial void OnAuditDescChanged();
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Services.Design", "1.0.0")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
}

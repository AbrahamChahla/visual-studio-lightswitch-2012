//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Inserting(global::LightSwitchApplication.Engineer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Inserted(global::LightSwitchApplication.Engineer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Updating(global::LightSwitchApplication.Engineer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Updated(global::LightSwitchApplication.Engineer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Deleting(global::LightSwitchApplication.Engineer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Deleted(global::LightSwitchApplication.Engineer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Validate(global::LightSwitchApplication.Engineer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Engineers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Engineer, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Inserting(global::LightSwitchApplication.Issue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Inserted(global::LightSwitchApplication.Issue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Updating(global::LightSwitchApplication.Issue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Updated(global::LightSwitchApplication.Issue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Deleting(global::LightSwitchApplication.Issue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Deleted(global::LightSwitchApplication.Issue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Validate(global::LightSwitchApplication.Issue entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Issue, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_Inserting(global::LightSwitchApplication.IssueStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_Inserted(global::LightSwitchApplication.IssueStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_Updating(global::LightSwitchApplication.IssueStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_Updated(global::LightSwitchApplication.IssueStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_Deleting(global::LightSwitchApplication.IssueStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_Deleted(global::LightSwitchApplication.IssueStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_Validate(global::LightSwitchApplication.IssueStatus entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueStatusSet_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IssueStatus, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Inserting(global::LightSwitchApplication.Skill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Inserted(global::LightSwitchApplication.Skill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Updating(global::LightSwitchApplication.Skill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Updated(global::LightSwitchApplication.Skill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Deleting(global::LightSwitchApplication.Skill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Deleted(global::LightSwitchApplication.Skill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Validate(global::LightSwitchApplication.Skill entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Skill, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_Inserting(global::LightSwitchApplication.EngineerSkill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_Inserted(global::LightSwitchApplication.EngineerSkill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_Updating(global::LightSwitchApplication.EngineerSkill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_Updated(global::LightSwitchApplication.EngineerSkill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_Deleting(global::LightSwitchApplication.EngineerSkill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_Deleted(global::LightSwitchApplication.EngineerSkill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_Validate(global::LightSwitchApplication.EngineerSkill entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EngineerSkills_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EngineerSkill, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Engineer>
                __EngineersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Engineer>(
                    "Engineers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Engineers_Filter);
            private static bool __Engineers_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Engineers_CanInsert(ref result);
                return result;
            }
            private static bool __Engineers_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Engineers_CanUpdate(ref result);
                return result;
            }
            private static bool __Engineers_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Engineers_CanDelete(ref result);
                return result;
            }
            private static bool __Engineers_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Engineers_CanRead(ref result);
                return result;
            }
            private static void __Engineers_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Engineer e)
            {
                d.Engineers_Inserting(e);
            }
            private static void __Engineers_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Engineer e)
            {
                d.Engineers_Inserted(e);
            }
            private static void __Engineers_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Engineer e)
            {
                d.Engineers_Updating(e);
            }
            private static void __Engineers_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Engineer e)
            {
                d.Engineers_Updated(e);
            }
            private static void __Engineers_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Engineer e)
            {
                d.Engineers_Deleting(e);
            }
            private static void __Engineers_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Engineer e)
            {
                d.Engineers_Deleted(e);
            }
            private static void __Engineers_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Engineer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Engineers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Engineer, bool>> __Engineers_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Engineer, bool>> filter = null;
                d.Engineers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>
                __IssuesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>(
                    "Issues",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Filter);
            private static bool __Issues_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Issues_CanInsert(ref result);
                return result;
            }
            private static bool __Issues_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Issues_CanUpdate(ref result);
                return result;
            }
            private static bool __Issues_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Issues_CanDelete(ref result);
                return result;
            }
            private static bool __Issues_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Issues_CanRead(ref result);
                return result;
            }
            private static void __Issues_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e)
            {
                d.Issues_Inserting(e);
            }
            private static void __Issues_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e)
            {
                d.Issues_Inserted(e);
            }
            private static void __Issues_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e)
            {
                d.Issues_Updating(e);
            }
            private static void __Issues_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e)
            {
                d.Issues_Updated(e);
            }
            private static void __Issues_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e)
            {
                d.Issues_Deleting(e);
            }
            private static void __Issues_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e)
            {
                d.Issues_Deleted(e);
            }
            private static void __Issues_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Issues_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Issue, bool>> __Issues_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Issue, bool>> filter = null;
                d.Issues_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IssueStatus>
                __IssueStatusSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IssueStatus>(
                    "IssueStatusSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueStatusSet_Filter);
            private static bool __IssueStatusSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueStatusSet_CanInsert(ref result);
                return result;
            }
            private static bool __IssueStatusSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueStatusSet_CanUpdate(ref result);
                return result;
            }
            private static bool __IssueStatusSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueStatusSet_CanDelete(ref result);
                return result;
            }
            private static bool __IssueStatusSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IssueStatusSet_CanRead(ref result);
                return result;
            }
            private static void __IssueStatusSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueStatus e)
            {
                d.IssueStatusSet_Inserting(e);
            }
            private static void __IssueStatusSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueStatus e)
            {
                d.IssueStatusSet_Inserted(e);
            }
            private static void __IssueStatusSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueStatus e)
            {
                d.IssueStatusSet_Updating(e);
            }
            private static void __IssueStatusSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueStatus e)
            {
                d.IssueStatusSet_Updated(e);
            }
            private static void __IssueStatusSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueStatus e)
            {
                d.IssueStatusSet_Deleting(e);
            }
            private static void __IssueStatusSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueStatus e)
            {
                d.IssueStatusSet_Deleted(e);
            }
            private static void __IssueStatusSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IssueStatus e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.IssueStatusSet_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IssueStatus, bool>> __IssueStatusSet_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IssueStatus, bool>> filter = null;
                d.IssueStatusSet_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Skill>
                __SkillsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Skill>(
                    "Skills",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Filter);
            private static bool __Skills_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Skills_CanInsert(ref result);
                return result;
            }
            private static bool __Skills_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Skills_CanUpdate(ref result);
                return result;
            }
            private static bool __Skills_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Skills_CanDelete(ref result);
                return result;
            }
            private static bool __Skills_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Skills_CanRead(ref result);
                return result;
            }
            private static void __Skills_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e)
            {
                d.Skills_Inserting(e);
            }
            private static void __Skills_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e)
            {
                d.Skills_Inserted(e);
            }
            private static void __Skills_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e)
            {
                d.Skills_Updating(e);
            }
            private static void __Skills_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e)
            {
                d.Skills_Updated(e);
            }
            private static void __Skills_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e)
            {
                d.Skills_Deleting(e);
            }
            private static void __Skills_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e)
            {
                d.Skills_Deleted(e);
            }
            private static void __Skills_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Skills_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Skill, bool>> __Skills_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Skill, bool>> filter = null;
                d.Skills_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EngineerSkill>
                __EngineerSkillsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EngineerSkill>(
                    "EngineerSkills",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EngineerSkills_Filter);
            private static bool __EngineerSkills_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EngineerSkills_CanInsert(ref result);
                return result;
            }
            private static bool __EngineerSkills_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EngineerSkills_CanUpdate(ref result);
                return result;
            }
            private static bool __EngineerSkills_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EngineerSkills_CanDelete(ref result);
                return result;
            }
            private static bool __EngineerSkills_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EngineerSkills_CanRead(ref result);
                return result;
            }
            private static void __EngineerSkills_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EngineerSkill e)
            {
                d.EngineerSkills_Inserting(e);
            }
            private static void __EngineerSkills_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EngineerSkill e)
            {
                d.EngineerSkills_Inserted(e);
            }
            private static void __EngineerSkills_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EngineerSkill e)
            {
                d.EngineerSkills_Updating(e);
            }
            private static void __EngineerSkills_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EngineerSkill e)
            {
                d.EngineerSkills_Updated(e);
            }
            private static void __EngineerSkills_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EngineerSkill e)
            {
                d.EngineerSkills_Deleting(e);
            }
            private static void __EngineerSkills_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EngineerSkill e)
            {
                d.EngineerSkills_Deleted(e);
            }
            private static void __EngineerSkills_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EngineerSkill e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.EngineerSkills_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EngineerSkill, bool>> __EngineerSkills_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EngineerSkill, bool>> filter = null;
                d.EngineerSkills_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}

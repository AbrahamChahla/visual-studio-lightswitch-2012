

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class AppOption : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the AppOption entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AppOption()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AppOption(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.AppOption> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.AppOption.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOption_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppOption_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.AppOption.DetailsClass.GetValue(this, global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.AppOption.DetailsClass.SetValue(this, global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.AppOption.DetailsClass.GetValue(this, global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.AppOption.DetailsClass.SetValue(this, global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SMTPServer
        {
            get
            {
                return global::LightSwitchApplication.AppOption.DetailsClass.GetValue(this, global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.SMTPServer);
            }
            set
            {
                global::LightSwitchApplication.AppOption.DetailsClass.SetValue(this, global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.SMTPServer, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPServer_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPServer_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPServer_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SMTPPort
        {
            get
            {
                return global::LightSwitchApplication.AppOption.DetailsClass.GetValue(this, global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.SMTPPort);
            }
            set
            {
                global::LightSwitchApplication.AppOption.DetailsClass.SetValue(this, global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.SMTPPort, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPPort_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPPort_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPPort_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SMTPUsername
        {
            get
            {
                return global::LightSwitchApplication.AppOption.DetailsClass.GetValue(this, global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.SMTPUsername);
            }
            set
            {
                global::LightSwitchApplication.AppOption.DetailsClass.SetValue(this, global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.SMTPUsername, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPUsername_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPUsername_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPUsername_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SMTPPassword
        {
            get
            {
                return global::LightSwitchApplication.AppOption.DetailsClass.GetValue(this, global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.SMTPPassword);
            }
            set
            {
                global::LightSwitchApplication.AppOption.DetailsClass.SetValue(this, global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.SMTPPassword, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPPassword_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPPassword_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPPassword_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ReportingServicesURL
        {
            get
            {
                return global::LightSwitchApplication.AppOption.DetailsClass.GetValue(this, global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.ReportingServicesURL);
            }
            set
            {
                global::LightSwitchApplication.AppOption.DetailsClass.SetValue(this, global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.ReportingServicesURL, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingServicesURL_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingServicesURL_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingServicesURL_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.AppOption,
                global::LightSwitchApplication.AppOption.DetailsClass,
                global::LightSwitchApplication.AppOption.DetailsClass.IImplementation,
                global::LightSwitchApplication.AppOption.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass>.Entry
                __AppOptionEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass>.Entry(
                    global::LightSwitchApplication.AppOption.DetailsClass.__AppOption_CreateNew,
                    global::LightSwitchApplication.AppOption.DetailsClass.__AppOption_Created,
                    global::LightSwitchApplication.AppOption.DetailsClass.__AppOption_AllowSaveWithErrors);
            private static global::LightSwitchApplication.AppOption __AppOption_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.AppOption> es)
            {
                return new global::LightSwitchApplication.AppOption(es);
            }
            private static void __AppOption_Created(global::LightSwitchApplication.AppOption e)
            {
                e.AppOption_Created();
            }
            private static bool __AppOption_AllowSaveWithErrors(global::LightSwitchApplication.AppOption e)
            {
                bool result = false;
                e.AppOption_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.AppOption.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string> SMTPServer
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.SMTPServer) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string> SMTPPort
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.SMTPPort) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string> SMTPUsername
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.SMTPUsername) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string> SMTPPassword
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.SMTPPassword) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string> ReportingServicesURL
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties.ReportingServicesURL) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string SMTPServer { get; set; }
                new string SMTPPort { get; set; }
                new string SMTPUsername { get; set; }
                new string SMTPPassword { get; set; }
                new string ReportingServicesURL { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AppOption.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, int>.Data> c, global::LightSwitchApplication.AppOption.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.AppOption e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.AppOption e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.AppOption.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.AppOption.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.AppOption e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AppOption.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.AppOption.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.AppOption e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.AppOption e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.AppOption.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.AppOption.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.AppOption e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Entry
                    SMTPServer = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Entry(
                        "SMTPServer",
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPServer_Stub,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPServer_ComputeIsReadOnly,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPServer_Validate,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPServer_GetImplementationValue,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPServer_SetImplementationValue,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPServer_OnValueChanged);
                private static void _SMTPServer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AppOption.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Data> c, global::LightSwitchApplication.AppOption.DetailsClass d, object sf)
                {
                    c(d, ref d._SMTPServer, sf);
                }
                private static bool _SMTPServer_ComputeIsReadOnly(global::LightSwitchApplication.AppOption e)
                {
                    bool result = false;
                    e.SMTPServer_IsReadOnly(ref result);
                    return result;
                }
                private static void _SMTPServer_Validate(global::LightSwitchApplication.AppOption e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SMTPServer_Validate(r);
                }
                private static string _SMTPServer_GetImplementationValue(global::LightSwitchApplication.AppOption.DetailsClass d)
                {
                    return d.ImplementationEntity.SMTPServer;
                }
                private static void _SMTPServer_SetImplementationValue(global::LightSwitchApplication.AppOption.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SMTPServer = v;
                }
                private static void _SMTPServer_OnValueChanged(global::LightSwitchApplication.AppOption e)
                {
                    e.SMTPServer_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Entry
                    SMTPPort = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Entry(
                        "SMTPPort",
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPPort_Stub,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPPort_ComputeIsReadOnly,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPPort_Validate,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPPort_GetImplementationValue,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPPort_SetImplementationValue,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPPort_OnValueChanged);
                private static void _SMTPPort_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AppOption.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Data> c, global::LightSwitchApplication.AppOption.DetailsClass d, object sf)
                {
                    c(d, ref d._SMTPPort, sf);
                }
                private static bool _SMTPPort_ComputeIsReadOnly(global::LightSwitchApplication.AppOption e)
                {
                    bool result = false;
                    e.SMTPPort_IsReadOnly(ref result);
                    return result;
                }
                private static void _SMTPPort_Validate(global::LightSwitchApplication.AppOption e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SMTPPort_Validate(r);
                }
                private static string _SMTPPort_GetImplementationValue(global::LightSwitchApplication.AppOption.DetailsClass d)
                {
                    return d.ImplementationEntity.SMTPPort;
                }
                private static void _SMTPPort_SetImplementationValue(global::LightSwitchApplication.AppOption.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SMTPPort = v;
                }
                private static void _SMTPPort_OnValueChanged(global::LightSwitchApplication.AppOption e)
                {
                    e.SMTPPort_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Entry
                    SMTPUsername = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Entry(
                        "SMTPUsername",
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPUsername_Stub,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPUsername_ComputeIsReadOnly,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPUsername_Validate,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPUsername_GetImplementationValue,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPUsername_SetImplementationValue,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPUsername_OnValueChanged);
                private static void _SMTPUsername_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AppOption.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Data> c, global::LightSwitchApplication.AppOption.DetailsClass d, object sf)
                {
                    c(d, ref d._SMTPUsername, sf);
                }
                private static bool _SMTPUsername_ComputeIsReadOnly(global::LightSwitchApplication.AppOption e)
                {
                    bool result = false;
                    e.SMTPUsername_IsReadOnly(ref result);
                    return result;
                }
                private static void _SMTPUsername_Validate(global::LightSwitchApplication.AppOption e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SMTPUsername_Validate(r);
                }
                private static string _SMTPUsername_GetImplementationValue(global::LightSwitchApplication.AppOption.DetailsClass d)
                {
                    return d.ImplementationEntity.SMTPUsername;
                }
                private static void _SMTPUsername_SetImplementationValue(global::LightSwitchApplication.AppOption.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SMTPUsername = v;
                }
                private static void _SMTPUsername_OnValueChanged(global::LightSwitchApplication.AppOption e)
                {
                    e.SMTPUsername_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Entry
                    SMTPPassword = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Entry(
                        "SMTPPassword",
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPPassword_Stub,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPPassword_ComputeIsReadOnly,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPPassword_Validate,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPPassword_GetImplementationValue,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPPassword_SetImplementationValue,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._SMTPPassword_OnValueChanged);
                private static void _SMTPPassword_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AppOption.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Data> c, global::LightSwitchApplication.AppOption.DetailsClass d, object sf)
                {
                    c(d, ref d._SMTPPassword, sf);
                }
                private static bool _SMTPPassword_ComputeIsReadOnly(global::LightSwitchApplication.AppOption e)
                {
                    bool result = false;
                    e.SMTPPassword_IsReadOnly(ref result);
                    return result;
                }
                private static void _SMTPPassword_Validate(global::LightSwitchApplication.AppOption e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SMTPPassword_Validate(r);
                }
                private static string _SMTPPassword_GetImplementationValue(global::LightSwitchApplication.AppOption.DetailsClass d)
                {
                    return d.ImplementationEntity.SMTPPassword;
                }
                private static void _SMTPPassword_SetImplementationValue(global::LightSwitchApplication.AppOption.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SMTPPassword = v;
                }
                private static void _SMTPPassword_OnValueChanged(global::LightSwitchApplication.AppOption e)
                {
                    e.SMTPPassword_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Entry
                    ReportingServicesURL = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Entry(
                        "ReportingServicesURL",
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._ReportingServicesURL_Stub,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._ReportingServicesURL_ComputeIsReadOnly,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._ReportingServicesURL_Validate,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._ReportingServicesURL_GetImplementationValue,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._ReportingServicesURL_SetImplementationValue,
                        global::LightSwitchApplication.AppOption.DetailsClass.PropertySetProperties._ReportingServicesURL_OnValueChanged);
                private static void _ReportingServicesURL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AppOption.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Data> c, global::LightSwitchApplication.AppOption.DetailsClass d, object sf)
                {
                    c(d, ref d._ReportingServicesURL, sf);
                }
                private static bool _ReportingServicesURL_ComputeIsReadOnly(global::LightSwitchApplication.AppOption e)
                {
                    bool result = false;
                    e.ReportingServicesURL_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReportingServicesURL_Validate(global::LightSwitchApplication.AppOption e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReportingServicesURL_Validate(r);
                }
                private static string _ReportingServicesURL_GetImplementationValue(global::LightSwitchApplication.AppOption.DetailsClass d)
                {
                    return d.ImplementationEntity.ReportingServicesURL;
                }
                private static void _ReportingServicesURL_SetImplementationValue(global::LightSwitchApplication.AppOption.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ReportingServicesURL = v;
                }
                private static void _ReportingServicesURL_OnValueChanged(global::LightSwitchApplication.AppOption e)
                {
                    e.ReportingServicesURL_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Data _SMTPServer;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Data _SMTPPort;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Data _SMTPUsername;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Data _SMTPPassword;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AppOption, global::LightSwitchApplication.AppOption.DetailsClass, string>.Data _ReportingServicesURL;
            
        }
    
        #endregion
    }
    
    #endregion
}

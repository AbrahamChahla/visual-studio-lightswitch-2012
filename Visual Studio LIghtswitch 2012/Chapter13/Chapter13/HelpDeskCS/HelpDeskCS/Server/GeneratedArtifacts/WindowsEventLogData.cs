//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "EventLog_EventEntry", "LogSource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WindowsEventLogData.Implementation.LogSource), "LogEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WindowsEventLogData.Implementation.LogEntry), true)]

#endregion

namespace WindowsEventLogData.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WindowsEventLogDataObjectContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WindowsEventLogDataObjectContext object using the connection string found in the 'WindowsEventLogDataObjectContext' section of the application configuration file.
        /// </summary>
        public WindowsEventLogDataObjectContext() : base("name=WindowsEventLogDataObjectContext", "WindowsEventLogDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WindowsEventLogDataObjectContext object.
        /// </summary>
        public WindowsEventLogDataObjectContext(string connectionString) : base(connectionString, "WindowsEventLogDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WindowsEventLogDataObjectContext object.
        /// </summary>
        public WindowsEventLogDataObjectContext(EntityConnection connection) : base(connection, "WindowsEventLogDataObjectContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LogEntry> LogEntries
        {
            get
            {
                if ((_LogEntries == null))
                {
                    _LogEntries = base.CreateObjectSet<LogEntry>("LogEntries");
                }
                return _LogEntries;
            }
        }
        private ObjectSet<LogEntry> _LogEntries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LogSource> LogSources
        {
            get
            {
                if ((_LogSources == null))
                {
                    _LogSources = base.CreateObjectSet<LogSource>("LogSources");
                }
                return _LogSources;
            }
        }
        private ObjectSet<LogSource> _LogSources;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LogEntries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogEntries(LogEntry logEntry)
        {
            base.AddObject("LogEntries", logEntry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LogSources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogSources(LogSource logSource)
        {
            base.AddObject("LogSources", logSource);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="LogEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogEntry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LogEntry object.
        /// </summary>
        /// <param name="logEntryID">Initial value of the LogEntryID property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="eventDateTime">Initial value of the EventDateTime property.</param>
        public static LogEntry CreateLogEntry(global::System.Int32 logEntryID, global::System.String message, global::System.DateTime eventDateTime)
        {
            LogEntry logEntry = new LogEntry();
            logEntry.LogEntryID = logEntryID;
            logEntry.Message = message;
            logEntry.EventDateTime = eventDateTime;
            return logEntry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogEntryID
        {
            get
            {
                return _LogEntryID;
            }
            set
            {
                if (_LogEntryID != value)
                {
                    OnLogEntryIDChanging(value);
                    ReportPropertyChanging("LogEntryID");
                    _LogEntryID = value;
                    ReportPropertyChanged("LogEntryID");
                    OnLogEntryIDChanged();
                }
            }
        }
        private global::System.Int32 _LogEntryID;
        partial void OnLogEntryIDChanging(global::System.Int32 value);
        partial void OnLogEntryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = value;
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventDateTime
        {
            get
            {
                return _EventDateTime;
            }
            set
            {
                OnEventDateTimeChanging(value);
                ReportPropertyChanging("EventDateTime");
                _EventDateTime = value;
                ReportPropertyChanged("EventDateTime");
                OnEventDateTimeChanged();
            }
        }
        private global::System.DateTime _EventDateTime;
        partial void OnEventDateTimeChanging(global::System.DateTime value);
        partial void OnEventDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceName
        {
            get
            {
                return _SourceName;
            }
            set
            {
                OnSourceNameChanging(value);
                ReportPropertyChanging("SourceName");
                _SourceName = value;
                ReportPropertyChanged("SourceName");
                OnSourceNameChanged();
            }
        }
        private global::System.String _SourceName;
        partial void OnSourceNameChanging(global::System.String value);
        partial void OnSourceNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "EventLog_EventEntry", "LogSource")]
        public LogSource EventSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogSource>("LightSwitchApplication.EventLog_EventEntry", "LogSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogSource>("LightSwitchApplication.EventLog_EventEntry", "LogSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LogSource> EventSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogSource>("LightSwitchApplication.EventLog_EventEntry", "LogSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LogSource>("LightSwitchApplication.EventLog_EventEntry", "LogSource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="LogSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LogSource object.
        /// </summary>
        /// <param name="sourceName">Initial value of the SourceName property.</param>
        public static LogSource CreateLogSource(global::System.String sourceName)
        {
            LogSource logSource = new LogSource();
            logSource.SourceName = sourceName;
            return logSource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SourceName
        {
            get
            {
                return _SourceName;
            }
            set
            {
                if (_SourceName != value)
                {
                    OnSourceNameChanging(value);
                    ReportPropertyChanging("SourceName");
                    _SourceName = value;
                    ReportPropertyChanged("SourceName");
                    OnSourceNameChanged();
                }
            }
        }
        private global::System.String _SourceName;
        partial void OnSourceNameChanging(global::System.String value);
        partial void OnSourceNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "EventLog_EventEntry", "LogEntry")]
        public EntityCollection<LogEntry> EventEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LogEntry>("LightSwitchApplication.EventLog_EventEntry", "LogEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LogEntry>("LightSwitchApplication.EventLog_EventEntry", "LogEntry", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}

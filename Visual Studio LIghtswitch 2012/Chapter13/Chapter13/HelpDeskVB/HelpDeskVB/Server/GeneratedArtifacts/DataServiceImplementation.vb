'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Namespace LightSwitchApplication.Implementation
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class ApplicationDataDataService
        Inherits Global.Microsoft.LightSwitch.ServerGenerated.Implementation.DataService(Of Global.ApplicationData.Implementation.ApplicationDataObjectContext)
    
        Public Sub New()
            MyBase.New()
        End Sub
    
        Protected Overrides Function CreateDataService() As Global.Microsoft.LightSwitch.IDataService
            Return New Global.LightSwitchApplication.DataWorkspace().ApplicationData
        End Function
    
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class ApplicationDataServiceImplementation
        Inherits Global.Microsoft.LightSwitch.ServerGenerated.Implementation.DataServiceImplementation(Of Global.ApplicationData.Implementation.ApplicationDataObjectContext)
    
        Public Sub New(ByVal dataService As Global.Microsoft.LightSwitch.IDataService)
            MyBase.New(dataService)
        End Sub
    
    #Region "Queries"
    #End Region

    #Region "Protected methods"
        Protected Overrides Function CreateObject(ByVal type As Global.System.Type) As Object
            If (type Is GetType(Global.ApplicationData.Implementation.Engineer)) Then
                Return New Global.ApplicationData.Implementation.Engineer
            End If
            If (type Is GetType(Global.ApplicationData.Implementation.Issue)) Then
                Return New Global.ApplicationData.Implementation.Issue
            End If
            If (type Is GetType(Global.ApplicationData.Implementation.IssueStatus)) Then
                Return New Global.ApplicationData.Implementation.IssueStatus
            End If
            If (type Is GetType(Global.ApplicationData.Implementation.Skill)) Then
                Return New Global.ApplicationData.Implementation.Skill
            End If
            If (type Is GetType(Global.ApplicationData.Implementation.EngineerSkill)) Then
                Return New Global.ApplicationData.Implementation.EngineerSkill
            End If
            If (type Is GetType(Global.ApplicationData.Implementation.TimeTracking)) Then
                Return New Global.ApplicationData.Implementation.TimeTracking
            End If
            If (type Is GetType(Global.ApplicationData.Implementation.AppOption)) Then
                Return New Global.ApplicationData.Implementation.AppOption
            End If
            If (type Is GetType(Global.ApplicationData.Implementation.Priority)) Then
                Return New Global.ApplicationData.Implementation.Priority
            End If
            If (type Is GetType(Global.ApplicationData.Implementation.Office)) Then
                Return New Global.ApplicationData.Implementation.Office
            End If
    
            Return MyBase.CreateObject(type)
        End Function
    
        Protected Overrides Function CreateObjectContext() As Global.ApplicationData.Implementation.ApplicationDataObjectContext
            Dim assemblyName As String = Global.System.Reflection.Assembly.GetExecutingAssembly().GetName().Name
            Return New Global.ApplicationData.Implementation.ApplicationDataObjectContext(MyBase.GetEntityConnectionString( _
                "_IntrinsicData", _
                "res://" + assemblyName + "/ApplicationData.csdl|res://" + assemblyName + "/ApplicationData.ssdl|res://" + assemblyName + "/ApplicationData.msl", _
                "System.Data.SqlClient"))
        End Function
    
        Protected Overrides Function CreateEntityImplementation(Of T As Global.Microsoft.LightSwitch.IEntityObject)() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.Engineer)) Then
                Return New Global.ApplicationData.Implementation.Engineer()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.Issue)) Then
                Return New Global.ApplicationData.Implementation.Issue()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.IssueStatus)) Then
                Return New Global.ApplicationData.Implementation.IssueStatus()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.Skill)) Then
                Return New Global.ApplicationData.Implementation.Skill()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.EngineerSkill)) Then
                Return New Global.ApplicationData.Implementation.EngineerSkill()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.TimeTracking)) Then
                Return New Global.ApplicationData.Implementation.TimeTracking()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.AppOption)) Then
                Return New Global.ApplicationData.Implementation.AppOption()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.Priority)) Then
                Return New Global.ApplicationData.Implementation.Priority()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.Office)) Then
                Return New Global.ApplicationData.Implementation.Office()
            End If
            Return Nothing
        End Function
    
    #End Region
    
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class WindowsEventLogDataDataService
        Inherits Global.Microsoft.LightSwitch.ServerGenerated.Implementation.DataService(Of Global.WindowsEventLogData.Implementation.WindowsEventLogDataObjectContext)
    
        Public Sub New()
            MyBase.New()
        End Sub
    
        Protected Overrides Function CreateDataService() As Global.Microsoft.LightSwitch.IDataService
            Return New Global.LightSwitchApplication.DataWorkspace().WindowsEventLogData
        End Function
    
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class WindowsEventLogDataServiceImplementation
        Inherits Global.Microsoft.LightSwitch.ServerGenerated.Implementation.RiaDataServiceImplementation(Of Global.WindowsEventLogData.Implementation.WindowsEventLogDataObjectContext, Global.ApressExtensionVB.DataSources.WindowsEventLog)
    
        Public Sub New(ByVal dataService As Global.Microsoft.LightSwitch.IDataService)
            MyBase.New(dataService)
        End Sub
    
    #Region "Queries"
    #End Region

    #Region "Protected methods"
        Protected Overrides Function CreateObject(ByVal type As Global.System.Type) As Object
            If (type Is GetType(Global.WindowsEventLogData.Implementation.LogEntry)) Then
                Return New Global.WindowsEventLogData.Implementation.LogEntry
            End If
            If (type Is GetType(Global.WindowsEventLogData.Implementation.LogSource)) Then
                Return New Global.WindowsEventLogData.Implementation.LogSource
            End If
    
            Return MyBase.CreateObject(type)
        End Function
    
        Protected Overrides Function CreateObjectContext() As Global.WindowsEventLogData.Implementation.WindowsEventLogDataObjectContext
            Dim assemblyName As String = Global.System.Reflection.Assembly.GetExecutingAssembly().GetName().Name
            Return New Global.WindowsEventLogData.Implementation.WindowsEventLogDataObjectContext(MyBase.GetEntityConnectionString( _
                "WindowsEventLogData", _
                "res://" + assemblyName + "/WindowsEventLogData.csdl|res://" + assemblyName + "/WindowsEventLogData.ssdl|res://" + assemblyName + "/WindowsEventLogData.msl", _
                "System.Data.SqlClient"))
        End Function
    
        Protected Overrides Function CreateEntityImplementation(Of T As Global.Microsoft.LightSwitch.IEntityObject)() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.LogEntry)) Then
                Return New Global.WindowsEventLogData.Implementation.LogEntry()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.LogSource)) Then
                Return New Global.WindowsEventLogData.Implementation.LogSource()
            End If
            Return Nothing
        End Function
    
        Protected Overrides Function ConvertType(ByVal outerType As Global.System.Type) As Global.System.Type
            If (outerType Is GetType(Global.WindowsEventLogData.Implementation.LogEntry)) Then
                Return GetType(Global.ApressExtensionVB.LogEntry)
            End If
            If (outerType Is GetType(Global.WindowsEventLogData.Implementation.LogSource)) Then
                Return GetType(Global.ApressExtensionVB.LogSource)
            End If
            Return MyBase.ConvertType(outerType)
        End Function
    
        Protected Overrides Function ConvertEntity(ByVal outerEntity As Object) As Object
            Dim logEntry As Global.WindowsEventLogData.Implementation.LogEntry = TryCast(outerEntity, Global.WindowsEventLogData.Implementation.LogEntry)
            If (Not logEntry Is Nothing) Then
                Dim result As New Global.ApressExtensionVB.LogEntry
                result.LogEntryID = logEntry.LogEntryID
                result.Message = logEntry.Message
                result.EventDateTime = logEntry.EventDateTime
                result.SourceName = logEntry.SourceName
                Return result
            End If
            Dim logSource As Global.WindowsEventLogData.Implementation.LogSource = TryCast(outerEntity, Global.WindowsEventLogData.Implementation.LogSource)
            If (Not logSource Is Nothing) Then
                Dim result As New Global.ApressExtensionVB.LogSource
                result.SourceName = logSource.SourceName
                Return result
            End If
            Return Nothing
        End Function
    
        Protected Overrides Sub UpdateResult(ByVal outerEntity As Object, ByVal innerResult As Object)
            Dim outerLogEntry As Global.WindowsEventLogData.Implementation.LogEntry = TryCast(outerEntity, Global.WindowsEventLogData.Implementation.LogEntry)
            Dim innerLogEntry As Global.ApressExtensionVB.LogEntry = TryCast(innerResult, Global.ApressExtensionVB.LogEntry)
            If ((outerLogEntry IsNot Nothing) AndAlso (innerLogEntry IsNot Nothing)) Then
                outerLogEntry.LogEntryID = innerLogEntry.LogEntryID
                outerLogEntry.Message = innerLogEntry.Message
                outerLogEntry.EventDateTime = innerLogEntry.EventDateTime
                outerLogEntry.SourceName = innerLogEntry.SourceName
                Return
            End If
            Dim outerLogSource As Global.WindowsEventLogData.Implementation.LogSource = TryCast(outerEntity, Global.WindowsEventLogData.Implementation.LogSource)
            Dim innerLogSource As Global.ApressExtensionVB.LogSource = TryCast(innerResult, Global.ApressExtensionVB.LogSource)
            If ((outerLogSource IsNot Nothing) AndAlso (innerLogSource IsNot Nothing)) Then
                outerLogSource.SourceName = innerLogSource.SourceName
                Return
            End If
        End Sub
    
    #End Region
    
    End Class
    
    
    #Region "DataServiceImplementationFactory"
    <Global.System.ComponentModel.Composition.PartCreationPolicy(Global.System.ComponentModel.Composition.CreationPolicy.Shared)> _
    <Global.System.ComponentModel.Composition.Export(GetType(Global.Microsoft.LightSwitch.Internal.IDataServiceFactory))> _
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class DataServiceFactory
        Inherits Global.Microsoft.LightSwitch.ServerGenerated.Implementation.DataServiceFactory
    
        Protected Overrides Function CreateDataService(ByVal dataServiceType As Global.System.Type) As Global.Microsoft.LightSwitch.IDataService
            If dataServiceType.Equals(GetType(Global.LightSwitchApplication.ApplicationData)) Then
                Return New Global.LightSwitchApplication.ApplicationDataService()
            End If
            If dataServiceType.Equals(GetType(Global.LightSwitchApplication.WindowsEventLogData)) Then
                Return New Global.LightSwitchApplication.WindowsEventLogDataService()
            End If
            Return MyBase.CreateDataService(dataServiceType)
        End Function
    
        Protected Overrides Function CreateDataServiceImplementation(Of TDataService As Global.Microsoft.LightSwitch.IDataService)(ByVal dataService As TDataService) As Global.Microsoft.LightSwitch.Internal.IDataServiceImplementation
            If GetType(TDataService).Equals(GetType(Global.LightSwitchApplication.ApplicationData)) Then
                Return New Global.LightSwitchApplication.Implementation.ApplicationDataServiceImplementation(dataService)
            End If
            If GetType(TDataService).Equals(GetType(Global.LightSwitchApplication.WindowsEventLogData)) Then
                Return New Global.LightSwitchApplication.Implementation.WindowsEventLogDataServiceImplementation(dataService)
            End If
            Return MyBase.CreateDataServiceImplementation(dataService)
        End Function
    End Class
    #End Region
    
    <Global.System.ComponentModel.Composition.PartCreationPolicy(Global.System.ComponentModel.Composition.CreationPolicy.Shared)> _
    <Global.System.ComponentModel.Composition.Export(GetType(Global.Microsoft.LightSwitch.Internal.ITypeMappingProvider))> _
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class __TypeMapping
        Implements Global.Microsoft.LightSwitch.Internal.ITypeMappingProvider
        Private Function GetImplementationType(ByVal definitionType As Global.System.Type) As Global.System.Type Implements Global.Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType
            If GetType(Global.LightSwitchApplication.Engineer).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.Engineer)
            End If
            If GetType(Global.LightSwitchApplication.Issue).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.Issue)
            End If
            If GetType(Global.LightSwitchApplication.IssueStatus).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.IssueStatus)
            End If
            If GetType(Global.LightSwitchApplication.Skill).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.Skill)
            End If
            If GetType(Global.LightSwitchApplication.EngineerSkill).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.EngineerSkill)
            End If
            If GetType(Global.LightSwitchApplication.TimeTracking).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.TimeTracking)
            End If
            If GetType(Global.LightSwitchApplication.AppOption).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.AppOption)
            End If
            If GetType(Global.LightSwitchApplication.Priority).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.Priority)
            End If
            If GetType(Global.LightSwitchApplication.Office).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.Office)
            End If
            If GetType(Global.LightSwitchApplication.LogEntry).Equals(definitionType)
                Return GetType(Global.WindowsEventLogData.Implementation.LogEntry)
            End If
            If GetType(Global.LightSwitchApplication.LogSource).Equals(definitionType)
                Return GetType(Global.WindowsEventLogData.Implementation.LogSource)
            End If
            Return Nothing
        End Function
    End Class
End Namespace

Namespace ApplicationData.Implementation

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Partial Public Class Engineer
        Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _RowVersionImplementation() As Byte() Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation.RowVersion
            Get
                Return Me.RowVersion
            End Get
            Set(ByVal value As Byte())
                Me.RowVersion = value
            End Set
        End Property
        
        Private Property _SurnameImplementation() As String Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation.Surname
            Get
                Return Me.Surname
            End Get
            Set(ByVal value As String)
                Me.Surname = value
            End Set
        End Property
        
        Private Property _FirstnameImplementation() As String Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation.Firstname
            Get
                Return Me.Firstname
            End Get
            Set(ByVal value As String)
                Me.Firstname = value
            End Set
        End Property
        
        Private Property _DateOfBirthImplementation() As Date Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation.DateOfBirth
            Get
                Return Me.DateOfBirth
            End Get
            Set(ByVal value As Date)
                Me.DateOfBirth = value
            End Set
        End Property
        
        Private Property _LoginNameImplementation() As String Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation.LoginName
            Get
                Return Me.LoginName
            End Get
            Set(ByVal value As String)
                Me.LoginName = value
            End Set
        End Property
        
        Private Property _SSNImplementation() As String Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation.SSN
            Get
                Return Me.SSN
            End Get
            Set(ByVal value As String)
                Me.SSN = value
            End Set
        End Property
        
        Private Property _EngineerPhotoImplementation() As Byte() Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation.EngineerPhoto
            Get
                Return Me.EngineerPhoto
            End Get
            Set(ByVal value As Byte())
                Me.EngineerPhoto = value
            End Set
        End Property
        
        Private Property _SecurityVettedImplementation() As Boolean Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation.SecurityVetted
            Get
                Return Me.SecurityVetted
            End Get
            Set(ByVal value As Boolean)
                Me.SecurityVetted = value
            End Set
        End Property
        
        Private Property _ClearanceReferenceImplementation() As String Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation.ClearanceReference
            Get
                Return Me.ClearanceReference
            End Get
            Set(ByVal value As String)
                Me.ClearanceReference = value
            End Set
        End Property
        
        Private Property _VettingExpiryDateImplementation() As Global.System.Nullable(Of Date) Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation.VettingExpiryDate
            Get
                Return Me.VettingExpiryDate
            End Get
            Set(ByVal value As Global.System.Nullable(Of Date))
                Me.VettingExpiryDate = value
            End Set
        End Property
        
        Private Property _EmailAddressImplementation() As String Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation.EmailAddress
            Get
                Return Me.EmailAddress
            End Get
            Set(ByVal value As String)
                Me.EmailAddress = value
            End Set
        End Property
        
        Private ReadOnly Property _IssuesImplementation() As Global.System.Collections.IEnumerable Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation.Issues
            Get
                Return Me.Issues
            End Get
        End Property
        
        Private ReadOnly Property _EngineerIssuesImplementation() As Global.System.Collections.IEnumerable Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation.EngineerIssues
            Get
                Return Me.EngineerIssues
            End Get
        End Property
        
        Private ReadOnly Property _SubordinateImplementation() As Global.System.Collections.IEnumerable Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation.Subordinate
            Get
                Return Me.Subordinate
            End Get
        End Property
        
        Private Property _ManagerImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation.Manager
            Get
                Return Me.Manager
            End Get
            Set(ByVal value As Global.Microsoft.LightSwitch.Internal.IEntityImplementation)
                Me.Manager = DirectCast(value, Global.ApplicationData.Implementation.Engineer)
                If Me.__host IsNot Nothing Then
                    Me.__host.RaisePropertyChanged("Manager")
                End If
            End Set
        End Property
        
        Private ReadOnly Property _EngineerSkillsImplementation() As Global.System.Collections.IEnumerable Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation.EngineerSkills
            Get
                Return Me.EngineerSkills
            End Get
        End Property
        
        Private ReadOnly Property _TimeTrackingsImplementation() As Global.System.Collections.IEnumerable Implements Global.LightSwitchApplication.Engineer.DetailsClass.IImplementation.TimeTrackings
            Get
                Return Me.TimeTrackings
            End Get
        End Property
        
        Private Sub OnEngineer_EngineerChanged()
            If Me.__host IsNot Nothing Then
                Me.__host.RaisePropertyChanged("Manager")
            End If
        End Sub
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Partial Public Class Issue
        Implements Global.LightSwitchApplication.Issue.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.Issue.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _RowVersionImplementation() As Byte() Implements Global.LightSwitchApplication.Issue.DetailsClass.IImplementation.RowVersion
            Get
                Return Me.RowVersion
            End Get
            Set(ByVal value As Byte())
                Me.RowVersion = value
            End Set
        End Property
        
        Private Property _TargetEndDateTimeImplementation() As Date Implements Global.LightSwitchApplication.Issue.DetailsClass.IImplementation.TargetEndDateTime
            Get
                Return Me.TargetEndDateTime
            End Get
            Set(ByVal value As Date)
                Me.TargetEndDateTime = value
            End Set
        End Property
        
        Private Property _SubjectImplementation() As String Implements Global.LightSwitchApplication.Issue.DetailsClass.IImplementation.Subject
            Get
                Return Me.Subject
            End Get
            Set(ByVal value As String)
                Me.Subject = value
            End Set
        End Property
        
        Private Property _CreateDateTimeImplementation() As Date Implements Global.LightSwitchApplication.Issue.DetailsClass.IImplementation.CreateDateTime
            Get
                Return Me.CreateDateTime
            End Get
            Set(ByVal value As Date)
                Me.CreateDateTime = value
            End Set
        End Property
        
        Private Property _ProblemDescriptionImplementation() As String Implements Global.LightSwitchApplication.Issue.DetailsClass.IImplementation.ProblemDescription
            Get
                Return Me.ProblemDescription
            End Get
            Set(ByVal value As String)
                Me.ProblemDescription = value
            End Set
        End Property
        
        Private Property _AssignedToImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation Implements Global.LightSwitchApplication.Issue.DetailsClass.IImplementation.AssignedTo
            Get
                Return Me.AssignedTo
            End Get
            Set(ByVal value As Global.Microsoft.LightSwitch.Internal.IEntityImplementation)
                Me.AssignedTo = DirectCast(value, Global.ApplicationData.Implementation.Engineer)
                If Me.__host IsNot Nothing Then
                    Me.__host.RaisePropertyChanged("AssignedTo")
                End If
            End Set
        End Property
        
        Private Property _ClosedByEngineerImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation Implements Global.LightSwitchApplication.Issue.DetailsClass.IImplementation.ClosedByEngineer
            Get
                Return Me.ClosedByEngineer
            End Get
            Set(ByVal value As Global.Microsoft.LightSwitch.Internal.IEntityImplementation)
                Me.ClosedByEngineer = DirectCast(value, Global.ApplicationData.Implementation.Engineer)
                If Me.__host IsNot Nothing Then
                    Me.__host.RaisePropertyChanged("ClosedByEngineer")
                End If
            End Set
        End Property
        
        Private ReadOnly Property _TimeTrackingsImplementation() As Global.System.Collections.IEnumerable Implements Global.LightSwitchApplication.Issue.DetailsClass.IImplementation.TimeTrackings
            Get
                Return Me.TimeTrackings
            End Get
        End Property
        
        Private Property _PriorityImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation Implements Global.LightSwitchApplication.Issue.DetailsClass.IImplementation.Priority
            Get
                Return Me.Priority
            End Get
            Set(ByVal value As Global.Microsoft.LightSwitch.Internal.IEntityImplementation)
                Me.Priority = DirectCast(value, Global.ApplicationData.Implementation.Priority)
                If Me.__host IsNot Nothing Then
                    Me.__host.RaisePropertyChanged("Priority")
                End If
            End Set
        End Property
        
        Private Sub OnIssue_EngineerChanged()
            If Me.__host IsNot Nothing Then
                Me.__host.RaisePropertyChanged("AssignedTo")
            End If
        End Sub
        
        Private Sub OnIssue_Engineer1Changed()
            If Me.__host IsNot Nothing Then
                Me.__host.RaisePropertyChanged("ClosedByEngineer")
            End If
        End Sub
        
        Private Sub OnIssue_PriorityChanged()
            If Me.__host IsNot Nothing Then
                Me.__host.RaisePropertyChanged("Priority")
            End If
        End Sub
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Partial Public Class IssueStatus
        Implements Global.LightSwitchApplication.IssueStatus.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.IssueStatus.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _RowVersionImplementation() As Byte() Implements Global.LightSwitchApplication.IssueStatus.DetailsClass.IImplementation.RowVersion
            Get
                Return Me.RowVersion
            End Get
            Set(ByVal value As Byte())
                Me.RowVersion = value
            End Set
        End Property
        
        Private Property _StatusDescriptionImplementation() As String Implements Global.LightSwitchApplication.IssueStatus.DetailsClass.IImplementation.StatusDescription
            Get
                Return Me.StatusDescription
            End Get
            Set(ByVal value As String)
                Me.StatusDescription = value
            End Set
        End Property
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Partial Public Class Skill
        Implements Global.LightSwitchApplication.Skill.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.Skill.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _RowVersionImplementation() As Byte() Implements Global.LightSwitchApplication.Skill.DetailsClass.IImplementation.RowVersion
            Get
                Return Me.RowVersion
            End Get
            Set(ByVal value As Byte())
                Me.RowVersion = value
            End Set
        End Property
        
        Private Property _SkillDescriptionImplementation() As String Implements Global.LightSwitchApplication.Skill.DetailsClass.IImplementation.SkillDescription
            Get
                Return Me.SkillDescription
            End Get
            Set(ByVal value As String)
                Me.SkillDescription = value
            End Set
        End Property
        
        Private ReadOnly Property _EngineerSkillsImplementation() As Global.System.Collections.IEnumerable Implements Global.LightSwitchApplication.Skill.DetailsClass.IImplementation.EngineerSkills
            Get
                Return Me.EngineerSkills
            End Get
        End Property
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Partial Public Class EngineerSkill
        Implements Global.LightSwitchApplication.EngineerSkill.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.EngineerSkill.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _RowVersionImplementation() As Byte() Implements Global.LightSwitchApplication.EngineerSkill.DetailsClass.IImplementation.RowVersion
            Get
                Return Me.RowVersion
            End Get
            Set(ByVal value As Byte())
                Me.RowVersion = value
            End Set
        End Property
        
        Private Property _SkillImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation Implements Global.LightSwitchApplication.EngineerSkill.DetailsClass.IImplementation.Skill
            Get
                Return Me.Skill
            End Get
            Set(ByVal value As Global.Microsoft.LightSwitch.Internal.IEntityImplementation)
                Me.Skill = DirectCast(value, Global.ApplicationData.Implementation.Skill)
                If Me.__host IsNot Nothing Then
                    Me.__host.RaisePropertyChanged("Skill")
                End If
            End Set
        End Property
        
        Private Property _EngineerImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation Implements Global.LightSwitchApplication.EngineerSkill.DetailsClass.IImplementation.Engineer
            Get
                Return Me.Engineer
            End Get
            Set(ByVal value As Global.Microsoft.LightSwitch.Internal.IEntityImplementation)
                Me.Engineer = DirectCast(value, Global.ApplicationData.Implementation.Engineer)
                If Me.__host IsNot Nothing Then
                    Me.__host.RaisePropertyChanged("Engineer")
                End If
            End Set
        End Property
        
        Private Sub OnEngineerSkill_SkillChanged()
            If Me.__host IsNot Nothing Then
                Me.__host.RaisePropertyChanged("Skill")
            End If
        End Sub
        
        Private Sub OnEngineerSkill_EngineerChanged()
            If Me.__host IsNot Nothing Then
                Me.__host.RaisePropertyChanged("Engineer")
            End If
        End Sub
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Partial Public Class TimeTracking
        Implements Global.LightSwitchApplication.TimeTracking.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.TimeTracking.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _RowVersionImplementation() As Byte() Implements Global.LightSwitchApplication.TimeTracking.DetailsClass.IImplementation.RowVersion
            Get
                Return Me.RowVersion
            End Get
            Set(ByVal value As Byte())
                Me.RowVersion = value
            End Set
        End Property
        
        Private Property _DurationMinsImplementation() As Integer Implements Global.LightSwitchApplication.TimeTracking.DetailsClass.IImplementation.DurationMins
            Get
                Return Me.DurationMins
            End Get
            Set(ByVal value As Integer)
                Me.DurationMins = value
            End Set
        End Property
        
        Private Property _EngineerImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation Implements Global.LightSwitchApplication.TimeTracking.DetailsClass.IImplementation.Engineer
            Get
                Return Me.Engineer
            End Get
            Set(ByVal value As Global.Microsoft.LightSwitch.Internal.IEntityImplementation)
                Me.Engineer = DirectCast(value, Global.ApplicationData.Implementation.Engineer)
                If Me.__host IsNot Nothing Then
                    Me.__host.RaisePropertyChanged("Engineer")
                End If
            End Set
        End Property
        
        Private Property _IssueImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation Implements Global.LightSwitchApplication.TimeTracking.DetailsClass.IImplementation.Issue
            Get
                Return Me.Issue
            End Get
            Set(ByVal value As Global.Microsoft.LightSwitch.Internal.IEntityImplementation)
                Me.Issue = DirectCast(value, Global.ApplicationData.Implementation.Issue)
                If Me.__host IsNot Nothing Then
                    Me.__host.RaisePropertyChanged("Issue")
                End If
            End Set
        End Property
        
        Private Sub OnTimeTracking_EngineerChanged()
            If Me.__host IsNot Nothing Then
                Me.__host.RaisePropertyChanged("Engineer")
            End If
        End Sub
        
        Private Sub OnTimeTracking_IssueChanged()
            If Me.__host IsNot Nothing Then
                Me.__host.RaisePropertyChanged("Issue")
            End If
        End Sub
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Partial Public Class AppOption
        Implements Global.LightSwitchApplication.AppOption.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.AppOption.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _RowVersionImplementation() As Byte() Implements Global.LightSwitchApplication.AppOption.DetailsClass.IImplementation.RowVersion
            Get
                Return Me.RowVersion
            End Get
            Set(ByVal value As Byte())
                Me.RowVersion = value
            End Set
        End Property
        
        Private Property _SMTPServerImplementation() As String Implements Global.LightSwitchApplication.AppOption.DetailsClass.IImplementation.SMTPServer
            Get
                Return Me.SMTPServer
            End Get
            Set(ByVal value As String)
                Me.SMTPServer = value
            End Set
        End Property
        
        Private Property _SMTPPortImplementation() As String Implements Global.LightSwitchApplication.AppOption.DetailsClass.IImplementation.SMTPPort
            Get
                Return Me.SMTPPort
            End Get
            Set(ByVal value As String)
                Me.SMTPPort = value
            End Set
        End Property
        
        Private Property _SMTPUsernameImplementation() As String Implements Global.LightSwitchApplication.AppOption.DetailsClass.IImplementation.SMTPUsername
            Get
                Return Me.SMTPUsername
            End Get
            Set(ByVal value As String)
                Me.SMTPUsername = value
            End Set
        End Property
        
        Private Property _SMTPPasswordImplementation() As String Implements Global.LightSwitchApplication.AppOption.DetailsClass.IImplementation.SMTPPassword
            Get
                Return Me.SMTPPassword
            End Get
            Set(ByVal value As String)
                Me.SMTPPassword = value
            End Set
        End Property
        
        Private Property _ReportingServicesURLImplementation() As String Implements Global.LightSwitchApplication.AppOption.DetailsClass.IImplementation.ReportingServicesURL
            Get
                Return Me.ReportingServicesURL
            End Get
            Set(ByVal value As String)
                Me.ReportingServicesURL = value
            End Set
        End Property
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Partial Public Class Priority
        Implements Global.LightSwitchApplication.Priority.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.Priority.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _RowVersionImplementation() As Byte() Implements Global.LightSwitchApplication.Priority.DetailsClass.IImplementation.RowVersion
            Get
                Return Me.RowVersion
            End Get
            Set(ByVal value As Byte())
                Me.RowVersion = value
            End Set
        End Property
        
        Private Property _PriorityDescImplementation() As String Implements Global.LightSwitchApplication.Priority.DetailsClass.IImplementation.PriorityDesc
            Get
                Return Me.PriorityDesc
            End Get
            Set(ByVal value As String)
                Me.PriorityDesc = value
            End Set
        End Property
        
        Private ReadOnly Property _IssuesImplementation() As Global.System.Collections.IEnumerable Implements Global.LightSwitchApplication.Priority.DetailsClass.IImplementation.Issues
            Get
                Return Me.Issues
            End Get
        End Property
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Partial Public Class Office
        Implements Global.LightSwitchApplication.Office.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.Office.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _RowVersionImplementation() As Byte() Implements Global.LightSwitchApplication.Office.DetailsClass.IImplementation.RowVersion
            Get
                Return Me.RowVersion
            End Get
            Set(ByVal value As Byte())
                Me.RowVersion = value
            End Set
        End Property
        
        Private Property _OfficeNameImplementation() As String Implements Global.LightSwitchApplication.Office.DetailsClass.IImplementation.OfficeName
            Get
                Return Me.OfficeName
            End Get
            Set(ByVal value As String)
                Me.OfficeName = value
            End Set
        End Property
        
        Private Property _Address1Implementation() As String Implements Global.LightSwitchApplication.Office.DetailsClass.IImplementation.Address1
            Get
                Return Me.Address1
            End Get
            Set(ByVal value As String)
                Me.Address1 = value
            End Set
        End Property
        
        Private Property _Address2Implementation() As String Implements Global.LightSwitchApplication.Office.DetailsClass.IImplementation.Address2
            Get
                Return Me.Address2
            End Get
            Set(ByVal value As String)
                Me.Address2 = value
            End Set
        End Property
        
        Private Property _BuildingCapacityImplementation() As Integer Implements Global.LightSwitchApplication.Office.DetailsClass.IImplementation.BuildingCapacity
            Get
                Return Me.BuildingCapacity
            End Get
            Set(ByVal value As Integer)
                Me.BuildingCapacity = value
            End Set
        End Property
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
    End Class
    
End Namespace

Namespace WindowsEventLogData.Implementation

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Partial Public Class LogEntry
        Implements Global.LightSwitchApplication.LogEntry.DetailsClass.IImplementation

        Private ReadOnly Property _LogEntryIDImplementation() As Integer Implements Global.LightSwitchApplication.LogEntry.DetailsClass.IImplementation.LogEntryID
            Get
                Return Me.LogEntryID
            End Get
        End Property
        
        Private Property _MessageImplementation() As String Implements Global.LightSwitchApplication.LogEntry.DetailsClass.IImplementation.Message
            Get
                Return Me.Message
            End Get
            Set(ByVal value As String)
                Me.Message = value
            End Set
        End Property
        
        Private Property _EventDateTimeImplementation() As Date Implements Global.LightSwitchApplication.LogEntry.DetailsClass.IImplementation.EventDateTime
            Get
                Return Me.EventDateTime
            End Get
            Set(ByVal value As Date)
                Me.EventDateTime = value
            End Set
        End Property
        
        Private Property _EventSourceImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation Implements Global.LightSwitchApplication.LogEntry.DetailsClass.IImplementation.EventSource
            Get
                Return Me.EventSource
            End Get
            Set(ByVal value As Global.Microsoft.LightSwitch.Internal.IEntityImplementation)
                Me.EventSource = DirectCast(value, Global.WindowsEventLogData.Implementation.LogSource)
                If Me.__host IsNot Nothing Then
                    Me.__host.RaisePropertyChanged("EventSource")
                End If
            End Set
        End Property
        
        Private Sub OnSourceNameChanged()
            If Me.__host IsNot Nothing Then
                Me.__host.RaisePropertyChanged("EventSource")
            End If
        End Sub
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Partial Public Class LogSource
        Implements Global.LightSwitchApplication.LogSource.DetailsClass.IImplementation

        Private ReadOnly Property _SourceNameImplementation() As String Implements Global.LightSwitchApplication.LogSource.DetailsClass.IImplementation.SourceName
            Get
                Return Me.SourceName
            End Get
        End Property
        
        Private ReadOnly Property _EventEntriesImplementation() As Global.System.Collections.IEnumerable Implements Global.LightSwitchApplication.LogSource.DetailsClass.IImplementation.EventEntries
            Get
                Return Me.EventEntries
            End Get
        End Property
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
    End Class
    
End Namespace

